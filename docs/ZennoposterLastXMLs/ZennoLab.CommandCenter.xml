<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZennoLab.CommandCenter</name>
    </assembly>
    <members>
        <member name="T:ZennoLab.CommandCenter.AudioPreferences">
            <summary>Represents an AudioContext settings object.</summary>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference,System.String)">Set</see> method.
            <code title="Example" description="" lang="C#">
            // set Chrome useragent
            instance.SetHeader(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField.UserAgent, "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36");
            // set audio context params
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.AudioContextState, "running"); // string value, can take values "suspended", "running" or "closed"
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.BaseLatency, "0.02"); // double value, visible if Chrome useragent is set
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.MaxChannelCount, "10"); // int value
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.SampleRate, "96000"); // int value
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.SmoothingTimeConstant, "0.65"); // double value, can take values from 0 to 1
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference,System.String)">
            <summary>Sets the audio context settings.</summary>
            <param name="preference">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference">ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference</see></para>
            	<para>The setting of audio context.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The value of setting.</para>
            </param>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference,System.String)">Set</see> method.
            <code title="Example" description="" lang="C#">
            // set Chrome useragent
            instance.SetHeader(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField.UserAgent, "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36");
            // set audio context params
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.AudioContextState, "running"); // string value, can take values "suspended", "running" or "closed"
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.BaseLatency, "0.02"); // double value, visible if Chrome useragent is set
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.MaxChannelCount, "10"); // int value
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.SampleRate, "96000"); // int value
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.SmoothingTimeConstant, "0.65"); // double value, can take values from 0 to 1
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.AudioPreferences.Load(System.String)">
            <summary>Loads preferences.</summary>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The preferences in json format.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.AudioPreferences.Save">
            <summary>Saves preferences.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The preferences in json format.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.Classes.BrowserLaunchSettings">
            <summary>
            Base object for browser launch settings.
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.BrowserLaunchSettings.BrowserType">
            <summary>Gets or sets a type of browser to launch.</summary>
            <value>
            	<para>Type: <see cref="P:ZennoLab.CommandCenter.Classes.BrowserLaunchSettings.BrowserType">ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType</see></para>
            </value>
        </member>
        <member name="T:ZennoLab.CommandCenter.Classes.WithoutBrowserBrowserLaunchSettings">
            <summary>
            Browser launch settings for WithoutBrowser
            </summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.Launch(ZennoLab.CommandCenter.Classes.BrowserLaunchSettings)">Launch Method</seealso>
            <example>
            The following example uses <see cref="T:ZennoLab.CommandCenter.Classes.WithoutBrowserBrowserLaunchSettings">WithoutBrowserBrowserLaunchSettings</see> class.
            <code title="Example" description="" lang="C#">
            var settings = ZennoLab.CommandCenter.Classes.BrowserLaunchSettingsFactory.Create(
                       ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType.WithoutBrowser);
            instance.Launch(settings);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.WithoutBrowserBrowserLaunchSettings.UseProfile">
            <summary>Gets or sets wherever or not use current profile.</summary>
            <value>
            	<para>Type: <see cref="!:https://docs.microsoft.com/en-us/dotnet/api/system.boolean">System.Boolean</see></para>
            </value>
        </member>
        <member name="T:ZennoLab.CommandCenter.Classes.BuiltInBrowserLaunchSettings">
            <summary>
            Browser launch settings for built-in types of browsers.
            </summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.Launch(ZennoLab.CommandCenter.Classes.BrowserLaunchSettings)">Launch Method</seealso>
            <example>
            The following example uses <see cref="T:ZennoLab.CommandCenter.Classes.BuiltInBrowserLaunchSettings">BuiltInBrowserLaunchSettings</see> class.
            <code title="Example" description="" lang="C#">
            ZennoLab.CommandCenter.Classes.BuiltInBrowserLaunchSettings settings = 
                (ZennoLab.CommandCenter.Classes.BuiltInBrowserLaunchSettings)
                   ZennoLab.CommandCenter.Classes.BrowserLaunchSettingsFactory.Create(
                       ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType.Chromium);
            settings.BrowserArgs = "--your-arg1 --your-arg2=value";
            settings.CachePath = Path.Combine(project.Directory, "TestProfilePath");
            settings.ConvertProfileFolder = true;
            settings.UseProfile = true;
            instance.Launch(settings);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.BuiltInBrowserLaunchSettings.BrowserArgs">
            <summary>Gets or sets command line arguments for starting browser.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            </value>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.BuiltInBrowserLaunchSettings.CachePath">
            <summary>Gets or sets the path to the folder-profile.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            </value>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.BuiltInBrowserLaunchSettings.ConvertProfileFolder">
            <summary>Gets or sets wherever or not convert CEF profile folder to Chromium profile folder.</summary>
            <value>
            	<para>Type: <see cref="!:https://docs.microsoft.com/en-us/dotnet/api/system.boolean">System.Boolean</see></para>
            </value>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.BuiltInBrowserLaunchSettings.UseProfile">
            <summary>Gets or sets wherever or not use current profile.</summary>
            <value>
            	<para>Type: <see cref="!:https://docs.microsoft.com/en-us/dotnet/api/system.boolean">System.Boolean</see></para>
            </value>
        </member>
        <member name="T:ZennoLab.CommandCenter.Classes.IntegratedBrowserLaunchSettings">
            <summary>
            Browser launch settings for integrated types of browsers.
            </summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.Launch(ZennoLab.CommandCenter.Classes.BrowserLaunchSettings)">Launch Method</seealso>
            <example>
            The following example uses <see cref="T:ZennoLab.CommandCenter.Classes.IntegratedBrowserLaunchSettings">IntegratedBrowserLaunchSettings</see> class.
            <code title="Example" description="" lang="C#">
            ZennoLab.CommandCenter.Classes.IntegratedBrowserLaunchSettings settings = 
                (ZennoLab.CommandCenter.Classes.IntegratedBrowserLaunchSettings)
                   ZennoLab.CommandCenter.Classes.BrowserLaunchSettingsFactory.Create(
                       ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType.ChromiumFromZB);
            settings.IntegrationProfileId = new IntegrationProfileId()
            {
               ProfileId = project.Variables["id"].Value
            };
            instance.Launch(settings);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.IntegratedBrowserLaunchSettings.IntegrationProfileId">
            <summary>Gets or sets integrated profile id object.</summary>
            <value>
            	<para>Type: <see cref="P:ZennoLab.CommandCenter.Classes.IntegratedBrowserLaunchSettings.IntegrationProfileId">ZennoLab.CommandCenter.Classes.IntegrationProfileId</see></para>
            </value>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.IntegratedBrowserLaunchSettings.ProxyOptions">
            <summary>Gets or sets the proxy configuration options for the integration.</summary>
            <value>
            	<para>Type: <see cref="P:ZennoLab.CommandCenter.Classes.IntegratedBrowserLaunchSettings.ProxyOptions">ZennoLab.CommandCenter.Classes.IntegrationProfileId</see></para>
            </value>
        </member>
        <member name="T:ZennoLab.CommandCenter.Classes.BrowserLaunchSettingsFactory">
            <summary>
            Browser launch settings factory. Creates a specific settings object according to the browser type.
            </summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.Launch(ZennoLab.CommandCenter.Classes.BrowserLaunchSettings)">Launch Method</seealso>
            <example>
            The following example uses <see cref="T:ZennoLab.CommandCenter.Classes.BrowserLaunchSettingsFactory">BrowserLaunchSettingsFactory</see> class.
            <code title="Example" description="" lang="C#">
            // Launch build-in Chromium with settings
            {
                ZennoLab.CommandCenter.Classes.BuiltInBrowserLaunchSettings settings = 
                    (ZennoLab.CommandCenter.Classes.BuiltInBrowserLaunchSettings)
                       ZennoLab.CommandCenter.Classes.BrowserLaunchSettingsFactory.Create(
                           ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType.Chromium);
                settings.BrowserArgs = "--your-arg1 --your-arg2=value";
                settings.CachePath = Path.Combine(project.Directory, "TestProfilePath");
                settings.ConvertProfileFolder = true;
                settings.UseProfile = true;
                instance.Launch(settings);
            }
            // Launch integrated browser
            {
                ZennoLab.CommandCenter.Classes.IntegratedBrowserLaunchSettings settings = 
                    (ZennoLab.CommandCenter.Classes.IntegratedBrowserLaunchSettings)
                       ZennoLab.CommandCenter.Classes.BrowserLaunchSettingsFactory.Create(
                           ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType.ChromiumFromZB);
                settings.IntegrationProfileId = new IntegrationProfileId()
                {
                   ProfileId = project.Variables["id"].Value
                };
                instance.Launch(settings);
            }
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Classes.BrowserLaunchSettingsFactory.Create(ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType)">
            <summary>
            Creates a specific settings object according to the browser type.
            </summary>
            <param name="browserType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType">ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType</see></para>
            	<para>The required type of browser to launch.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Classes.BrowserLaunchSettings">>ZennoLab.CommandCenter.Classes.BrowserLaunchSettings</see></para>
            	<para>Browser launch settings object.</para>
            </returns>
        </member>
        <member name="T:ZennoLab.CommandCenter.Classes.GetTrafficSettings">
            <summary>Represents a settings class for the GetTraffic() method.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetTraffic(ZennoLab.CommandCenter.Classes.GetTrafficSettings)">GetTraffic Method</seealso>
            <example>
            The following example uses <see cref="T:ZennoLab.CommandCenter.Classes.GetTrafficSettings">GetTrafficSettings</see> class.
            <code title="Example" description="" lang="C#">
            instance.SetContentPolicy("BlockList", new[] { "mc.yandex.ru" }, null);
            instance.UseTrafficMonitoring = true;
            
            Tab tab = instance.ActiveTab;
            // navigate to url
            instance.ClearCache();
            instance.ClearCookie();
            tab.Navigate("https://lessons.zennolab.com");
            if (tab.IsBusy)
                tab.WaitDownloading();
            ZennoLab.CommandCenter.Classes.GetTrafficSettings getTrafficSettings = new ZennoLab.CommandCenter.Classes.GetTrafficSettings();
            getTrafficSettings.UrlFilters = new[] { "https://lessons.zennolab.com/main.css" };
            getTrafficSettings.HeaderFilters = new[] { "image/png" };
            getTrafficSettings.BodyFilters = new[] { "DOCTYPE HTML PUBLIC" };
            getTrafficSettings.GatherAllTraffic = true;
            // get list of requests by urls, headers and body filter collection
            var traffic = instance.ActiveTab.GetTraffic(getTrafficSettings);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.GetTrafficSettings.UrlFilters">
            <summary>Collection of regexs to filter traffic by url contents. If traffic item match any of regexs, it will put to result.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.GetTrafficSettings.HeaderFilters">
            <summary>Collection of regexs to filter traffic by request or response header contents. If traffic item match any of regexs, it will put to result.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.GetTrafficSettings.BodyFilters">
            <summary>Collection of regexs to filter traffic by request or response body contents. If traffic item match any of regexs, it will put to result.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.GetTrafficSettings.GatherAllTraffic">
            <summary>Display all traffic when using the GetTraffic() method if the variable is true</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.Classes.IntegrationProfileId">
            <summary>
            Integrated profile id object
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.IntegrationProfileId.ProfileId">
            <summary>Gets or sets the profile identificator.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            </value>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.IntegrationProfileId.WorkspaceId">
            <summary>Gets or sets the workspace identificator.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            </value>
        </member>
        <member name="T:ZennoLab.CommandCenter.Classes.IntegrationProxyOptions">
            <summary>
            Proxy options for ZennoPoster integration
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.IntegrationProxyOptions.ProxyUsageKind">
            <summary>
            Kind of proxy overriding
            UseProfileProxy - use proxy that already linked to the profile
            OverrideProxyString - override proxy before start or clear proxy if ProxyOverride is null or empty
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Classes.IntegrationProxyOptions.ProxyOverride">
            <summary>
            Property is used when ProxyUsageKind is OverrideProxyString
            Proxy string to apply to the profile before start
            If value is string.Empty or null then proxy will be cleared
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.CanvasEmulationSettings.DropPotentialRandomlyAlgorithms">
            <summary>
            Ignore randomly generated algorithms
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.CanvasEmulationSettings.UsePostTaskValidation">
            <summary>
            Enables mechanism that puts algorithms in a queue and analyzes the links between them
            </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.CookieContainer">
            <summary>Represents the container of cookies, that synchronizes with an instance.</summary>
            <remarks>This interface can be used in action OwnCode (C# or PHP) of ProjectMaker.</remarks>
            <example>
            The following example uses <see cref="T:ZennoLab.CommandCenter.CookieContainer">CookieContainer</see> class.
            <code title="Example" description="" lang="C#">
            // clear profile cookie container
            project.Profile.CookieContainer.Clear();
            // creates new cookie container
            var cookieContainer = new CookieContainer();
            // http request
            ZennoPoster.HTTP.Request(InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://zennolab.com", cookieContainer: cookieContainer);
            
            // check that the project.Profile.CookieContainer is empty for zennolab.com host
            var strings = project.Profile.CookieContainer.GetPairs("zennolab.com");
            if (items.Count() != 0) throw new Exception("error");
            
            // check that the cookieContainer is NOT empty for zennolab.com host
            strings = cookieContainer.GetPairs("zennolab.com");
            if (items.Count() == 0) throw new Exception("error");
            
            // add the contents of the new container to profile's container
            project.Profile.CookieContainer.Add(cookieContainer);
            
            // check that the project.Profile.CookieContainer is NOT empty for zennolab.com host
            strings = project.Profile.CookieContainer.GetPairs("zennolab.com");
            if (items.Count() == 0) throw new Exception("error");
            
            // check that the project.Profile.CookieContainer is empty for google.com host
            var items = project.Profile.CookieContainer.Get("google.com");
            if (items.Count() != 0) throw new Exception("error");
            
            // navigate to google.com
            instance.ActiveTab.Navigate("http://google.com");
            instance.ActiveTab.WaitDownloading();
            
            // check that the project.Profile.CookieContainer is NOT empty for google.com host
            items = project.Profile.CookieContainer.Get("google.com");
            if (items.Count() == 0) throw new Exception("error");
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Create(System.String,System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Creates a new cookie item.</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The host of cookie. For example "lessons.zennolab.com", ".zennolab.com", etc.</para>
            </param>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path of cookie.</para>
            </param>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of cookie.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The value of cookie.</para>
            </param>
            <param name="expiry">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.datetime.aspx">System.DateTime</see></para>
            	<para>The expiry date of cookie.</para>
            </param>
            <param name="isSecure">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The secure flag of cookie.</para>
            </param>
            <param name="isHttpOnly">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The httpOnly flag of cookie.</para>
            </param>
            <param name="isSession">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The session flag of cookie.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ICookieItem">ICookieItem</see></para>
            	<para>New cookie item object.</para>
            </returns>
            <example>
            The following code example demonstrates the <see cref="o:Create">Create</see> method.
            <code title="Example" description="" lang="C#">
            // create new cookie item
            var item = project.Profile.CookieContainer.Create(".zennolab.com", "/", "asd", "123", DateTime.Now.AddYears(1), false, false, false);
            // add item to container
            project.Profile.CookieContainer.Add(item);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Create(System.String,System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>Creates a new cookie item.</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The host of cookie. For example "lessons.zennolab.com", ".zennolab.com", etc.</para>
            </param>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path of cookie.</para>
            </param>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of cookie.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The value of cookie.</para>
            </param>
            <param name="expiry">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.datetime.aspx">System.DateTime</see></para>
            	<para>The expiry date of cookie.</para>
            </param>
            <param name="isSecure">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The secure flag of cookie.</para>
            </param>
            <param name="isHttpOnly">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The httpOnly flag of cookie.</para>
            </param>
            <param name="isSession">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The session flag of cookie.</para>
            </param>
            <param name="sameSite">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The sameSite of cookie. The sameSite may take values "Strict", "Lax", "None" and "Unspecified". Default value is "Unspecified".</para> 
            </param>
            <param name="priority">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The priority of cookie. The priority may take values "Low", "Medium", "High". Default value is "Medium".</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ICookieItem">ICookieItem</see></para>
            	<para>New cookie item object.</para>
            </returns>
            <example>
            The following code example demonstrates the <see cref="o:Create">Create</see> method.
            <code title="Example" description="" lang="C#">
            // create new cookie item
            var item = project.Profile.CookieContainer.Create(".zennolab.com", "/", "asd", "123", DateTime.Now.AddYears(1), false, false, false);
            // add item to container
            project.Profile.CookieContainer.Add(item);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Add(ZennoLab.InterfacesLibrary.ProjectModel.ICookieItem)">
            <summary>Adds the cookie item to the container.</summary>
            <param name="item">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ICookieItem">ICookieItem</see></para>
            	<para>The cookie item.</para>
            </param>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.CookieContainer.Add(ZennoLab.InterfacesLibrary.ProjectModel.ICookieItem)">Add</see> method.
            <code title="Example" description="" lang="C#">
            // create new cookie item
            var item = project.Profile.CookieContainer.Create(".zennolab.com", "/", "asd", "123", DateTime.Now.AddYears(1), false, false, false);
            // add item to container
            project.Profile.CookieContainer.Add(item);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Add(System.Collections.Generic.IEnumerable{ZennoLab.InterfacesLibrary.ProjectModel.ICookieItem})">
            <summary>Adds the cookie items collection to the container.</summary>
            <param name="items">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx">System.Collection.Generic.IEnumerable</see>&lt;String&gt;</para>
            	<para>The cookie items collection.</para>
            </param>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.CookieContainer.Add(System.Collections.Generic.IEnumerable{ZennoLab.InterfacesLibrary.ProjectModel.ICookieItem})">Add</see> method.
            <code title="Example" description="" lang="C#">
            // create new cookie item
            var item = project.Profile.CookieContainer.Create(".zennolab.com", "/", "asd", "123", DateTime.Now.AddYears(1), false, false, false);
            var item2 = project.Profile.CookieContainer.Create(".zennolab.com", "/", "qwe", "zxc", DateTime.Now.AddYears(1), false, false, false);
            // add item to container
            project.Profile.CookieContainer.Add(new [] { item, item2 });</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Add(ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer)">
            <summary>Adds the contents of an another container to the container.</summary>
            <param name="container">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer">ICookieContainer</see></para>
            	<para>The cookie container.</para>
            </param>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.CookieContainer.Add(ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer)">Add</see> method.
            <code title="Example" description="" lang="C#">
            // create new cookie container
            var container = new CookieContainer();
            // use new cookie container for http request
            ZennoPoster.HTTP.Request(InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://zennolab.com", cookieContainer: container);
            // add the contents of the new container to profile's container
            project.Profile.CookieContainer.Add(container);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Remove(ZennoLab.InterfacesLibrary.ProjectModel.ICookieItem)">
            <summary>Removes the cookie item from the container.</summary>
            <param name="item">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ICookieItem">ICookieItem</see></para>
            	<para>The cookie item.</para>
            </param>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.CookieContainer.Remove(ZennoLab.InterfacesLibrary.ProjectModel.ICookieItem)">Remove</see> method.
            <code title="Example" description="" lang="C#">
            // http request with cookie container
            ZennoPoster.HTTP.Request(InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://zennolab.com", cookieContainer: project.Profile.CookieContainer);
            // get avaliable domains for container
            var domains = project.Profile.CookieContainer.Domains;
            if (domains.Count() > 0)
            {
                var items = project.Profile.CookieContainer.Get(domains.First());
                // remove some cookie from container
                project.Profile.CookieContainer.Remove(items.FirstOrDefault());
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Remove(System.Collections.Generic.IEnumerable{ZennoLab.InterfacesLibrary.ProjectModel.ICookieItem})">
            <summary>Removes the cookie items collection from the container.</summary>
            <param name="items">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx">System.Collection.Generic.IEnumerable</see>&lt;String&gt;</para>
            	<para>The cookie items collection.</para>
            </param>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.CookieContainer.Remove(System.Collections.Generic.IEnumerable{ZennoLab.InterfacesLibrary.ProjectModel.ICookieItem})">Remove</see> method.
            <code title="Example" description="" lang="C#">
            // http request with cookie container
            ZennoPoster.HTTP.Request(InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://zennolab.com", cookieContainer: project.Profile.CookieContainer);
            // get avaliable domains for container
            var domains = project.Profile.CookieContainer.Domains;
            if (domains.Count() > 0)
            {
                var items = project.Profile.CookieContainer.Get(domains.First());
                // remove some cookies from container
                project.Profile.CookieContainer.Remove(items);
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Remove(ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer)">
            <summary>Removes the contents of an another container from the container.</summary>
            <param name="container">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer">ICookieContainer</see></para>
            	<para>The cookie container.</para>
            </param>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.CookieContainer.Add(ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer)">Add</see> method.
            <code title="Example" description="" lang="C#">
            // create new cookie container
            var container = new CookieContainer();
            // use new cookie container for http request
            ZennoPoster.HTTP.Request(InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://zennolab.com", cookieContainer: container);
            // remove the contents of the new container from profile's container
            project.Profile.CookieContainer.Remove(container);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.CookieContainer.Domains">
            <summary>Gets collection of cookie's domains from container.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx">System.Collection.Generic.IEnumerable</see>&lt;String&gt;</para>
            	<para>The collection of domains.</para>
            </value>
            <example>
            he following code example demonstrates the <see cref="P:ZennoLab.CommandCenter.CookieContainer.Domains">Domains</see> property.
            <code title="Example" description="" lang="C#">
            // get the path to log file
            string path = project.LogOptions.LogFile;
            // set the path to log file
            project.LogOptions.LogFile = "X:\\log.txt";
            // enable splitting for log
            project.LogOptions.SplitLogByThread = true; 
            return tmp;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Clear">
            <summary>Clears the contents from the container.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Clear(System.String)">
            <summary>Clears the contents from the container.</summary>
            <param name="domainFilter">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The regular expressions for filtering by domain. If value is null or empty string, then method clears cookies for all domains. The default value is empty string.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Refresh">
            <summary>Replaces the contents of the container with cookies from the instance. Works only for project.Profile.CookieContainer.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Get(System.String)">
            <summary>Gets a collection of cookie items corresponding to the host.</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The host.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx">System.Collection.Generic.IEnumerable</see>&lt;String&gt;</para>
            	<para>The cookie items collection.</para>
            </returns>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.CookieContainer.Get(System.String)">Get</see> method.
            <code title="Example" description="" lang="C#">
            // http request
            ZennoPoster.HTTP.Request(InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://zennolab.com", cookieContainer: project.Profile.CookieContainer);
            // get cookie items
            var items = project.Profile.CookieContainer.Get("zennolab.com");
            // output to log info of cookie item
            foreach(var item in items)
            {
                project.SendInfoToLog(item.Name + " = " + item.Value);
            }
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.GetPairs(System.String)">
            <summary>Gets a collection of cookie strings corresponding to the host. Format is "name=value"</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The host.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx">System.Collection.Generic.IEnumerable</see>&lt;String&gt;</para>
            	<para>The cookie strings collection.</para>
            </returns>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.CookieContainer.GetPairs(System.String)">GetPairs</see> method.
            <code title="Example" description="" lang="C#">
            // http request
            ZennoPoster.HTTP.Request(InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://zennolab.com", cookieContainer: project.Profile.CookieContainer);
            // get cookie items
            var items = project.Profile.CookieContainer.GetPairs("zennolab.com");
            // output to log info of cookie item
            foreach(var item in items)
            {
                project.SendInfoToLog(item);
            }
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Get(System.String,System.String)">
            <summary>Gets a collection of cookie items corresponding to the host and path.</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The host.</para>
            </param>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx">System.Collection.Generic.IEnumerable</see>&lt;String&gt;</para>
            	<para>The cookie items collection.</para>
            </returns>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.CookieContainer.Get(System.String,System.String)">Get</see> method.
            <code title="Example" description="" lang="C#">
            // http request
            ZennoPoster.HTTP.Request(InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://zennolab.com", cookieContainer: project.Profile.CookieContainer);
            // get cookie items
            var items = project.Profile.CookieContainer.Get("zennolab.com", "/");
            // output to log info of cookie item
            foreach(var item in items)
            {
                project.SendInfoToLog(item.Name + " = " + item.Value);
            }
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.GetPairs(System.String,System.String)">
            <summary>Gets a collection of cookie strings corresponding to the host and path. Format is "name=value"</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The host.</para>
            </param>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx">System.Collection.Generic.IEnumerable</see>&lt;String&gt;</para>
            	<para>The cookie strings collection.</para>
            </returns>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.CookieContainer.GetPairs(System.String,System.String)">GetPairs</see> method.
            <code title="Example" description="" lang="C#">
            // http request
            ZennoPoster.HTTP.Request(InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://zennolab.com", cookieContainer: project.Profile.CookieContainer);
            // get cookie items
            var items = project.Profile.CookieContainer.GetPairs("zennolab.com", "/");
            // output to log info of cookie item
            foreach(var item in items)
            {
                project.SendInfoToLog(item);
            }
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Get(System.String,System.String,System.Boolean)">
            <summary>Gets a collection of cookie items corresponding to the host, path and secure flag.</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The host.</para>
            </param>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path.</para>
            </param>
            <param name="isSecure">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The secure flag. The cookie item does not correspond to the isSecure flag if isSecure = false and item.IsSecure = true, otherwise, it correspond.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx">System.Collection.Generic.IEnumerable</see>&lt;String&gt;</para>
            	<para>The cookie items collection.</para>
            </returns>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.CookieContainer.Get(System.String,System.String,System.Boolean)">Get</see> method.
            <code title="Example" description="" lang="C#">
            // http request
            ZennoPoster.HTTP.Request(InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://zennolab.com", cookieContainer: project.Profile.CookieContainer);
            // get cookie items
            var items = project.Profile.CookieContainer.Get("zennolab.com", "/", false);
            // output to log info of cookie item
            foreach(var item in items)
            {
                project.SendInfoToLog(item.Name + " = " + item.Value);
            }
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.GetPairs(System.String,System.String,System.Boolean)">
            <summary>Gets a collection of cookie strings corresponding to the host, path and secure flag. Format is "name=value"</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The host.</para>
            </param>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path.</para>
            </param>
            <param name="isSecure">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The secure flag. The cookie item does not correspond to the isSecure flag if isSecure = false and item.IsSecure = true, otherwise, it correspond.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx">System.Collection.Generic.IEnumerable</see>&lt;String&gt;</para>
            	<para>The cookie strings collection.</para>
            </returns>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.CookieContainer.GetPairs(System.String,System.String,System.Boolean)">GetPairs</see> method.
            <code title="Example" description="" lang="C#">
            // http request
            ZennoPoster.HTTP.Request(InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://zennolab.com", cookieContainer: project.Profile.CookieContainer);
            // get cookie items
            var items = project.Profile.CookieContainer.GetPairs("zennolab.com", "/", false);
            // output to log info of cookie item
            foreach(var item in items)
            {
                project.SendInfoToLog(item);
            }
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Export">
            <summary>Exports the contents of container to the byte array.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte[]</see></para>
            	<para>The byte array representing the contents.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.CookieContainer.Import(System.Byte[])">
            <summary>Imports the contents from the byte array.</summary>
            <param name="cookies">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte[]</see></para>
            	<para>The byte array representing the contents.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.InnerTrafficItem">
            <summary> Represents a traffic item, which contains url, status and etc. information about request. Does not support updating. Use TrafficItem instead</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.Url">
            <summary>Request url.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.Method">
            <summary>Method of request.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.ResultCode">
            <summary>Request status code.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.IsBlocked">
            <summary>Flag is true, if the content policy has blocked this request, otherwise false.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.HasResponse">
            <summary>Flag is true, if the browser recieved a response for the request, otherwise false.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.RequestHeaders">
            <summary>Request headers. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.RequestQuery">
            <summary>Query part of url. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.RequestBody">
            <summary>Request body of POST request. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.RequestReplacedBody">
            <summary>Request body of POST request after replacing by ChangeRequest method, if there were no replacements, then the value will be empty. 
            To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ChangeRequest">ChangeRequest Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.RequestCookies">
            <summary>Request cookies. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.ResponseHeaders">
            <summary>Response headers. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.ResponseBody">
            <summary>Response body of POST request. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.ResponseReplacedBody">
            <summary>Response body of POST request after replacing by ChangeResponse method, if there were no replacements, then the value will be null. 
            To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ChangeResponse">ChangeResponse Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.ResponseCookies">
            <summary>Response cookies. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.ResponseContentType">
            <summary>Response content type. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.ResponseContentCharset">
            <summary>Response content charset. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.InnerTrafficItem.Time">
            <summary>Time (in milliseconds) between sending this request and receiving the response. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.NetworkSettings">
            <summary>Represents a proxy settings object.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetProxy(ZennoLab.CommandCenter.ProxySettings,ZennoLab.CommandCenter.NetworkSettings)">SetProxy Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.ProxySettings">NetworkSettings Class</seealso>
            <example>
            The following example uses <see cref="T:ZennoLab.CommandCenter.NetworkSettings">NetworkSettings</see> class.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance)
            {
                instance.ClearCookie();
                instance.ClearProxy();
                NetworkSettings networkSettings = new NetworkSettings(true, "https://cloudflare-dns.com/dns-query{?dns} https://dns.google/dns-query{?dns}");
                instance.SetProxy(null, networkSettings );
                        
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                        
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.NetworkSettings.EnableDnsOverHttps">
            <summary>The true if DNS over HTTPS mode is Secure; otherwise and default, false.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.NetworkSettings.DnsOverHttpsTemplates">
            <summary>The URI template of the desired DNS-over-HTTPS resolver. To specify multiple DNS-over-HTTPS resolvers, separate the corresponding URI templates with spaces.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.NetworkSettings.#ctor">
            <summary>
            NetworkSettings empty constructor
            </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.NetworkSettings.#ctor(System.Boolean,System.String)">
            <summary>
            NetworkSettings constructor
            </summary>
            <param name="enableDnsOverHttps">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate geolocation according with the ip; otherwise and default, false.</para>
            </param>
            <param name="dnsOverHttpsTemplates">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The URI template of the desired DNS-over-HTTPS resolver. To specify multiple DNS-over-HTTPS resolvers, separate the corresponding URI templates with spaces. 
                    <remarks> If the EnableDnsOverHttps is set to "true" then this policy must be set and not empty. </remarks>	
                </para>
            </param>
        </member>
        <member name="T:ZennoLab.CommandCenter.PluginItem">
            <summary> Represents a plugin item in ZennoPoster browser in navigator.plugins collection </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.PluginItem.Name">
            <summary> Plugin name </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.PluginItem.FileName">
            <summary> Plugin dll file name </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.PluginItem.Description">
            <summary> Description of the plugin </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.PluginItem.Version">
            <summary> Plugin version </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.PluginItem.MimeTypes">
            <summary> Plugin mime types </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.PluginItem.#ctor">
            <summary>Default constructor</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.PluginItem.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="M:ZennoLab.CommandCenter.PluginItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Plugin item constructor
            </summary>
            <param name="name">Plugin name</param>
            <param name="filename">Plugin dll file name </param>
            <param name="description">Description of the plugin</param>
            <param name="version">Plugin version</param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.PluginItem.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{ZennoLab.CommandCenter.PluginMimeType})">
            <summary>
            Plugin item constructor
            </summary>
            <param name="name">Plugin name</param>
            <param name="filename">Plugin dll file name </param>
            <param name="description">Description of the plugin</param>
            <param name="version">Plugin version</param>
            <param name="mimeTypes">Plugin mime types</param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.PluginMimeType">
            <summary> Represents a mime type for plugin item in ZennoPoster browser in navigator.plugins collection </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.PluginMimeType.Type">
            <summary> Mime type </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.PluginMimeType.Description">
            <summary> Myme description </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.PluginMimeType.Extensions">
            <summary> Extensions fo mime type </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.PluginMimeType.#ctor">
            <summary>Default constructor</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.PluginMimeType.#ctor(System.String,System.String,System.String)">
            <summary>
            Plugin myme type constructor
            </summary>
            <param name="type">Mime type name</param>
            <param name="description">Description of the mime type</param>
            <param name="extensions">Extensions for the mime type</param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.ProxyOutputIpResolving.AutoResolving">
            <summary>
            Represents settings for automatic "output" IP resolving for proxies. Derives from <see cref="T:ZennoLab.CommandCenter.ProxyOutputIpResolving.ResolvingBase"/>
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxyOutputIpResolving.AutoResolving.IgnoreErrors">
            <summary>
            Whether to ignore errors or not. If errors are ignored, then there's no guarantee that emulations are set up correctly.
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ProxyOutputIpResolving.AutoResolving.#ctor(System.Boolean)">
            <summary>
            AutoResolving constructor
            </summary>
            <param name="ignoreErrors">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>Whether to ignore errors or not. If errors are ignored, then there's no guarantee that emulations are set up correctly.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.ProxyOutputIpResolving.ManualResolving">
            <summary>
            Represents settings for manual "output" IP resolving for proxies. Derives from <see cref="T:ZennoLab.CommandCenter.ProxyOutputIpResolving.ResolvingBase"/>
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxyOutputIpResolving.ManualResolving.OutputIp">
            <summary>
            "Output" IP for proxy
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ProxyOutputIpResolving.ManualResolving.#ctor(System.String)">
            <summary>
            ManualResolving constructor
            </summary>
            <param name="outputIp">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>"Output" IP for proxy</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.ProxyOutputIpResolving.ResolvingBase">
            <summary>
            Base abstract class that represents rules for "output" ip resolving for proxy.
            </summary>
            <seealso cref="T:ZennoLab.CommandCenter.ProxyOutputIpResolving.AutoResolving"> - class for auto resolving</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.ProxyOutputIpResolving.ManualResolving"> - class for manual resolving</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxyOutputIpResolving.ResolvingBase.ResolvingType">
            <summary>
            Type of "output" IP resolving
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ProxyOutputIpResolving.ResolvingBase.#ctor(ZennoLab.CommandCenter.ProxyOutputIpResolving.ResolvingType)">
            <summary>
            Protected constructor
            </summary>
            <param name="resolvingType"></param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="F:ZennoLab.CommandCenter.ProxyOutputIpResolving.ResolvingBase.Default">
            <summary>
            Default rules for resolving: <see cref="T:ZennoLab.CommandCenter.ProxyOutputIpResolving.AutoResolving"/> with errors ignored/>
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.ProxyOutputIpResolving.ResolvingType">
            <summary>
            Type of "output" IP resolving for proxies.
            </summary>
            <seealso cref="T:ZennoLab.CommandCenter.ProxyOutputIpResolving.AutoResolving"/>
            <seealso cref="T:ZennoLab.CommandCenter.ProxyOutputIpResolving.ManualResolving"/>
        </member>
        <member name="T:ZennoLab.CommandCenter.ProxySettings">
            <summary>Represents a proxy settings object.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetProxy(ZennoLab.CommandCenter.ProxySettings,ZennoLab.CommandCenter.NetworkSettings)">SetProxy Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.NetworkSettings">NetworkSettings Class</seealso>
            <example>
            The following example uses <see cref="T:ZennoLab.CommandCenter.ProxySettings">ProxySettings</see> class.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance)
            {
                instance.ClearCookie();
                instance.ClearProxy();
                ProxySettings proxySettings = new ProxySettings("http://174.59.74.190:1686", false, true, true, false)
                {
                    IpResolving = new ZennoLab.CommandCenter.ProxyOutputIpResolving.AutoResolving(ignoreErrors: false),
                };
            
                instance.SetProxy(proxySettings, null);
                        
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                        
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxySettings.Ip">
            <summary>The IP address for the proxy.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxySettings.Port">
            <summary>The port for the instance.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxySettings.Type">
            <summary>The type of proxy. It's can be http, socks4 or socks5</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxySettings.Login">
            <summary>The login for authorization.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxySettings.Password">
            <summary>The password for authorization.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxySettings.UseProxifier">
            <summary>The true if use proxifier; otherwise and default, false.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxySettings.EmulateGeolocation">
            <summary>The true if need emulate geolocation according with the ip; otherwise and default, false.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxySettings.EmulateTimezone">
            <summary>The true if need emulate timezone according with the ip; otherwise and default, false.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxySettings.EmulateWebrtc">
            <summary>The true if need emulate webrtc addresses according with the ip; otherwise and default, false.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ProxySettings.IpResolving">
            <summary>
            Rules for resolving "output" IP of proxy.
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="F:ZennoLab.CommandCenter.ProxySettings.Exclusions">
            <summary>
            The list of the URL regex templates not to use proxy for.
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ProxySettings.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            ProxySettings simple constructor
            </summary>
            <param name="proxyString">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The parameters of proxy. This string should has the follow format: [protocol://][(login):(password)@](ip):(port). For example: socks5://192.168.0.1:80</para>
            </param>
            <param name="useProxifier">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use proxifier; otherwise and default, false.</para>
            </param>
            <param name="emulateGeolocation">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate geolocation according with the ip; otherwise and default, false.</para>
            </param>
            <param name="emulateTimezone">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate timezone according with the ip; otherwise and default, false.</para>
            </param>
            <param name="emulateWebrtc">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate webrtc addresses according with the ip; otherwise and default, false.</para>
            </param>
        </member>
        <member name="M:ZennoLab.CommandCenter.ProxySettings.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            ProxySettings detailed constructor
            </summary>
            <param name="ip">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The IP address for the proxy.</para>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port for the instance.</para>
            </param>
            <param name="type">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of proxy. It's can be http, socks4 or socks5</para>
            </param>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login for authorization.</para>
            </param>
            <param name="password">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password for authorization.</para>
            </param>
            <param name="useProxifier">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use proxifier; otherwise and default, false.</para>
            </param>
            <param name="emulateGeolocation">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate geolocation according with the ip; otherwise and default, false.</para>
            </param>
            <param name="emulateTimezone">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate timezone according with the ip; otherwise and default, false.</para>
            </param>
            <param name="emulateWebrtc">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate webrtc addresses according with the ip; otherwise and default, false.</para>
            </param>
        </member>
        <member name="T:ZennoLab.CommandCenter.TrafficItem">
            <summary> Represents a traffic item, which contains url, status and etc. information about request. Supports updating.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.Url">
            <summary>Request url.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.Method">
            <summary>Method of request.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.ResultCode">
            <summary>Request status code.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.IsBlocked">
            <summary>Flag is true, if the content policy has blocked this request, otherwise false.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.HasResponse">
            <summary>Flag is true, if the browser recieved a response for the request, otherwise false.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.RequestHeaders">
            <summary>Request headers. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.RequestQuery">
            <summary>Query part of url. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.RequestBody">
            <summary>Request body of POST request. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.RequestReplacedBody">
            <summary>Request body of POST request after replacing by ChangeRequest method, if there were no replacements, then the value will be empty. 
            To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ChangeRequest">ChangeRequest Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.RequestCookies">
            <summary>Request cookies. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.ResponseHeaders">
            <summary>Response headers. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.ResponseBody">
            <summary>Response body of POST request. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.ResponseReplacedBody">
            <summary>Response body of POST request after replacing by ChangeResponse method, if there were no replacements, then the value will be null. 
            To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ChangeResponse">ChangeResponse Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.ResponseCookies">
            <summary>Response cookies. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.ResponseContentType">
            <summary>Response content type. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.ResponseContentCharset">
            <summary>Response content charset. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.Time">
            <summary>Time (in milliseconds) between sending this request and receiving the response. To use this property, set Instance.UseTrafficMonitoring to true.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.TrafficItem.ErrorDetected">
            <summary>Gets information about the error detected in the performance last refresh command.</summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.TrafficItem.Refresh">
            <summary>Updates this TrafficItem object.</summary>
            <returns>
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>Whether the new data was received.</para>
            </returns>
        </member>
        <member name="M:ZennoLab.CommandCenter.TrafficItem.WaitResponseAsync(System.Int32,System.Int32)">
            <summary>Asynchronous method that refreshes this TrafficItem until the response arrives or error acquires</summary>
            <param name="timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The maximum timeout (in seconds) to refresh this InnerTrafficItem</para>
            </param>
            <param name="delayBetweenChecks">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The delay (in seconds) between refreshes</para>
            </param>
        </member>
        <member name="M:ZennoLab.CommandCenter.TrafficItem.WaitResponse(System.Int32,System.Int32)">
            <summary>Synchronous method that refreshes this TrafficItem until the response arrives or error acquires</summary>
            <param name="timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The maximum timeout (in seconds) to refresh this InnerTrafficItem</para>
            </param>
            <param name="delayBetweenChecks">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The delay (in seconds) between refreshes</para>
            </param>
        </member>
        <member name="T:ZennoLab.CommandCenter.ShaderPrecisionFormat">
            <summary>Represents a shader precision format item</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ShaderPrecisionFormat.Precision">
            <summary>
            The number of bits of precision that can be represented. For integer formats this value is always 0
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.ShaderPrecisionFormat.RangeMin">
            <summary>
            The base 2 log of the absolute value of the minimum value that can be represented.
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.ShaderPrecisionFormat.RangeMax">
            <summary>
            The base 2 log of the absolute value of the maximum value that can be represented.
            </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ShaderPrecisionFormat.#ctor(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            ShaderPrecisionFormat constructor
            </summary>
            <param name="precision"></param>
            <param name="rangeMin"></param>
            <param name="rangeMax"></param>
        </member>
        <member name="T:ZennoLab.CommandCenter.WebGLPreferences">
            <summary>Represents an WebGLContext settings object.</summary>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference,System.String)">Set</see> method.
            <code title="Example" description="" lang="C#">
            // set Chrome useragent
            instance.SetHeader(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField.UserAgent, "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36");
            // set webgl context params
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.Renderer, "WebKit WebGL");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.Vendor, "WebKit");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.Version, "WebGL 1.0 (OpenGL ES 2.0 Chromium)");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.ShadingLanguageVersion, "WebGL GLSL ES 1.0 (OpenGL ES GLSL ES 1.0 Chromium)");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.UnmaskedRenderer, "Google Inc.");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.UnmaskedVendor, "ANGLE (NVIDIA GeForce GT 630 Direct3D11 vs_5_0 ps_5_0)");
            // set webgl context extensions
            var extensions = new List&lt;ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension&gt;();
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.ANGLE_instanced_arrays);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_blend_minmax);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_color_buffer_float);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_color_buffer_half_float);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_frag_depth);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_sRGB);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_shader_texture_lod);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_texture_filter_anisotropic);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_disjoint_timer_query);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.OES_element_index_uint);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.OES_standard_derivatives);
            instance.WebGLPreferences.SetExtensions(extensions);
            // set webgl shader settings
            instance.WebGLPreferences.SetShaderPrecisionFormat(ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType.Fragment, ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType.HighInt, new ShaderPrecisionFormat(31, 31, 0));
            instance.WebGLPreferences.SetShaderPrecisionFormat(ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType.Vertex, ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType.MediumInt, new ShaderPrecisionFormat(31, 31, 0));
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference,System.String)">
            <summary>Sets the webgl context settings.</summary>
            <param name="preference">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference">ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference</see></para>
            	<para>The setting of webgl context.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The value of setting.</para>
            </param>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference,System.String)">Set</see> method.
            <code title="Example" description="" lang="C#">
            // set Chrome useragent
            instance.SetHeader(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField.UserAgent, "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36");
            // set webgl context params
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.Renderer, "WebKit WebGL");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.Vendor, "WebKit");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.Version, "WebGL 1.0 (OpenGL ES 2.0 Chromium)");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.ShadingLanguageVersion, "WebGL GLSL ES 1.0 (OpenGL ES GLSL ES 1.0 Chromium)");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.UnmaskedRenderer, "Google Inc.");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.UnmaskedVendor, "ANGLE (NVIDIA GeForce GT 630 Direct3D11 vs_5_0 ps_5_0)");
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.WebGLPreferences.SetExtensions(System.Collections.Generic.IEnumerable{ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension})">
            <summary>Sets the webgl context extensions.</summary>
            <param name="extensions">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>The value of setting.</para>
            </param>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.WebGLPreferences.SetExtensions(System.Collections.Generic.IEnumerable{ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension})">SetExtensions</see> method.
            <code title="Example" description="" lang="C#">
            // set Chrome useragent
            instance.SetHeader(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField.UserAgent, "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36");
            // set webgl context extensions
            var extensions = new List&lt;ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension&gt;();
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.ANGLE_instanced_arrays);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_blend_minmax);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_color_buffer_float);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_color_buffer_half_float);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_frag_depth);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_sRGB);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_shader_texture_lod);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_texture_filter_anisotropic);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.EXT_disjoint_timer_query);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.OES_element_index_uint);
            extensions.Add(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLExtension.OES_standard_derivatives);
            instance.WebGLPreferences.SetExtensions(extensions);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.WebGLPreferences.SetShaderPrecisionFormat(ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType,ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType,ZennoLab.CommandCenter.ShaderPrecisionFormat)">
            <summary>Sets the vertex shader precision format.</summary>
            <param name="shaderType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType">ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType</see></para>
            	<para>The shader type.</para>
            </param>
            <param name="precisionType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType">ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType</see></para>
            	<para>The precision type.</para>
            </param>
            <param name="format">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.ShaderPrecisionFormat">ZennoLab.CommandCenter.ShaderPrecisionFormat</see></para>
            	<para>The object that represent format of the precision type.</para>
            </param>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.WebGLPreferences.SetShaderPrecisionFormat(ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType,ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType,ZennoLab.CommandCenter.ShaderPrecisionFormat)">SetShaderPrecisionFormat</see> method.
            <code title="Example" description="" lang="C#">
            // set mobile useragent
            instance.SetHeader(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField.UserAgent, "Mozilla/5.0 (Android 8.0.0; Mobile; rv:57.0) Gecko/57.0 Firefox/57.0");
            // set webgl shader settings
            instance.WebGLPreferences.SetShaderPrecisionFormat(ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType.Fragment, ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType.MediumFloat, new ShaderPrecisionFormat(15, 15, 10));
            instance.WebGLPreferences.SetShaderPrecisionFormat(ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType.Fragment, ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType.LowFloat, new ShaderPrecisionFormat(15, 15, 10));
            instance.WebGLPreferences.SetShaderPrecisionFormat(ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType.Fragment, ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType.HighInt, new ShaderPrecisionFormat(31, 31, 0));
            instance.WebGLPreferences.SetShaderPrecisionFormat(ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType.Fragment, ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType.MediumInt, new ShaderPrecisionFormat(15, 15, 0));
            instance.WebGLPreferences.SetShaderPrecisionFormat(ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType.Fragment, ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType.LowInt, new ShaderPrecisionFormat(15, 15, 0));
            instance.WebGLPreferences.SetShaderPrecisionFormat(ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType.Vertex, ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType.HighInt, new ShaderPrecisionFormat(31, 31, 0));
            instance.WebGLPreferences.SetShaderPrecisionFormat(ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType.Vertex, ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType.MediumInt, new ShaderPrecisionFormat(31, 31, 0));
            instance.WebGLPreferences.SetShaderPrecisionFormat(ZennoLab.InterfacesLibrary.Enums.Browser.ShaderType.Vertex, ZennoLab.InterfacesLibrary.Enums.Browser.ShaderPrecisionType.LowInt, new ShaderPrecisionFormat(31, 31, 0));
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.WebGLPreferences.SetAvailiableContexts(System.Collections.Generic.IEnumerable{ZennoLab.InterfacesLibrary.Enums.Browser.CanvasContext})">
            <summary>Sets the canvas availiable contexts.</summary>
            <param name="contexts">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>The value of setting.</para>
            </param>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.WebGLPreferences.SetAvailiableContexts(System.Collections.Generic.IEnumerable{ZennoLab.InterfacesLibrary.Enums.Browser.CanvasContext})">SetAvailiableContexts</see> method.
            <code title="Example" description="" lang="C#">
            // set availiable contexts
            var contexts = new List&lt;ZennoLab.InterfacesLibrary.Enums.Browser.CanvasContext&gt;();
            contexts.Add(ZennoLab.InterfacesLibrary.Enums.Browser.CanvasContext.Canvas2D);
            contexts.Add(ZennoLab.InterfacesLibrary.Enums.Browser.CanvasContext.WebGL1);
            instance.WebGLPreferences.SetAvailiableContexts(contexts);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.WebGLPreferences.Load(System.String)">
            <summary>Loads preferences.</summary>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The preferences in json format.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.WebGLPreferences.Save">
            <summary>Saves preferences.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The preferences in json format.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.WebRtcDeviceItem.Name">
            <summary> Device name </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.WebRtcDeviceItem.Id">
            <summary> Device id </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.WebRtcDeviceItem.Kind">
            <summary> Kind of device </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.WebRtcDeviceItem.#ctor">
            <summary>Default constructor</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.WebRtcDeviceItem.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="device"></param>
        </member>
        <member name="M:ZennoLab.CommandCenter.WebRtcDeviceItem.#ctor(System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Browser.WebRtcDeviceKind)">
            <summary>
            WebRtc device item constructor
            </summary>
            <param name="name">Device name</param>
            <param name="id">Device id</param>
            <param name="kind">Device kind</param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.Document">
            <summary>Represents a document on a Web page. Contains the methods to search for html elements, gets or sets of values.</summary>
            <remarks>This class does not contain constructors.The documents is available only from the <see cref="T:ZennoLab.CommandCenter.Tab">Tab</see> object or the <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object. The <see cref="T:ZennoLab.CommandCenter.Document">Document</see>
            class contain the properties such as <see cref="P:ZennoLab.CommandCenter.Document.ErrorDetected">ErrorDetected</see>, <see cref="P:ZennoLab.CommandCenter.Document.IsNull">IsNull</see> and <see cref="P:ZennoLab.CommandCenter.Document.IsVoid">IsVoid</see>. Their use necessary
            for the correct work of your code.</remarks>
            <seealso cref="T:ZennoLab.CommandCenter.Tab">Tab Class</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement Class</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.Instance">Instance Class</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection Class</seealso>
            <example>
            This example uses the <see cref="T:ZennoLab.CommandCenter.Document">Document</see> object to search for html elements and setting their values​​.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get main document
                Document doc = tab.MainDocument;
                
                // find element by attribute
                HtmlElement he = doc.FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                if (he.IsVoid) return -1;
                // set value
                he.SetValue("true", "Middle", true);
                
                // find element by name
                he = doc.FindElementByName("rad");
                if (he.IsVoid) return -1;
                
                // set value
                he.SetValue("0", "Middle", true);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get main document
                $doc = $tab-&gt;MainDocument;
                
                // find element by attribute
                $he = $doc-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                if ($he-&gt;IsVoid) return -1;
                // set value
                $he-&gt;SetValue("true", "Middle", true);
                
                // find element by name
                $he = $doc-&gt;FindElementByName("rad");
                if ($he-&gt;IsVoid) return -1;
                
                // set value
                $he-&gt;SetValue("0", "Middle", true);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.IsVoid">
            <summary>Gets the specified document is void or not.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if document do not represented on the server; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Document.IsNull">IsNull Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.IsVoid">IsVoid</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookies
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get document
                Document doc = tab.MainDocument;
                
                // if document is void then exit
                if (doc.IsVoid) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookies
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get document
                $doc = $tab-&gt;MainDocument;
                
                // if document is void then exit
                if ($doc-&gt;IsVoid) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.ErrorDetected">
            <summary>Gets information about the error detected in the performance last command.</summary>
            <remarks>If the <see cref="T:ZennoLab.CommandCenter.Document">Document</see> object does not indicate to the real html document of dom model then this property is true. Also objects of this class contains
            <see cref="P:ZennoLab.CommandCenter.Document.IsNull">IsNull</see> and <see cref="P:ZennoLab.CommandCenter.Document.IsVoid">IsVoid</see> properties for identification of documents's existence. Almost all classes of
            <see cref="N:ZennoLab.CommandCenter">ZennoLab.CommandCenter</see> contains such properties. Use it for the correct execution of the code.</remarks>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if error detected in the performance last command; otherwise, false.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.ErrorDetected">ErrorDetected</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookies
                instance.ClearCookie();
                
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get document
                Document doc = tab.MainDocument;
                
                // if error detected in document the exit
                if (doc.ErrorDetected) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookies
                $instance-&gt;ClearCookie();
                
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get document
                $doc = $tab-&gt;MainDocument;
                
                // if error detected in document the exit
                if ($doc-&gt;ErrorDetected) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.ZP_ID">
            <summary>Gets the ID which represents document on the server.</summary>
            <remarks>It is used only for the technical purposes</remarks>
            <value>
            	<para>Type: System.Int32</para>
            	<para>Document ID</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.ParentTab">
            <summary>Gets parent tab of the document.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Tab">Zennolab.CommandCenter.Tab</see></para>
            	<para>The parent tab of the document.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.ParentTab">ParentTab</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get parent tab of document
            Tab pTab = doc.ParentTab;</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get parent tab of document
            $pTab = $doc-&gt;ParentTab;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.ParentDocument">
            <summary>Gets parent document of the document.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Document">Zennolab.CommandCenter.Document</see></para>
            	<para>The parent document of the document.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.ParentDocument">ParentDocument</see> property.
            <code title="Example" description="" lang="C#">
            // get element
            var el = tab.FindElementById("arrow");
             
            // get parent document of document
            var pDoc = el.ParentDocument.ParentDocument;</code><code title="Example2" description="" lang="PHP">
            // get element
            $el = $tab-&gt;FindElementById("arrow");
             
            // get parent tab of document
            $pDoc = $el-&gt;ParentDocument-&gt;ParentDocument;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.Body">
            <summary>Gets the body of the document.</summary>
            <value>
            	<para>Type <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The body of the document.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Document.MainForm">MainForm Property</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement Class</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Document.Head">Head Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.Body">Body</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get thew body of the main document
            HtmlElement body = doc.Body;</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get thew body of the main document
            $body = $doc-&gt;Body;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.Head">
            <summary>Gets the head element of the document.</summary>
            <value>
            	<para>Type <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The head element of the document.</para>
            </value>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement Class</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Document.Body">Body Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.Head">Head</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get head of document
            HtmlElement head = doc.Head;</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get head of document
            $head = $doc-&gt;Head;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.MainForm">
            <summary>Gets the first form the document.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first form of the document.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Document.Forms">Forms Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.MainForm">MainForm</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get the main form
            HtmlElement mainForm = doc.MainForm;</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get the main form
            $mainForm = $doc-&gt;MainForm;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.Forms">
            <summary>Gets all forms of the document.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>A collection that contains all forms of the document.</para>
            </value>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Document.MainForm">MainForm Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.Forms">Forms</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get collection of all forms
            HtmlElementCollection heCol = doc.Forms;</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get collection of all forms
            $heCol = $doc-&gt;Forms;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.FirstChild">
            <summary>Gets the first child element of the document.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first child element.</para>
            </value>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement Class</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.FirstChild">FirstChild</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get first child
            HtmlElement he = doc.FirstChild;</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get first child
            $he = $doc-&gt;FirstChild;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.URL">
            <summary>Gets the URL of the document.</summary>
            <value>
            	<para>Type <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The URL of the document.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Document.Domain">Domain Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Document.MainDomain">MainDomain Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.URL">URL</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get the url
            string url = doc.URL;</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get the url
            $url = $doc-&gt;URL;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.Domain">
            <summary>Gets the current domain of the document.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string that contains the current domain.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.Domain">Domain</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get domain
            string domain = doc.Domain;</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get domain
            $domain = $doc-&gt;Domain;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.MainDomain">
            <summary>Gets the current main domain of the document.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string that contains the current main domain.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Document.Domain">Domain Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.Domain">MainDomain</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get the main domain
            string domain = doc.MainDomain;</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get the main domain
            $domain = $doc-&gt;MainDomain;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.Height">
            <summary>Gets the height of the document.</summary>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see><br/>
            The height of the document in pixels.</value>
            <seealso cref="P:ZennoLab.CommandCenter.Document.Width">Width Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.Height">Height</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get the height of document
            int height = doc.Height;</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get the height of document
            $height = $doc-&gt;Height;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.Width">
            <summary>Gets the width of the document.</summary>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see><br/>
            The width of the document in pixels.</value>
            <seealso cref="P:ZennoLab.CommandCenter.Document.Height">Height Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.Width">Width</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get width of the document
            int width = doc.Width;</code><code title="Example2" description="" lang="PHP">
            $doc = $tab-&gt;MainDocument;
                    
            $width = $doc-&gt;Width;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.IsNull">
            <summary>Gets a value that indicates whether or not the value of the document is null value.</summary>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see><br/>
            true if the document value is null, otherwise false.</value>
            <seealso cref="P:ZennoLab.CommandCenter.Document.IsVoid">IsVoid Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.IsNull">IsNull</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookies
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get document
                Document doc = tab.MainDocument;
                
                // if document is null then exit
                if (doc.IsNull) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookies
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get document
                $doc = $tab-&gt;MainDocument;
                
                // if document is null then exit
                if ($doc-&gt;IsNull) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.ReadyState">
            <summary>Gets the state of the document.</summary>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see><br/>
            The state of document as string.</value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.ReadyState">ReadyState</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get ReadyState of the document
            if(doc.ReadyState != "complete") return -1;</code><code title="Example2" description="" lang="PHP">
            $doc = $tab-&gt;MainDocument;
                    
            if($doc-&gt;ReadyState != "complete") return -1;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.Referrer">
            <summary>Gets the URI of the page that linked to this page.</summary>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see><br/>
            The Referrer URI of document as string.</value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.Referrer">Referrer</see> property.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get Referrer of the document
            var rUri = doc.Referrer;</code><code title="Example2" description="" lang="PHP">
            $doc = $tab-&gt;MainDocument;
                    
            $rUri = $doc-&gt;Referrer;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Document.DisplacementInTabWindow">
            <summary>Gets the displacement of the upper left corner relative to the tab's window.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.drawing.point.aspx">System.Drawing.Point</see></para>
            	<para>The point of the upper left corner.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.DisplacementInTabWindow">DisplacementInTabWindow</see> property.
            <code title="Example" description="" lang="C#">
            using System.Drawing;
            ...
            // get document
            Document doc = tab.MainDocument;
             
            // get the displacement in tab for main document
            Point point = doc.DisplacementInTabWindow;</code><code title="Example2" description="" lang="PHP">
            use System\Drawing;
            ...
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get the displacement in tab for main document
            $point = $doc-&gt;DisplacementInTabWindow;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.GetElementFromPoint(System.Int32,System.Int32)">
            <summary>Returns the html element located at specified coordinates.</summary>
            <param name="x">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The coordinate of x.</para>
            </param>
            <param name="y">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The coordinate of y.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The element located at specified coordinates.</para>
            </returns>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookies 
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get document
                Document doc = tab.MainDocument;
                
                // get element from point
                HtmlElement he = doc.GetElementFromPoint(50, 50);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookies 
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get document
                $doc = $tab-&gt;MainDocument;
                
                // get element from point
                $he = $doc-&gt;GetElementFromPoint(50, 50);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>Searches for an element by the attribute, and returns the first occurrence.</summary>
            <param name="tags">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tags for search the element. If the count of tags is more than one then they are through ";".</para>
            </param>
            <param name="attrName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute's name.</para>
            </param>
            <param name="attrValue">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute's value.</para>
            </param>
            <param name="searchKind">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>This parameter can take the following values​​: "text", "notext" and "regexp".</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The item number in a collection of matching items.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the attribute, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                         
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                        
                // find element using "text" parameter
                HtmlElement he = tab.MainDocument.FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                if (he.IsVoid) return -1;
                // set value
                he.SetValue("True", instance.EmulationLevel, false);
                        
                // find element using "regexp" parameter
                he = tab.MainDocument.FindElementByAttribute("input:radio", "fulltag", "input:radio", "regexp", 0);
                if (he.IsVoid) return -1;
                // set value
                he.SetValue("0", instance.EmulationLevel, false);
                         
                // find element using "notext" parameter
                he = tab.MainDocument.FindElementByAttribute("textarea", "top", "288", "notext", 0);
                if (he.IsVoid) return -1;
                // set value
                he.SetValue("simple text", instance.EmulationLevel, false);
                        
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                         
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                        
                // find element using "text" parameter
                $he = $tab-&gt;MainDocument-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                if ($he-&gt;IsVoid) return -1;
                // set value
                $he-&gt;SetValue("True", $instance-&gt;EmulationLevel, false);
                        
                // find element using "regexp" parameter
                $he = $tab-&gt;MainDocument-&gt;FindElementByAttribute("input:radio", "fulltag", "input:radio", "regexp", 0);
                if ($he-&gt;IsVoid) return -1;
                // set value
                $he-&gt;SetValue("0", $instance-&gt;EmulationLevel, false);
                         
                // find element using "notext" parameter
                $he = $tab-&gt;MainDocument-&gt;FindElementByAttribute("textarea", "top", "288", "notext", 0);
                if ($he-&gt;IsVoid) return -1;
                // set value
                $he-&gt;SetValue("simple text", $instance-&gt;EmulationLevel, false);
                        
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">
            <summary>Searches for all elements by the attribute.</summary>
            <param name="tags">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tags for search the elements. If the number of tags is more than one then they are through ";".</para>
            </param>
            <param name="attrName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute name.</para>
            </param>
            <param name="attrValue">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute value.</para>
            </param>
            <param name="searchKind">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>This parameter can take the following values​​: "text", "notext" and "regexp".</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the attribute, if found; otherwise, the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property is
            "0".<br/></para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookies
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get document
                Document doc = tab.MainDocument;
                
                // find element by attribute
                HtmlElementCollection heCol = doc.FindElementsByAttribute("input:checkbox", "fulltag", "input:checkbox", "text");
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookies
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get document
                $doc = $tab-&gt;MainDocument;
                
                // find element by attribute
                $heCol = $doc-&gt;FindElementsByAttribute("input:checkbox", "fulltag", "input:checkbox", "text");
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">
            <summary>Searches for an element by the ID, and returns the first occurrence.</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The ID that defines search condition of HTML elements.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the ID, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">FindElementById</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find html element by id
                HtmlElement he = tab.MainDocument.FindElementById("overview");
                if (he.IsVoid) return -1;
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find html element by id
                $he = $tab-&gt;MainDocument-&gt;FindElementById("overview");
                if ($he-&gt;IsVoid) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">
            <summary>Searches for all elements by the ID.</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The ID that defines search condition of HTML elements.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the ID, if found; otherwise, the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property is "0".</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">FindElementsById</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookies
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get document
                Document doc = tab.MainDocument;
                
                // find element by id
                HtmlElementCollection heCol = doc.FindElementsById("overview");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookies
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get document
                $doc = $tab-&gt;MainDocument;
                
                // find element by id
                $heCol = $doc-&gt;FindElementsById("overview");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">
            <summary>Searches for an element by the name, and returns the first occurrence.</summary>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name that defines search condition of HTML elements.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the name, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">FindElementByName</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find html element by name
                HtmlElement he = tab.MainDocument.FindElementByName("text");
                if (he.IsVoid) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find html element by name
                $he = $tab-&gt;MainDocument-&gt;FindElementByName("text");
                if ($he-&gt;IsVoid) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">
            <summary>Searches for all elements by the name.</summary>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name that defines search condition of HTML elements.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the name, if found; otherwise, the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property is
            "0".</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">FindElementsByName</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookies
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get document    
                Document doc = tab.MainDocument;
                
                // find element by name
                HtmlElementCollection heCol = doc.FindElementsByName("text");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookies
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get document    
                $doc = $tab-&gt;MainDocument;
                
                // find element by name
                $heCol = $doc-&gt;FindElementsByName("text");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">
            <summary>Searches for an element by the tag.</summary>
            <param name="tag">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tag for search the element.</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The item number in a collection of matching items.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the tag, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">FindElementByTag</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find html element by tag
                HtmlElement he = tab.MainDocument.FindElementByTag("input:checkbox", 0);
                 if (he.IsVoid) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find html element by tag
                $he = $tab-&gt;MainDocument-&gt;FindElementByTag("input:checkbox", 0);
                 if ($he-&gt;IsVoid) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">
            <summary>Searches for all elements by the tags.</summary>
            <param name="tags">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tags for search the elements. If the number of tags is more than one then they are through ";".</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the tags, if found; otherwise, the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property is
            "0".</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">FindElementsByTags</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookies
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get document
                Document doc = tab.MainDocument;
                
                // find element by tag
                HtmlElementCollection heCol1 = doc.FindElementsByTags("input:checkbox");
                
                // find element by tags
                HtmlElementCollection heCol2 = doc.FindElementsByTags("input:checkbox;input:radio");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookies
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get document
                $doc = $tab-&gt;MainDocument;
                
                // find element by tag
                $heCol1 = $doc-&gt;FindElementsByTags("input:checkbox");
                
                // find element by tags
                $heCol2 = $doc-&gt;FindElementsByTags("input:checkbox;input:radio");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.FindElementByXPath(System.String,System.Int32)">
            <summary>Searches for an element by the xpath.</summary>
            <param name="xpath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tag for search the element.</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The item number in a collection of matching items.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the tag, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">FindElementByTag</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find html element by xpath
                HtmlElement he = tab.MainDocument.FindElementByXPath("/html/body/div/div[@class]", 0);
                if (he.IsVoid) return -2;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find html element by xpath
                $he = $tab-&gt;MainDocument-&gt;FindElementByXPath("/html/body/div/div[@class]", 0);
                if ($he-&gt;IsVoid) return -2;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.FindElementsByXPath(System.String)">
            <summary>Searches for all elements by the xpath.</summary>
            <param name="xpath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>XPath for search the elements.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the tags, if found; otherwise, the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property is
            "0".</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">FindElementsByTags</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookies
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get document
                Document doc = tab.MainDocument;
                
                // find element by xpath
                HtmlElementCollection heCol1 = doc.FindElementsByXPath("/html/body/div/div[@class]");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookies
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get document
                $doc = $tab-&gt;MainDocument;
                
                // find element by xpath
                $heCol1 = $doc-&gt;FindElementsByXPath("/html/body/div/div[@class]");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.QuerySelector(System.String,System.Int32)">
            <summary>Searches for an element by the css selector.</summary>
            <param name="selector">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Css selector for search the element.</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The item number in a collection of matching items. Default value is 0.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the tag, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">FindElementByTag</see> method.
            <code title="Example" description="" lang="C#">
            // clear cookie
            instance.ClearCookie();
            
            // go to lessons.zennolab.com
            Tab tab = instance.MainTab;
            if ((tab.IsVoid) || (tab.IsNull)) return -1;
            if (tab.IsBusy) tab.WaitDownloading();
            tab.Navigate("lessons.zennolab.com", "");
            if (tab.IsBusy) tab.WaitDownloading();
            
            // find html element by css selector
            var he = tab.MainDocument.QuerySelector(".inputs", 1);
            if (he.IsVoid) return -2;
            he.Click();
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.QuerySelectorAll(System.String)">
            <summary>Searches for all elements by the css selector.</summary>
            <param name="selector">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Css selector for search the elements.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the tags, if found; otherwise, the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property is
            "0".</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Document.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.FindElementsByTags(System.String)">FindElementsByTags</see> method.
            <code title="Example" description="" lang="C#">
            // clear cookies
            instance.ClearCookie();
            
            // go to lessons.zennolab.com
            Tab tab = instance.MainTab;
            if ((tab.IsVoid) || (tab.IsNull)) return -1;
            if (tab.IsBusy) tab.WaitDownloading();
            tab.Navigate("lessons.zennolab.com");
            if (tab.IsBusy) tab.WaitDownloading();
            
            // find elements by css selector
            var collection = tab.MainDocument.QuerySelectorAll(".inputs");
            return collection.Count;
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.GetChildren(System.Boolean)">
            <summary>Returns the children of the document. (если рекурсивно, то всех детей, а если нет, то первый слой)</summary>
            <param name="recursive">
            	<para>Type: System.Boolean</para>
            	<para></para>
            </param>
            <returns>
            	<para>Type: Zennolab.CommandCenter.HtmlCollection</para>
            	<para>The collection of html elements.</para>
            </returns>
            <example>
            	<code title="Example" description="" id="71df8f44-5c7a-4166-9c44-3942a0473a5a" lang="C#"></code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.GetFrames(System.Boolean)">
            <summary>Returns the all frames.</summary>
            <param name="recursive">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true to return the all frames; otherwise, false.</para>
            </param>
            <remarks>For getting frames correctly needs full download of tab (web page). Use the <see cref="P:ZennoLab.CommandCenter.Tab.IsBusy">IsBusy</see> property and <see cref="M:ZennoLab.CommandCenter.Tab.WaitDownloading">WaitDownloading</see>
            method of <see cref="T:ZennoLab.CommandCenter.Tab">Tab</see> class for waiting for page's downloading.</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.DocumentCollection">Zennolab.CommanCenter.DocumentCollection</see></para>
            	<para>The collection of frames.</para>
            </returns>
            <seealso cref="T:ZennoLab.CommandCenter.Tab">Tab Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.GetFrames(System.Boolean)">GetFrames</see> method. Shows the method call in two versions.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get recursive all frames
            DocumentCollection docCol1 = doc.GetFrames(true);
             
            // get all frames from first level
            DocumentCollection docCol2 = doc.GetFrames(false);</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get recursive all frames
            $docCol1 = $doc-&gt;GetFrames(true);
             
            // get all frames from first level
            $docCol2 = $doc-&gt;GetFrames(false);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.GetPageText(System.Boolean)">
            <summary>Gets the text of the document that the user sees</summary>
            <param name="recursive">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true to return text of the page and text of the subpage recorded through delimiters; otherwise, false.</para>
            </param>
            <remarks>For getting page text correctly needs full download of tab (web page). Use the <see cref="P:ZennoLab.CommandCenter.Tab.IsBusy">IsBusy</see> property and <see cref="M:ZennoLab.CommandCenter.Tab.WaitDownloading">WaitDownloading</see> method of
            <see cref="T:ZennoLab.CommandCenter.Tab">Tab</see> class for waiting for page's downloading.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The text of the document.</para>
            </returns>
            <seealso cref="T:ZennoLab.CommandCenter.Tab">Tab Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.GetPageText(System.Boolean)">GetPageText</see> method. Shows the method call in two versions.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get recursive page text
            string pagesText = doc.GetPageText(true);
             
            // get page text from first level
            string pageText = doc.GetPageText(false);</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get recursive page text
            $pagesText = $doc-&gt;GetPageText(true);
             
            // get page text from first level
            $pageText = $doc-&gt;GetPageText(false);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.GetDomText(System.Boolean)">
            <summary>Returns the dom text of the document.</summary>
            <param name="recursive">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true to return dom text of the document and dom text of the sub-documents recorded through delimiters; otherwise, false.</para>
            </param>
            <remarks>For getting dom text correctly needs full download of tab (web page). Use the <see cref="P:ZennoLab.CommandCenter.Tab.IsBusy">IsBusy</see> property and <see cref="M:ZennoLab.CommandCenter.Tab.WaitDownloading">WaitDownloading</see>
            method of <see cref="T:ZennoLab.CommandCenter.Tab">Tab</see> class for waiting for page's downloading.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The dom text of the document</para>
            </returns>
            <seealso cref="T:ZennoLab.CommandCenter.Tab">Tab Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.GetDomText(System.Boolean)">GetDomText</see> method. Shows the method call in two versions.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // get dom text include dom text of sub-documents
            string domText1 = doc.GetDomText(true);
             
            // get dom text without dom text of sub-documents
            string domText2 = doc.GetDomText(false);</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // get dom text include dom text of sub-documents
            $domText1 = $doc-&gt;GetDomText(true);
             
            // get dom text without dom text of sub-documents
            $domText2 = $doc-&gt;GetDomText(false);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.EvaluateScript(System.String,System.Boolean,System.Boolean)">
            <summary>Executes a java script that is implemented by the currently loaded document.</summary>
            <overloads>Executes a java script that is implemented by the currently loaded document.</overloads>
            <param name="script">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string expression with javascript.</para>
            </param>
             <param name="throwException">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if have to throw the JavaScript Evaluate exception; otherwise, false. The default value is false.</para>
            </param>
             <param name="altWay">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use alternative method of execution JavaScript code; otherwise, false. The default value is false.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result of the script execution.</para>
            </returns>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Document.EvaluateScript(System.String,System.Boolean,System.Boolean)">EvaluateScript</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance)
            {
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                return tab.MainDocument.EvaluateScript("document.write(1)");
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance)
            {
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab.IsBusy) $tab-&gt;WaitDownloading();
                return $tab-&gt;MainDocument-&gt;EvaluateScript("document.write(1)");
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.CreateElement(System.String)">
            <summary>Creates a new html element.</summary>
            <param name="outerHtml">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The dom text of the html element.</para>
            </param>
            <remarks>The <see cref="P:ZennoLab.CommandCenter.Document.IsNull">IsNull</see> property be true if the html element does not belongs to any document.</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>A new html element.</para>
            </returns>
            <seealso cref="T:ZennoLab.CommandCenter.Tab">Tab Class</seealso>
            <example>
            The following code uses <see cref="M:ZennoLab.CommandCenter.Document.CreateElement(System.String)">CreateElement</see> method. Also uses the <see cref="!:InsertElement">InsertElement</see>. After created a new html necessary add it in
            the document and <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNull</see> property of the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object will be false.
            <code title="Example" description="" lang="C#">
            // navigate to lessons.zennolab.com
            Tab tab = instance.MainTab;
            if ((tab.IsVoid) || (tab.IsNull)) return -1;
            if (tab.IsBusy) tab.WaitDownloading();
            tab.Navigate("lessons.zennolab.com", "");
            if (tab.IsBusy) tab.WaitDownloading();
             
            // get main document
            Document doc = tab.MainDocument;
            // find element
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
            // create a new html element
            HtmlElement newHe = doc.CreateElement(he.OuterHtml);
            // if element was created insert it to the document
            if (!newHe.IsNull &amp;&amp; !he.IsVoid) doc.InsertElement(newHe);</code><code title="Example2" description="" lang="PHP">
            // navigate to lessons.zennolab.com
            $tab = $instance-&gt;MainTab;
            if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
            if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
            $tab-&gt;Navigate("lessons.zennolab.com", "");
            if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
             
            // get main document
            $doc = $tab-&gt;MainDocument;
            // find element
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
            // create a new html element
            $newHe = $doc-&gt;CreateElement($he-&gt;OuterHtml);
            // if element was created insert it to the document
            if (!$newHe-&gt;IsNull &amp;&amp; !$he-&gt;IsVoid) $doc-&gt;InsertElement($newHe);</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.RemoveElement(ZennoLab.CommandCenter.HtmlElement)">
            <summary>Removes the first occurrence of a specific first level child html element from the document.</summary>
            <param name="element">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first level child html element to remove from the document.</para>
            </param>
            <remarks>The <see cref="T:ZennoLab.CommandCenter.HtmlElement">IsNull</see> property be true if the html element does not belongs to any document.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.Document.ReplaceElement(ZennoLab.CommandCenter.HtmlElement,ZennoLab.CommandCenter.HtmlElement)">ReplaceElement Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement Class</seealso>
            <example>
            The following code example demonstrates <see cref="M:ZennoLab.CommandCenter.Document.RemoveElement(ZennoLab.CommandCenter.HtmlElement)">RemoveElement method</see>.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookies
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get document
                Document doc = tab.MainDocument;
                
                // find element for remove
                HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByTag("body", 0);
                
                // if html element exist then remove it
                if (!he.IsVoid) doc.RemoveElement(he);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookies
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get document
                $doc = $tab-&gt;MainDocument;
                
                // find element for remove
                $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByTag("body", 0);
                
                // if html element exist then remove it
                if (!$he-&gt;IsVoid) $doc-&gt;RemoveElement($he);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.ReplaceElement(ZennoLab.CommandCenter.HtmlElement,ZennoLab.CommandCenter.HtmlElement)">
            <summary>All occurrences of a specified html element in the current document replace with another specified html element.</summary>
            <param name="newElement">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The html element to replace all occurrences of oldElement.</para>
            </param>
            <param name="oldElement">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The html element to be replaced.</para>
            </param>
            <remarks>The <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNull</see> property be true if the html element does not belongs to any document.</remarks>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement Class</seealso>
            <example>
            The following code example demonstrates <see cref="M:ZennoLab.CommandCenter.Document.ReplaceElement(ZennoLab.CommandCenter.HtmlElement,ZennoLab.CommandCenter.HtmlElement)">ReplaceElement</see> method.
            <code title="Example" description="" lang="C#">
            // get document
            Document doc = tab.MainDocument;
             
            // find first element
            HtmlElement he1 = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
            // find second element
            HtmlElement he2 = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByName("rad");
             
            // if both elements are exist then replace he1 to he2
            if (!he1.IsVoid &amp;&amp; !he2.IsVoid) doc.ReplaceElement(he2, h1);</code><code title="Example2" description="" lang="PHP">
            // get document
            $doc = $tab-&gt;MainDocument;
             
            // find first element
            $he1 = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
            // find second element
            $he2 = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByName("rad");
             
            // if both elements are exist then replace he1 to he2
            if (!$he1-&gt;IsVoid &amp;&amp; !$he2-&gt;IsVoid) $doc-&gt;ReplaceElement($he2, $h1);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.ParseByXpath(ZennoLab.InterfacesLibrary.Enums.Parser.SourceType,System.String,System.String,System.Boolean)">
            <summary>Parse page by XPath.</summary>
            <param name="sourceType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Parser.SourceType">ZennoLab.InterfacesLibrary.Enums.Parser.SourceType</see></para>
            	<para> Source type. Parse as DOM or Html.</para>
            </param>
            <param name="xpath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> XPath.</para>
            </param>
            <param name="attribute">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> The attribute to take.</para>
            </param>
            <param name="onlyVisible">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para> True if parse only visible elements; otherwise, false. Default value is true.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1">System.Collections.Generic.IEnumerable</see></para>
            	<para> The result of parsing data. Returns list of attributes.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Document.ParseByCssSelector(SourceType, string, string, bool)">Parse by CSS-selector method.</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.Document.ParseByXpath(ZennoLab.InterfacesLibrary.Enums.Parser.SourceType,System.String,System.String,System.Boolean)">ParseByXpath</see> method.
            <code title="Example" description="" lang="C#">
            // get active tab
            var tab = instance.ActiveTab;
            if (tab.IsVoid || tab.IsNull) return -1;
            // get document
            var doc = tab.MainDocument;
            //parse document
            var resultParseByXpath = doc.ParseByXpath(ZennoLab.InterfacesLibrary.Enums.Parser.SourceType.Dom, "//body", "innerText");
            </code>
            <code title="Example2" description="" lang="PHP">
            // get active tab
            $tab = $instance-&gt;ActiveTab;
            if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
            // get document
            $doc = $tab-&gt;MainDocument;
            //parse document
            $resultParseByXpath = $doc-&gt;ParseByXpath(ZennoLab\InterfacesLibrary\Enums\Parser\SourceType::Dom, "//body", "innerText");
            </code>
            </example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.ParseByCssSelector(ZennoLab.InterfacesLibrary.Enums.Parser.SourceType,System.String,System.String,System.Boolean)">
            <summary>Parse page by CSS-selector.</summary>
            <param name="sourceType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Parser.SourceType">ZennoLab.InterfacesLibrary.Enums.Parser.SourceType</see></para>
            	<para> Source type. Parse as DOM or Html.</para>
            </param>
            <param name="cssSelector">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> CSS-selector.</para>
            </param>
            <param name="attribute">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> The attribute to take.</para>
            </param>
            <param name="onlyVisible">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para> True if parse only visible elements; otherwise, false. Default value is true.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1">System.Collections.Generic.IEnumerable</see></para>
            	<para> The result of parsing data. Returns list of attributes.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Document.ParseByXpath(SourceType, string, string, bool)">Parse by CSS-selector method.</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.Document.ParseByCssSelector(ZennoLab.InterfacesLibrary.Enums.Parser.SourceType,System.String,System.String,System.Boolean)">ParseByCssSelector</see> method.
            <code title="Example" description="" lang="C#">
            // get active tab
            var tab = instance.ActiveTab;
            if (tab.IsVoid || tab.IsNull) return -1;
            // get document
            var doc = tab.MainDocument;
            //parse document
            var resultParseByXpath = doc.ParseByCssSelector(ZennoLab.InterfacesLibrary.Enums.Parser.SourceType.Dom, "//body", "innerText");
            </code>
            <code title="Example2" description="" lang="PHP">
            // get active tab
            $tab = $instance-&gt;ActiveTab;
            if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
            // get document
            $doc = $tab-&gt;MainDocument;
            //parse document
            $resultParseByXpath = $doc-&gt;ParseByCssSelector(ZennoLab\InterfacesLibrary\Enums\Parser\SourceType::Dom, "//body", "innerText");
            </code>
            </example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Document.GetNull">
            <summary> Возвращает пустой документ </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.DocumentCollection">
            <summary>Represents a strongly typed list of documents that can be accessed by index.</summary>
            <remarks>If the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see> object does not indicate to the real html element of dom model when this property is true. Also objects of this
            class contains <see cref="P:ZennoLab.CommandCenter.Document.IsNull">IsNull</see> property for identification of document collection's existence. Almost all classes of <see cref="N:ZennoLab.CommandCenter">ZennoLab.CommandCenter</see>
            contains such properties. Use it for the correct execution of the code.</remarks>
            <seealso cref="T:ZennoLab.CommandCenter.Document">Document Class</seealso>
            <example>
            The following code example demonstrates several properties and methods of the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.
            <code title="Example" description="" lang="C#">
            using System;
            using ZennoLab.CommandCenter;
             
            namespace Sample
            {
                internal class Example
                {
                    public static int Execute(Instance instance, IZennoPosterProjectModel project)
                    {
                        // clear cookie
                        instance.ClearCookie();
                        
                        // go to zennolab.com
                        Tab tab = instance.MainTab;
                        if ((tab.IsVoid) || (tab.IsNull)) return -1;
                        if (tab.IsBusy) tab.WaitDownloading();
                        tab.Navigate("zennolab.com");
                        if (tab.IsBusy) tab.WaitDownloading();
                        
                        // get all documents
                        DocumentCollection docCol = tab.AllDocuments;
                        
                        // if any document exist
                        if ((docCol.ErrorDetected) || (docCol.IsVoid)) return -1;
                        
                        Document doc = null;
                        
                        for (int i = 0; i &lt; docCol.Count; i++) doc = docCol.Documents[i];
                        
                        // get index of document
                        int index = docCol.IndexOf(doc);
                        
                        return 0;
                    }
                }
            }</code><code title="Example2" description="" lang="PHP">
            &lt;?php
            namespace System;
            namespace ZennoLab\CommandCenter;
             
            class Example
            {
                public static function Execute($instance, $project)
                {
                    // clear cookie
                    $instance-&gt;ClearCookie();
                        
                    // go to zennolab.com
                    $tab = $instance-&gt;MainTab;
                    if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                    if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                    $tab-&gt;Navigate("zennolab.com");
                    if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                        
                    // get all documents
                    $docCol = $tab-&gt;AllDocuments;
                        
                    // if any document exist
                    if (($docCol-&gt;ErrorDetected) || ($docCol-&gt;IsVoid)) return -1;
                    
                    for ($i = 0; $i &lt; $docCol-&gt;Count; $i++) $doc = $docCol-&gt;Documents[$i];
                    
                    // get index of document
                    $index = $docCol-&gt;IndexOf($doc);
                        
                    return 0;
                }
            }
            ?&gt;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="F:ZennoLab.CommandCenter.DocumentCollection._zpIds">
            <summary> id документов, которые находятся в этой коллекции </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.DocumentCollection.IsVoid">
            <summary>Gets the specified collection is void collection or not.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if collection do not represented on the server; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.DocumentCollection.ErrorDetected">ErrorDetected Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Document.IsVoid">IsVoid</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get all documents
                DocumentCollection docCol = tab.AllDocuments;
                
                // if collection is void
                if (docCol.IsVoid) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get all documents
                $docCol = $tab-&gt;AllDocuments;
                
                // if collection is void
                if ($docCol-&gt;IsVoid) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.DocumentCollection.ErrorDetected">
            <summary>Gets information about the error detected in the performance last command</summary>
            <remarks>If the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see> object does not indicate to the real document collection then this property is true. Also objects of
            this class contains <see cref="P:ZennoLab.CommandCenter.DocumentCollection.IsVoid">IsVoid</see> property for identification of document collection's existence. Almost all classes of
            <see cref="N:ZennoLab.CommandCenter">ZennoLab.CommandCenter</see> contains such properties. Use it for the correct execution of the code.</remarks>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if error detected in the performance last command; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.DocumentCollection.IsVoid">IsVoid Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.DocumentCollection.ErrorDetected">ErrorDetected</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get all documents
                DocumentCollection docCol = tab.AllDocuments;
                
                // go to lessons.zennolab.com
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // add range to collection
                docCol.AddRange(tab.AllDocuments);
                
                // if any error
                if (docCol.ErrorDetected) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get all documents
                $docCol = $tab-&gt;AllDocuments;
                
                // go to lessons.zennolab.com
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // add range to collection
                $docCol-&gt;AddRange($tab-&gt;AllDocuments);
                
                // if any error
                if ($docCol-&gt;ErrorDetected) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.DocumentCollection.Count">
            <summary>Gets the number of elements actually contained in the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</summary>
            <remarks>
            	<see cref="P:ZennoLab.CommandCenter.DocumentCollection.Count">Count</see> is the number of elements that are actually in the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</remarks>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see><br/>
            The number of elements actually contained in the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</value>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.GetByNumber(System.Int32)">GetByNumber Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.IndexOf(ZennoLab.CommandCenter.Document)">IndexOf Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Insert(ZennoLab.CommandCenter.Document,System.Int32)">Insert Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.InsertRange">InsertRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Remove(System.Int32)">Remove Method</seealso>
            <example>
            The following code example shows the value of the <see cref="P:ZennoLab.CommandCenter.DocumentCollection.Count">Count</see> property.
            <code title="Example" description="" lang="C#">
            // get all documents from page
            DocumentCollection docCol = tab.AllDocuments;
             
            // get count
            int count = docCol.Count;</code><code title="Example2" description="" lang="PHP">
            // get all documents from page
            $docCol = $tab-&gt;AllDocuments;
             
            // get count
            $count = $docCol-&gt;Count;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.DocumentCollection.Documents">
            <summary>Gets copies the documents of the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see> to a new array.</summary>
            <value>Type: <see cref="T:ZennoLab.CommandCenter.Document">Zennolab.CommandCenter.Document</see>[]<br/>
            An array containing copies of the documents of the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</value>
            <seealso cref="P:ZennoLab.CommandCenter.DocumentCollection.Count">Count Property</seealso>
            <example>
            The following code example demonstrates the <see cref="P:ZennoLab.CommandCenter.DocumentCollection.Documents">Documents</see> property.
            <code title="Example" description="" lang="C#">
            // clear cookie
            instance.ClearCookie();
             
            // go to zennolab.com
            Tab tab = instance.MainTab;
            if ((tab.IsVoid) || (tab.IsNull)) return -1;
            if (tab.IsBusy) tab.WaitDownloading();
            tab.Navigate("zennolab.com");
            if (tab.IsBusy) tab.WaitDownloading();
             
            // get an array of documents
            Document[] docs = docCol.Documents;</code><code title="Example2" description="" lang="PHP">
            // clear cookie
            $instance-&gt;ClearCookie();
             
            // go to zennolab.com
            $tab = $instance-&gt;MainTab;
            if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
            if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
            $tab-&gt;Navigate("zennolab.com");
            if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
             
            // get an array of documents
            $docs = $docCol-&gt;Documents;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.DocumentCollection.GetByNumber(System.Int32)">
            <summary>Gets the document by specified number.</summary>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The zero-based number of the document to get.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Document">Zennolab.CommandCenter.Document</see></para>
            	<para>The document at the specified number.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.IndexOf(ZennoLab.CommandCenter.Document)">IndexOf Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.DocumentCollection.Count">Count Property</seealso>
            <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is outside the range of valid indexes for the DocumentCollection.</exception>
            <example>
            The following code example demonstrates that <see cref="M:ZennoLab.CommandCenter.DocumentCollection.GetByNumber(System.Int32)">GetByNumber</see> returns document of the current <see cref="T:ZennoLab.CommandCenter.Tab">Tab</see> object by number.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get all documents
                DocumentCollection docCol = tab.AllDocuments;
                
                if (docCol.Count &lt;= 0) return -1;
                
                // get document by number
                Document doc = docCol.GetByNumber(docCol.Count-1);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get all documents
                $docCol = $tab-&gt;AllDocuments;
                
                if ($docCol-&gt;Count &lt;= 0) return -1;
                
                // get document by number
                $doc = $docCol-&gt;GetByNumber($docCol-&gt;Count-1);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.DocumentCollection.Add(ZennoLab.CommandCenter.Document)">
            <summary>Adds a document to the end of the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</summary>
            <param name="document">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Document">Zennolab.CommandCenter.Document</see></para>
            	<para>The document to be added to the end of the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.AddRange">AddRange Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.DocumentCollection.Count">Count Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Insert(ZennoLab.CommandCenter.Document,System.Int32)">Insert Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.InsertRange">InsertRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Remove(System.Int32)">Remove Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.DocumentCollection.Add(ZennoLab.CommandCenter.Document)">Add</see> method. At first we take all documents from page <see href="http://www.zennolab.com">zennolab.com</see> then all documents <see href="http://lessons.zennolab.com"/> and store in a collection
            <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get all documents from zennolab.com
                DocumentCollection docCol = tab.AllDocuments;
                
                // go to lessons.zennolab.com
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get all documents from lessons.zennolab.com
                DocumentCollection newDocCol = tab.AllDocuments;
                
                // add elements of second collection to first collection
                for (int i = 0; i &lt; newDocCol.Count; i++) docCol.Add(newDocCol.Documents[i]);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get all documents from zennolab.com
                $docCol = $tab-&gt;AllDocuments;
                
                // go to lessons.zennolab.com
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get all documents from lessons.zennolab.com
                $newDocCol = $tab-&gt;AllDocuments;
                
                // add elements of second collection to first collection
                for ($i = 0; $i &lt; $newDocCol-&gt;Count; $i++) $docCol-&gt;Add($newDocCol-&gt;Documents[$i]);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.DocumentCollection.AddRange(ZennoLab.CommandCenter.DocumentCollection)">
            <summary>
            	<para>Adds the documents of the specified collection to the end of the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</para>
            </summary>
            <overloads>Adds the elements to the end of the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</overloads>
            <param name="documents">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.DocumentCollection">Zennolab.CommandCenter.DocumentCollection</see></para>
            	<para>The collection whose documents should be added to the end of the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>. The collection itself cannot be null.</para>
            </param>
            <remarks>The order of the elements in the collection is preserved in the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Add(ZennoLab.CommandCenter.Document)">Add Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Insert(ZennoLab.CommandCenter.Document,System.Int32)">Insert Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.InsertRange">InsertRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Remove(System.Int32)">Remove Method</seealso>
            <example>
            The following code example demonstrates the <see cref="O:Zennolab.CommandCenter.DocumentCollection.AddRange">AddRange</see> method and various other methods of the
            <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see> class that act on ranges. The <see cref="O:Zennolab.CommandCenter.DocumentCollection.AddRange">AddRange</see> method is called, with
            the collection as its argument. The result is that the current elements of the list are added to the end of the list, duplicating all the elements.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get all documents from zennolab.com
                DocumentCollection docCol = tab.AllDocuments;
                
                // go to lessons.zennolab.com
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get all documents from lessons.zennolab.com
                DocumentCollection newDocCol = tab.AllDocuments;
                
                // add elements from second collection to first collection
                docCol.AddRange(newDocCol);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get all documents from zennolab.com
                $docCol = $tab-&gt;AllDocuments;
                
                // go to lessons.zennolab.com
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get all documents from lessons.zennolab.com
                $newDocCol = $tab-&gt;AllDocuments;
                
                // add elements from second collection to first collection
                $docCol-&gt;AddRange($newDocCol);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.DocumentCollection.AddRange(ZennoLab.CommandCenter.Document[])">
            <summary>Adds the documents of the specified array to the end of the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</summary>
            <param name="documents">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Document">Zennolab.CommandCenter.Document</see>[]</para>
            	<para>The array whose documents should be added to the end of the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>. The collection itself cannot be null.</para>
            </param>
            <remarks>The order of the elements in the collection is preserved in the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Add(ZennoLab.CommandCenter.Document)">Add Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Insert(ZennoLab.CommandCenter.Document,System.Int32)">Insert Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.InsertRange">InsertRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Remove(System.Int32)">Remove Method</seealso>
            <example>
            The following code example demonstrates the <see cref="O:Zennolab.CommandCenter.DocumentCollection.AddRange">AddRange</see> method and various other methods of the
            <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see> class that act on ranges.The <see cref="O:Zennolab.CommandCenter.DocumentCollection.AddRange">AddRange</see> method is called, with the
            array as its argument. The result is that the current elements of the list are added to the end of the list, duplicating all the elements.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get all documents from zennolab.com
                DocumentCollection docCol = tab.AllDocuments;
                
                // go to lessons.zennolab.com
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get all documents from lessons.zennolab.com
                DocumentCollection newDocCol = tab.AllDocuments;
                
                // add elements from second collection to first collection
                docCol.AddRange(newDocCol.Documents);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get all documents from zennolab.com
                $docCol = $tab-&gt;AllDocuments;
                
                // go to lessons.zennolab.com
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get all documents from lessons.zennolab.com
                $newDocCol = $tab-&gt;AllDocuments;
                
                // add elements from second collection to first collection
                $docCol-&gt;AddRange($newDocCol-&gt;Documents);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.DocumentCollection.Insert(ZennoLab.CommandCenter.Document,System.Int32)">
            <summary>Inserts a document into the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see> at the specified index.</summary>
            <param name="document">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Document">Zennolab.CommandCenter.Document</see></para>
            	<para>The document to insert.</para>
            </param>
            <param name="index">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The zero-based index at which document should be inserted.</para>
            </param>
            <remarks>If index is equal to <see cref="P:ZennoLab.CommandCenter.DocumentCollection.Count">Count</see>, item is added to the end of <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Add(ZennoLab.CommandCenter.Document)">Add Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.AddRange">AddRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.InsertRange">InsertRange Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.DocumentCollection.Count">Count Property</seealso>
            <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is less than 0 or index is greater than Count.</exception>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.DocumentCollection.Insert(ZennoLab.CommandCenter.Document,System.Int32)">Insert</see> method, along with various other properties and methods of the
            <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.
            <code title="Example" description="" lang="C#">
            // get all documents
            DocumentCollection docCol = tab.AllDocuments;
             
            // get main document
            Document doc = tab.MainDocument;
             
            if (docCol.Count &lt;= 0) return -1
             
            int index = docCol.Count / 2;
             
            // insert main document to collection
            docCol.Insert(doc, index);</code><code title="Example2" description="" lang="PHP">
            // get all documents
            $docCol = $tab-&gt;AllDocuments;
             
            // get main document
            $doc = $tab-&gt;MainDocument;
             
            if ($docCol-&gt;Count &lt;= 0) return -1
             
            $index = $docCol=&gt;Count / 2;
             
            // insert main document to collection
            $docCol-&gt;Insert($doc, $index);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.DocumentCollection.InsertRange(ZennoLab.CommandCenter.DocumentCollection,System.Int32)">
            <summary>Inserts the documents of a collection into the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see> at the specified index.</summary>
            <param name="index">Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see><br/>
            The zero-based index at which the new documents should be inserted.</param>
            <param name="documents">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.DocumentCollection">Zennolab.CommandCenter.DocumentCollection</see></para>
            	<para>The collection whose elements should be inserted into the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>. The collection itself cannot be null.</para>
            </param>
            <remarks>If index is equal to <see cref="P:ZennoLab.CommandCenter.DocumentCollection.Count">Count</see>, the elements are added to the end of <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>. The order of the elements in the collection
            is preserved in the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Insert(ZennoLab.CommandCenter.Document,System.Int32)">Insert Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Add(ZennoLab.CommandCenter.Document)">Add Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.AddRange">AddRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Remove(System.Int32)">Remove Method</seealso>
            <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is less than 0 or index is greater than Count.</exception>
            <example>
            The following code example demonstrates <see cref="O:Zennolab.CommandCenter.DocumentCollection.InsertRange">InsertRange</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get all documents from zennolab.com
                DocumentCollection docCol = tab.AllDocuments;
                
                // go to lessons.zennolab.com
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // go to lessons.zennolab.com
                DocumentCollection newDocCol = tab.AllDocuments;
                
                // insert second collection to first collection start with 0 index
                docCol.InsertRange(newDocCol, 0);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get all documents from zennolab.com
                $docCol = $tab-&gt;AllDocuments;
                
                // go to lessons.zennolab.com
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // go to lessons.zennolab.com
                $newDocCol = $tab-&gt;AllDocuments;
                
                // insert second collection to first collection start with 0 index
                $docCol-&gt;InsertRange($newDocCol, 0);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.DocumentCollection.InsertRange(ZennoLab.CommandCenter.Document[],System.Int32)">
            <summary>Inserts the documents of an array into the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see> at the specified index.</summary>
            <overloads>Inserts the documents into the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see> at the specified index.</overloads>
            <param name="index">Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see><br/>
            The zero-based index at which the new documents should be inserted.</param>
            <param name="documents">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Document">Zennolab.CommandCenter.Document</see>[]</para>
            	<para>The array whose elements should be inserted into the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>. The array itself cannot be null.</para>
            </param>
            <remarks>If index is equal to <see cref="P:ZennoLab.CommandCenter.DocumentCollection.Count">Count</see>, the elements are added to the end of <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>. The order of the elements in the collection
            is preserved in the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Insert(ZennoLab.CommandCenter.Document,System.Int32)">Insert Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Add(ZennoLab.CommandCenter.Document)">Add Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.AddRange">AddRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Remove(System.Int32)">Remove Method</seealso>
            <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is less than 0 or index is greater than Count.</exception>
            <example>
            The following code example demonstrates the <see cref="O:Zennolab.CommandCenter.DocumentCollection.InsertRange">InsertRange</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get all documents from zennolab.com
                DocumentCollection docCol = tab.AllDocuments;
                
                // go to lessons.zennolab.com
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // go to lessons.zennolab.com
                DocumentCollection newDocCol = tab.AllDocuments;
                
                // insert second collection to first collection start with 0 index
                docCol.InsertRange(newDocCol.Documents, 0);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get all documents from zennolab.com
                $docCol = $tab-&gt;AllDocuments;
                
                // go to lessons.zennolab.com
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // go to lessons.zennolab.com
                $newDocCol = $tab-&gt;AllDocuments;
                
                // insert second collection to first collection start with 0 index
                $docCol-&gt;InsertRange($newDocCol-&gt;Documents, 0);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.DocumentCollection.Remove(System.Int32)">
            <summary>Removes the element at the specified index of the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</summary>
            <param name="index">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The zero-based index of the document to remove.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Add(ZennoLab.CommandCenter.Document)">Add Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.AddRange">AddRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.Insert(ZennoLab.CommandCenter.Document,System.Int32)">Insert Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.InsertRange">InsertRange Method</seealso>
            <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is less than 0 or index is equal to or greater than Count.</exception>
            <example>
            The following code shows the <see cref="M:ZennoLab.CommandCenter.DocumentCollection.Remove(System.Int32)">Remove</see> method call
            <code title="Example" description="" lang="C#">
            // get all documents from page
            DocumentCollection docCol = tab.AllDocuments;
             
            // remove the last document
            docCol.Remove(docCol.Count-1);</code><code title="Example2" description="" lang="PHP">
            // get all documents from page
            $docCol = $tab-&gt;AllDocuments;
             
            // remove the last document
            $docCol-&gt;Remove($docCol-&gt;Count-1);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.DocumentCollection.IndexOf(ZennoLab.CommandCenter.Document)">
            <summary>Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</summary>
            <param name="document">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Document">Zennolab.CommandCenter.Document</see></para>
            	<para>The document to locate in the <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>.</para>
            </param>
            <remarks>The <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see> is searched forward starting at index and ending at the last element.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The zero-based index of the first occurrence of item within the entire <see cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection</see>, if found; otherwise, –1.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.DocumentCollection.GetByNumber(System.Int32)">GetByNumber Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.DocumentCollection.Count">Count Property</seealso>
            <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is less than 0 or index is greater than Count.</exception>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.DocumentCollection.IndexOf(ZennoLab.CommandCenter.Document)">IndexOf</see> method.
            <code title="Example" description="" lang="C#">
            // get main document
            Document doc = tab.MainDocument;
             
            // get index of main document in document collection of current web page
            int index = docCol.IndexOf(doc);</code><code title="Example2" description="" lang="PHP">
            // get main document
            $doc = $tab-&gt;MainDocument;
             
            // get index of main document in document collection of current web page
            $index = $docCol-&gt;IndexOf($doc);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.DocumentCollection.GetNull">
            <summary> Возвращает пустой элемент </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.EmptyInstance.Instance">
            <summary>
            Use it only for ProjectMaker
            </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.EmptyInstance.#ctor">
            <summary>
            Use it for ZennoPoster and others
            </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.Exceptions.Mail.ConnectionException">
            <summary>
            This exception throws when unable to connect to the server.
            </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.Exceptions.Mail.EmailNotFoundException">
            <summary>
            This exception throws when noone email hasn't been found.
            </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.Exceptions.Mail.InvalidEmailCredentialException">
            <summary>
            This exception throws when you try connect to email server with wrong login/password.
            </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.FullEmulation.MouseEmulationParameters">
            <summary>
            Parameters for mouse emulation.
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.FullEmulation.MouseEmulationParameters.MainLinePointDistanse">
            <summary> Примерное расстояние между расчетными точками </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.FullEmulation.MouseEmulationParameters.MainLinePause">
            <summary> Максимальная задержка выполнения </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.FullEmulation.MouseEmulationParameters.MainLinePauseVariance">
            <summary> Дисперсия максимальной задержки выполнения </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.FullEmulation.MouseEmulationParameters.RectangleBasePointPartW">
            <summary> Часть прямоугольника по ширине </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.FullEmulation.MouseEmulationParameters.RectangleBasePointPartH">
            <summary> Часть прямоугольника по высоте </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.FullEmulation.MouseEmulationParameters.RectangleEndPointPartW">
            <summary> Часть прямоугольника по высоте </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.FullEmulation.MouseEmulationParameters.MinScrollSpeed">
            <summary> Минимальное значение скрола за шаг </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.FullEmulation.MouseEmulationParameters.MaxScrollSpeed">
            <summary> Максимальное значение скрола за шаг </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.HtmlElement">
            <summary>Represents an HTML element on a Web page. Contains the methods to search for html elements, gets or sets of values​​.</summary>
            <remarks>The <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> class contain the properties such as <see cref="P:ZennoLab.CommandCenter.HtmlElement.ErrorDetected">ErrorDetected</see>, <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNull</see> and
            <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see>. Their use necessary for the correct work of your code.</remarks>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.Instance">Instance Class</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.Tab">Tab Class</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.Document">Document Class</seealso>
            <example>
            This example uses the <see cref="T:ZennoLab.CommandCenter.Document">Document</see> object to search for html elements and setting their values​​.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get main document
                Document doc = tab.MainDocument;
                
                // find element by attribute
                HtmlElement he = doc.FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                if (he.IsVoid) return -1;
                // set value
                he.SetValue("true", true);
                
                // find element by name
                he = doc.FindElementByName("rad");
                if (he.IsVoid) return -1;
                // set value
                he.SetValue("0", true);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get main document
                $doc = $tab-&gt;MainDocument;
                
                // find element by attribute
                $he = $doc-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                if ($he-&gt;IsVoid) return -1;
                // set value
                $he-&gt;SetValue("true", true);
                
                // find element by name
                $he = $doc-&gt;FindElementByName("rad");
                if ($he-&gt;IsVoid) return -1;
                // set value
                $he-&gt;SetValue("0", true);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.ErrorDetected">
            <summary>Gets information about the error detected in the performance last command.</summary>
            <remarks>If the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object does not indicate to the real html element of dom model when this property is true. Also objects of this class contains
            <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNull</see> and <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> properties for identification of element's existence. Almost all classes of
            <see cref="N:ZennoLab.CommandCenter">ZennoLab.CommandCenter</see> contains such properties. Use it for the correct execution of the code.</remarks>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if error detected in the performance last command; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNull Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.ErrorDetected">ErrorDetected</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element
                HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                
                // if error detected then exit with -1
                if (he.ErrorDetected) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element
                $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                
                // if error detected then exit with -1
                if ($he-&gt;ErrorDetected) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">
            <summary>Gets the specified html element is void or not.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if html element do not represented on the server; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ErrorDetected">ErrorDetected Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNull Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by attribute
                HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                
                // if element is void then return -1
                if (he.IsVoid) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by attribute
                $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                
                // if element is void then return -1
                if ($he-&gt;IsVoid) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.ZP_ID">
            <summary>Gets the ID which represents html element on the server.</summary>
            <remarks>It is used only for the technical purposes</remarks>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Html element ID.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.ParentTab">
            <summary>Gets the parent tab.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Tab">Zennolab.CommandCenter.Tab</see></para>
            	<para>The parent tab.</para>
            </value>
            <seealso cref="T:ZennoLab.CommandCenter.Tab">Tab Class</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentBody">ParentBody Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentDocument">ParentDocument Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentElement">ParentElement Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentForm">ParentForm Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.ParentTab">ParentTab</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get parent tab
            Tab parentTab = he.ParentTab;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get parent tab
            $parentTab = $he-&gt;ParentTab;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.ParentDocument">
            <summary>Gets the parent document.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Document">Zennolab.CommandCenter.Document</see></para>
            	<para>The parent document.</para>
            </value>
            <seealso cref="T:ZennoLab.CommandCenter.Document">Document Class</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentBody">ParentBody Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentElement">ParentElement Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentForm">ParentForm Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentTab">ParentTab Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.ParentDocument">ParentDocument</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get parent document
            Document parentDocument = he.ParentDocument;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get parent document
            $parentDocument = $he-&gt;ParentDocument;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.ParentElement">
            <summary>Gets the parent element.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The parent element.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentBody">ParentBody Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentDocument">ParentDocument Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentForm">ParentForm Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentTab">ParentTab Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.ParentElement">ParentElement</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get parent element
            HtmlElement parentElement = he.ParentElement;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get parent element
            $parentElement = $he-&gt;ParentElement;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.ParentForm">
            <summary>Gets the parent form.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The parent form.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentBody">ParentBody Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentDocument">ParentDocument Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentElement">ParentElement Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentTab">ParentTab Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.ParentForm">ParentForm</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get parent form
            HtmlElement parentElement = he.ParentForm;</code><code title="Example2" description="" lang="PHP">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get parent form
            $parentElement = $he-&gt;ParentForm;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.ParentBody">
            <summary>Gets the parent body.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The parent body.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentDocument">ParentDocument Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentElement">ParentElement Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentForm">ParentForm Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ParentTab">ParentTab Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.ParentBody">ParentBody</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get parent body
            HtmlElement parentBody = he.ParentBody;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get parent body
            $parentBody = $he-&gt;ParentBody;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.ContentDocument">
            <summary>Gets the content document for frame/iframe element.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Document">Zennolab.CommandCenter.Document</see></para>
            	<para>The content document.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.FirstChild">
            <summary>Gets the first child element.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first child element.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.LastChild">LastChild Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.NextSibling">NextSibling Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.PreviousSibling">PreviousSibling Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetChildren(System.Boolean)">GetChildren Method</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.FirstChild">FirstChild</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get first child
            HtmlElement first = he.FirstChild;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get first child
            $first = $he-&gt;FirstChild;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.LastChild">
            <summary>Gets the last child element.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The last child element.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.FirstChild">FirstChild Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.NextSibling">NextSibling Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.PreviousSibling">PreviousSibling Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetChildren(System.Boolean)">GetChildren Method</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.LastChild">LastChild</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get the last child
            HtmlElement last = he.LastChild;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get the last child
            $last = $he-&gt;LastChild;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.NextSibling">
            <summary>Gets the next element.</summary>
            <remarks>If the next element to a higher level, then return null.</remarks>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The next element.</para>
            </value>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetChildren(System.Boolean)">GetChildren Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.FirstChild">FirstChild Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.LastChild">LastChild Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.PreviousSibling">PreviousSibling Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.NextSibling">NextSibling</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get next element
            HtmlElement next = he.NextSibling;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get next element
            $next = $he-&gt;NextSibling;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.PreviousSibling">
            <summary>Gets the previous element.</summary>
            <remarks>If the previous element to a higher level, then return null.</remarks>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The previous element.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.FirstChild">FirstChild Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.LastChild">LastChild Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.NextSibling">NextSibling Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetChildren(System.Boolean)">GetChildren Method</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.PreviousSibling">PreviousSibling</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get previous element
            HtmlElement prevElement = he.PreviousSibling;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get previous element
            $prevElement = $he-&gt;PreviousSibling;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.OuterHtml">
            <summary>Gets the dom text of the html element.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The dom text of the html element.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.FullTagName">FullTagName Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Id">Id Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.InnerHtml">InnerHtml Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.TagName">TagName Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.OuterHtml">OuterHtml</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get outer html
            string domText = he.OuterHtml;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get outer html
            $domText = $he-&gt;OuterHtml;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.InnerHtml">
            <summary>Gets the html text inside the tag of the element.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The html text inside the tag of the element.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.FullTagName">FullTagName Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Id">Id Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.OuterHtml">OuterHtml Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.TagName">TagName Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.InnerHtml">InnerHtml</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get inner html
            string innerHtml = he.InnerHtml;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get inner html
            $innerHtml = $he-&gt;InnerHtml;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.InnerText">
            <summary>Gets the text inside the tag of the element.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The text inside the tag of the element.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.FullTagName">FullTagName Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Id">Id Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.OuterHtml">OuterHtml Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.TagName">TagName Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.InnerText">InnerText</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get inner text
            string innerText = he.InnerText;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get inner text
            $innerText = $he-&gt;InnerText;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.TagName">
            <summary>Gets the tag of the element.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The tag of the element.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.FullTagName">FullTagName Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Id">Id Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.InnerHtml">InnerHtml Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Name">Name Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.OuterHtml">OuterHtml Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.TagName">TagName</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get tag name
            string tag = he.TagName;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get tag name
            $tag = $he-&gt;TagName;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.FullTagName">
            <summary>Gets the full tag of the element.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The full tag of the element.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.TagName">TagName Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Id">Id Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.InnerHtml">InnerHtml Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.OuterHtml">OuterHtml Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Name">Name Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.FullTagName">FullTagName</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get full tag name
            string fullTagName = he.FullTagName;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get full tag name
            $fullTagName = $he-&gt;FullTagName;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.Name">
            <summary>Gets the name of the html element.</summary>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see><br/>
            The name of the html element.</value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.FullTagName">FullTagName Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Id">Id Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.InnerHtml">InnerHtml Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.OuterHtml">OuterHtml Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.TagName">TagName Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.Name">Name</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get name
            string name = he.Name;</code><code title="Example2" description="" lang="PHP">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get name
            string name = he.Name;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.Id">
            <summary>Gets the ID of the element</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The html element ID.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.FullTagName">FullTagName Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.TagName">TagName Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.InnerHtml">InnerHtml Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.OuterHtml">OuterHtml Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Name">Name Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.Id">Id</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get id
            string id = he.Id;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get id
            $id = $he-&gt;Id;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.Height">
            <summary>Gets the height of the html element.</summary>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see><br/>
            The height of the html element in pixels.</value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Width">Width Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.Height">Height</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get height
            int height = he.Height;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get height
            $height = $he-&gt;Height;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.Width">
            <summary>Gets the width of the html element.</summary>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see><br/>
            The width of the html element in pixels.</value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Height">Height Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.Width">Width</see> property.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get width
            int width = he.Width;</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get width
            $width = $he-&gt;Width;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.BoundingClientHeight">
            <summary>Gets the bounding client height of the html element.</summary>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see><br/>
            The bounding client height of the html element in pixels.</value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Width">Width Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.BoundingClientWidth">
            <summary>Gets the bounding client width of the html element.</summary>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see><br/>
            The bounding client width of the html element in pixels.</value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Height">Height Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.IsNull">
            <summary>Gets a value that indicates whether or not the value of the html element is null value.</summary>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see><br/>
            true if the html element value is null, otherwise false.</value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.ErrorDetected">ErrorDetected Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNull</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by attribute
                HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                
                // if element is null then return -1
                if (he.IsNull) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab.-&gt;WaitDownloading();
                
                // find element by attribute
                $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                
                // if element is null then return -1
                if ($he-&gt;IsNull) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.DisplacementInTabWindow">
            <summary>Gets the displacement of the upper left corner relative to the tab's window.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.drawing.point.aspx">System.Drawing.Point</see></para>
            	<para>The point of the upper left corner.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.DisplacementInDocument">DisplacementInDocument Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Height">Height Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Width">Width Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.DisplacementInTabWindow">DisplacementInTabWindow</see> property.
            <code title="Example" description="" lang="C#">
            using System.Drawing;
            ...
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get displacement in tab window
            Point point = he.DisplacementInTabWindow;</code><code title="Example2" description="" lang="PHP">
            use System\Drawing;
            ...
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get displacement in tab window
            $point = $he-&gt;DisplacementInTabWindow;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.DisplacementInDocument">
            <summary>Gets the displacement of the upper left corner relative to the parent document.</summary>
            <remarks>This property displays the coordinates relative to the parent document. These coordinates are not always equal
            <see cref="P:ZennoLab.CommandCenter.HtmlElement.DisplacementInTabWindow">DisplacementInTabWindow</see>.</remarks>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.drawing.point.aspx">System.Drawing.Point</see></para>
            	<para>The point of the upper left corner.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.DisplacementInTabWindow">DisplacementInTabWindow Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Height">Height Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Width">Width Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.DisplacementInDocument">DisplacementInDocument</see> property.
            <code title="Example" description="" lang="C#">
            using System.Drawing;
            ...
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get displacement in document
            Point point = he.DisplacementInDocument;</code><code title="Example2" description="" lang="PHP">
            use System\Drawing;
            ...
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get displacement in document
            $point = $he-&gt;DisplacementInDocument;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElement.DisplacementInBrowser">
            <summary>Gets the displacement of the upper left corner relative to the window top.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.drawing.point.aspx">System.Drawing.Point</see></para>
            	<para>The point of the upper left corner.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.DisplacementInTabWindow">DisplacementInTabWindow Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Height">Height Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElement.Width">Width Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElement.DisplacementInBrowser">DisplacementInBrowser</see> property.
            <code title="Example" description="" lang="C#">
            using System.Drawing;
            ...
            // find element
            HtmlElement he = tab.GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get displacement in document
            Point point = he.DisplacementInBrowser;</code><code title="Example2" description="" lang="PHP">
            use System\Drawing;
            ...
            // find element
            $he = $tab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get displacement in document
            $point = $he-&gt;DisplacementInBrowser;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.ScrollIntoView">
            <summary>The performs scroll the tab to the current html element.</summary>
            <remarks>This method performs only the scrolling to the current html element. It may need when necessary change the view of the tab and for example perform click by
            coordinates inside the tab using the <see cref="T:ZennoLab.CommandCenter.Tab">Tab</see> class methods.</remarks>
            <seealso cref="T:ZennoLab.CommandCenter.Tab">Tab Class</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseClick(System.Int32,System.Int32,System.String,System.String,System.Boolean)">MouseClick Method</seealso>
            <seealso cref="O:ZennoLab.CommandCenter.Tab.MouseMove">MouseMove Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SendText(System.String,System.Int32)">SendText Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.ScrollIntoView">ScrollIntoView</see> method.
            <code title="Example" description="" lang="C#">
            // navigate to lessons.zennolab.com
            instance.ActiveTab.Navigate("lessons.zennolab.com", "");
             
            // wait downloading
            instance.ActiveTab.WaitDownloading();
             
            // try find the html element
            HtmlElement he = instance.ActiveTab.MainDocument.FindElementByAttribute("textarea", "name", "text", "text", 0);
             
            // if html element was found
            if (!he.IsVoid)
            {
                // scroll view of tab to the html element
                he.ScrollIntoView();
                
                // performs the click inside tab by coordinates
                instance.ActiveTab.MouseClick(he.DisplacementInTabWindow.X + 10, he.DisplacementInTabWindow.Y + 10, "left", "click");
                
                // send the text
                instance.SendText("It's just example. If you see this text then all work correctly. Don't forget to buy one more ZennoPoster.", 75);
            }</code><code title="Example2" description="" lang="PHP">
            // navigate to lessons.zennolab.com
            $instance-&gt;ActiveTab-&gt;Navigate("lessons.zennolab.com", "");
             
            // wait downloading
            $instance-&gt;ActiveTab-&gt;WaitDownloading();
             
            // try find the html element
            $he = $instance-&gt;ActiveTab-&gt;MainDocument-&gt;FindElementByAttribute("textarea", "name", "text", "text", 0);
             
            // if html element was found
            if (!$he-&gt;IsVoid)
            {
                // scroll view of tab to the html element
                $he-&gt;ScrollIntoView();
                
                // performs the click inside tab by coordinates
                $instance-&gt;ActiveTab-&gt;MouseClick($he-&gt;DisplacementInTabWindow-&gt;X + 10, $he-&gt;DisplacementInTabWindow-&gt;Y + 10, "left", "click");
                
                // send the text
                $instance-&gt;SendText("It's just example. If you see this text then all work correctly. Don't forget to buy one more ZennoPoster.", 75);
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.DragDrop(ZennoLab.CommandCenter.HtmlElement,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Performs the drag and drop events for specified elements.</summary>
            <param name="element">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The html element for drop event.</para>
            </param>
            <param name="dragX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate inside element's area for rise drag event. Default value is <strong>-1</strong>.</para>
            </param>
            <param name="dradY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate inside element's area for rise drag event. Default value is <strong>-1</strong>.</para>
            </param>
            <param name="dropX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate inside element's area for rise drop event. Default value is <strong>-1</strong>.</para>
            </param>
            <param name="dropY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate inside element's area for rise drop event. Default value is <strong>-1</strong>.</para>
            </param>
            <remarks>In case there is any coordinate is -1, will be used the central position of the element on specified axis.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.DragDrop(ZennoLab.CommandCenter.HtmlElement,System.Int32,System.Int32,System.Int32,System.Int32)">DragDrop</see> method.
            <code title="Example" description="" lang="C#">
            // find element fo drop event
            HtmlElement dropHe = instance.ActiveTab.FindElementById("some_id");
            // if element is exist
            if (!dropHe.IsVoid)
            {
                // find element for drap event
                HtmlElement dragHe = instance.ActiveTab.FindElementById("any_id");
                // if element is exist
                if (!dragHe.IsVoid)
                {
                    // rise drag and drop events
                    // drop dropHe (rise event in position x = 10, y = 30) to the specified place (50, 50)
                    dragHe.DragDrop(dropHe, 10, 30, 50, 50);
                }
            }</code><code title="Example2" description="" lang="PHP">
            // find element fo drop event
            $dropHe = $instance-&gt;ActiveTab-&gt;FindElementById("some_id");
            // if element is exist
            if (!$dropHe-&gt;IsVoid)
            {
                // find element for drap event
                $dragHe = $instance-&gt;ActiveTab-&gt;FindElementById("any_id");
                // if element is exist
                if (!$dragHe-&gt;IsVoid)
                {
                    // rise drag and drop events
                    // drop dropHe (rise event in position x = 10, y = 30) to the specified place (50, 50)
                    $dragHe-&gt;DragDrop($dropHe, 10, 30, 50, 50);
                }
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.DrawToBitmap(System.Boolean,System.String)">
            <summary>Supports rendering to the bitmap.</summary>
            <param name="isImage">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if the tag of this of the element is <strong>"img"</strong>, otherwise, <strong><em>false</em></strong>.</para>
            </param>
            <param name="hash">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The parameter use only in demo version. Default value is <b>String.Empty</b>.</para>
            </param>
            <remarks>If the html element has the tag <strong>"img"</strong> and the method's parameter is true, then this method executes faster.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The image as a string value.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DrawPartToBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">DrawPartToBitmap Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DrawPartAsBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">DrawPartAsBitmap Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DrawAsBitmap(System.Boolean)">DrawAsBitmap Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.DrawToBitmap(System.Boolean,System.String)">DrawToBitmap</see> method
            <code title="Example" description="" lang="C#">
            // find element by attribute
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // draw to bitmap element, this element is not image and does not contain image
            string toBitmap1 = he.DrawToBitmap(false);
             
            // find element by attribute
            he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("a", "href", "http://lessons.zennolab.com/ru/index", "regexp", 0);
             
            // draw to bitmap element, this element is image or contains image
            string toBitmap2 = he.DrawToBitmap(true);</code><code title="Example2" description="" lang="PHP">
            // find element by attribute
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // draw to bitmap element, this element is not image and does not contain image
            $toBitmap1 = $he-&gt;DrawToBitmap(false);
             
            // find element by attribute
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("a", "href", "http://lessons.zennolab.com/ru/index", "regexp", 0);
             
            // draw to bitmap element, this element is image or contains image
            $toBitmap2 = $he-&gt;DrawToBitmap(true);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.DrawAsBitmap(System.Boolean,System.String)">
            <summary>Supports rendering to the bitmap.</summary>
            <param name="isImage">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if the tag of this of the element is <strong>"img"</strong>, otherwise, <strong><em>false</em></strong>.</para>
            </param>
            <param name="hash">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The parameter use only in demo version. Default value is <b>String.Empty</b>.</para>
            </param>
            <remarks>If the html element has the tag <strong>"img"</strong> and the method's parameter is true, then this method executes faster.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.drawing.bitmap.aspx">System.Drawing.Bitmap</see></para>
            	<para>The image as a bitmap.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DrawPartAsBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">DrawPartAsBitmap Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DrawToBitmap(System.Boolean)">DrawToBitmap Method</seealso> 
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DrawPartToBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">DrawPartToBitmap Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.DrawAsBitmap(System.Boolean,System.String)">DrawAsBitmap</see> method
            <code title="Example" description="" lang="C#">
            // find element by attribute
            var he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // draw to bitmap element, this element is not image and does not contain image
            var toBitmap1 = he.DrawAsBitmap(false);
             
            // find element by attribute
            he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("a", "href", "http://lessons.zennolab.com/ru/index", "regexp", 0);
             
            // draw to bitmap element, this element is image or contains image
            var toBitmap2 = he.DrawAsBitmap(true);</code><code title="Example2" description="" lang="PHP">
            // find element by attribute
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // draw to bitmap element, this element is not image and does not contain image
            $toBitmap1 = $he-&gt;DrawAsBitmap(false);
             
            // find element by attribute
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("a", "href", "http://lessons.zennolab.com/ru/index", "regexp", 0);
             
            // draw to bitmap element, this element is image or contains image
            $toBitmap2 = $he-&gt;DrawAsBitmap(true);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.DrawPartToBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>Supports rendering part of element to the bitmap.</summary>
            <param name="left">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The distance, in pixels, between the left edge of the element and the left edge of its client area.</para>
            </param>
            <param name="top">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The distance, in pixels, between the top edge of the element and the top edge of its client area.</para>
            </param>
            <param name="isImage">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if the tag of this of the element is <strong>"img"</strong>, otherwise, <em><strong>false</strong></em>.</para>
            </param>
            <param name="width">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The width of the part.</para>
            </param>
            <param name="height">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The height of the part.</para>
            </param>
            <param name="hash">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The parameter use only in demo version. Default value is <b>String.Empty</b>.</para>
            </param>
            <remarks>If the html element has the tag <strong>"img"</strong> and the method's parameter is true, then this method executes faster.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The part of image as a string value.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DrawPartAsBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">DrawPartAsBitmap Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DrawToBitmap(System.Boolean)">DrawToBitmap Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DrawAsBitmap(System.Boolean)">DrawAsBitmap Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.DrawPartToBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String)">DrawPartToBitmap</see> method
            <code title="Example" description="" lang="C#">
            // find element by attribute
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("a", "href", "http://lessons.zennolab.com/ru/index", "regexp", 0);
             
            // draw part of bitmap to the string value
            string toBitmap = he.DrawPartToBitmap(0, 0, 20, 20, true);</code><code title="Example2" description="" lang="PHP">
            // find element by attribute
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("a", "href", "http://lessons.zennolab.com/ru/index", "regexp", 0);
             
            // draw part of bitmap to the string value
            $toBitmap = $he-&gt;DrawPartToBitmap(0, 0, 20, 20, true);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.DrawPartAsBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>Supports rendering part of element to the bitmap.</summary>
            <param name="left">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The distance, in pixels, between the left edge of the element and the left edge of its client area.</para>
            </param>
            <param name="top">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The distance, in pixels, between the top edge of the element and the top edge of its client area.</para>
            </param>
            <param name="isImage">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if the tag of this of the element is <strong>"img"</strong>, otherwise, <em><strong>false</strong></em>.</para>
            </param>
            <param name="width">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The width of the part.</para>
            </param>
            <param name="height">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The height of the part.</para>
            </param>
            <param name="hash">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The parameter use only in demo version. Default value is <b>String.Empty</b>.</para>
            </param>
            <remarks>If the html element has the tag <strong>"img"</strong> and the method's parameter is true, then this method executes faster.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.drawing.bitmap.aspx">System.Drawing.Bitmap</see></para>
            	<para>The part of image as a bitmap.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DrawPartToBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">DrawPartToBitmap Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DrawAsBitmap(System.Boolean)">DrawAsBitmap Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DrawToBitmap(System.Boolean)">DrawToBitmap Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.DrawPartToBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String)">DrawPartToBitmap</see> method
            <code title="Example" description="" lang="C#">
            // find element by attribute
            var he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("a", "href", "http://lessons.zennolab.com/ru/index", "regexp", 0);
             
            // draw part of bitmap to the string value
            var toBitmap = he.DrawPartAsBitmap(0, 0, 20, 20, true);</code><code title="Example2" description="" lang="PHP">
            // find element by attribute
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("a", "href", "http://lessons.zennolab.com/ru/index", "regexp", 0);
             
            // draw part of bitmap to the string value
            $toBitmap = $he-&gt;DrawPartAsBitmap(0, 0, 20, 20, true);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>Searches for an element among the children by the attribute, and returns the first occurrence.</summary>
            <param name="tags">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tags for search the element. If the count of tags is more than one then they are through <strong>";"</strong>.</para>
            </param>
            <param name="attrName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute name.</para>
            </param>
            <param name="searchKind">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>This parameter can take the following values​​: <strong>"text"</strong>, <strong>"notext"</strong> and <strong>"regexp"</strong>.</para>
            </param>
            <param name="attrValue">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute value.</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The document address.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see> property is
            "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the attribute, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByAttribute(System.String,System.String,System.String,System.String)">FindChildrenByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenById(System.String)">FindChildrenById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByName(System.String)">FindChildrenByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByTags(System.String)">FindChildrenByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByXPath(System.String)">FindChildrenByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetValue(System.Boolean)">GetValue Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetSelectedItems">GetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.RiseEvent(System.String,System.String)">RiseEvent Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">SetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetSelectedItems(System.String)">SetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean)">SetValue Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by id
                HtmlElement he = tab.FindElementById("main");
                
                // find child element by attribute
                HtmlElement heCh = he.FindChildByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by id
                $he = $tab-&gt;FindElementById("main");
                
                // find child element by attribute
                $heCh = $he-&gt;FindChildByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByAttribute(System.String,System.String,System.String,System.String)">
            <summary>Searches for all elements among the children by the attribute.</summary>
            <param name="tags">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tags for search the elements. If the count of tags is more than one then they are through <strong>";"</strong>.</para>
            </param>
            <param name="attrName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute name.</para>
            </param>
            <param name="attrValue">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute value.</para>
            </param>
            <param name="searchKind">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>This parameter can take the following values​​: <strong>"text"</strong>, <strong>"notext"</strong> and <strong>"regexp"</strong>.</para>
            </param>
            <remarks>If html elements were not found then this method returns the HtmlElementCollection object in which IsVoid property is <strong>"<em>true</em>"</strong>.</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the attribute, if found; otherwise, the Count property is <strong>"0"</strong>.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenById(System.String)">FindChildrenById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByName(System.String)">FindChildrenByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByTags(System.String)">FindChildrenByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByXPath(System.String)">FindChildrenByXPath Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByAttribute(System.String,System.String,System.String,System.String)">FindChildrenByAttribute</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by id
                HtmlElement he = tab.FindElementById("main");
                
                // find all children by attribute
                HtmlElementCollection heCol = he.FindChildrenByAttribute("input:checkbox", "fulltag", "input:checkbox", "text");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by id
                $he = $tab-&gt;FindElementById("main");
                
                // find all children by attribute
                $heCol = $he-&gt;FindChildrenByAttribute("input:checkbox", "fulltag", "input:checkbox", "text");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">
            <summary>Searches for an element among the children by the ID, and returns the first occurrence.</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The ID that defines search condition of HTML elements.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see> property is
            "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the ID, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByAttribute(System.String,System.String,System.String,System.String)">FindChildrenByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenById(System.String)">FindChildrenById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByName(System.String)">FindChildrenByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByTags(System.String)">FindChildrenByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByXPath(System.String)">FindChildrenByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetSelectedItems">GetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetValue(System.Boolean)">GetValue Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.RiseEvent(System.String,System.String)">RiseEvent Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">SetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetSelectedItems(System.String)">SetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean)">SetValue Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by id
                HtmlElement he = tab.FindElementById("main");
                
                // find child element by id
                HtmlElement heCh = he.FindChildById("inputs");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by id
                $he = $tab-&gt;FindElementById("main");
                
                // find child element by id
                $heCh = $he-&gt;FindChildById("inputs");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenById(System.String)">
            <summary>Searches for all elements among the children by the ID.</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The ID that defines search condition of HTML elements.</para>
            </param>
            <remarks>If html elements were not found then this method returns the HtmlElementCollection object in which IsVoid property is <strong>"<em>true</em>"</strong>.</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the ID, if found; otherwise, the Count property is <strong>"0"</strong>.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByAttribute(System.String,System.String,System.String,System.String)">FindChildrenByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByName(System.String)">FindChildrenByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByTags(System.String)">FindChildrenByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByXPath(System.String)">FindChildrenByXPath Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenById(System.String)">FindChildrenById</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by id
                HtmlElement he = tab.FindElementById("main");
                
                // find all children by id
                HtmlElementCollection heCol = he.FindChildrenById("inputs");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by id
                $he = $tab-&gt;FindElementById("main");
                
                // find all children by id
                $heCol = $he-&gt;FindChildrenById("inputs");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">
            <summary>Searches for an element among the children by the name, and returns the first occurrence.</summary>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name that defines search condition of HTML elements.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see> property is
            "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the name, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByAttribute(System.String,System.String,System.String,System.String)">FindChildrenByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenById(System.String)">FindChildrenById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByName(System.String)">FindChildrenByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByTags(System.String)">FindChildrenByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByXPath(System.String)">FindChildrenByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetSelectedItems">GetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetValue(System.Boolean)">GetValue Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.RiseEvent(System.String,System.String)">RiseEvent Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">SetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetSelectedItems(System.String)">SetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean)">SetValue Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by id
                HtmlElement he = tab.FindElementById("main");
                
                // find child element by name
                HtmlElement heCh = he.FindChildByName("text");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by id
                $he = $tab-&gt;FindElementById("main");
                
                // find child element by name
                $heCh = $he-&gt;FindChildByName("text");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByName(System.String)">
            <summary>Searches for all elements among the children by the name.</summary>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name that defines search condition of HTML elements.</para>
            </param>
            <remarks>If html elements were not found then this method returns the HtmlElementCollection object in which IsVoid property is <strong>"<em>true</em>"</strong>.</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the name, if found; otherwise, the Count property is <strong>"0"</strong>.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByAttribute(System.String,System.String,System.String,System.String)">FindChildrenByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenById(System.String)">FindChildrenById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByTags(System.String)">FindChildrenByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByXPath(System.String)">FindChildrenByXPath Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByName(System.String)">FindChildrenByName</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by id
                HtmlElement he = tab.FindElementById("main");
                
                // find all children by name
                HtmlElementCollection heCol = he.FindChildrenByName("text");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by id
                $he = $tab-&gt;FindElementById("main");
                
                // find all children by name
                $heCol = $he-&gt;FindChildrenByName("text");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">
            <summary>Searches for an element among the children by the tag, and returns the first occurrence.</summary>
            <param name="tag">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tag for search the element.</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The document address.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see> property is
            "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the tag, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByAttribute(System.String,System.String,System.String,System.String)">FindChildrenByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenById(System.String)">FindChildrenById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByName(System.String)">FindChildrenByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByTags(System.String)">FindChildrenByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByXPath(System.String)">FindChildrenByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetSelectedItems">GetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetValue(System.Boolean)">GetValue Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.RiseEvent(System.String,System.String)">RiseEvent Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">SetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetSelectedItems(System.String)">SetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean)">SetValue Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by id
                HtmlElement he = tab.FindElementById("main");
                
                // find child element by tag
                HtmlElement heCh = he.FindChildByTag("input:checkbox", 0);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by id
                $he = $tab-&gt;FindElementById("main");
                
                // find child element by tag
                $heCh = $he-&gt;FindChildByTag("input:checkbox", 0);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByTags(System.String)">
            <summary>Searches for all elements among the children by the tags.</summary>
            <param name="tags">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tags for search the elements. If the count of tags is more than one then they are through ";".</para>
            </param>
            <remarks>If html elements were not found then this method returns the HtmlElementCollection object in which IsVoid property is <strong>"<em>true</em>"</strong>.</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the tags, if found; otherwise, the Count property is <strong>"0"</strong>.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByAttribute(System.String,System.String,System.String,System.String)">FindChildrenByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenById(System.String)">FindChildrenById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByName(System.String)">FindChildrenByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByXPath(System.String)">FindChildrenByXPath Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByTags(System.String)">FindChildrenByTags</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by id
                HtmlElement he = tab.FindElementById("main");
                
                // find all children by tag
                HtmlElementCollection heCol = he.FindChildrenByTags("input:checkbox");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by id
                $he = $tab-&gt;FindElementById("main");
                
                // find all children by tag
                $heCol = $he-&gt;FindChildrenByTags("input:checkbox");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">
            <summary>Searches for an element among the children by the xpath.</summary>
            <param name="xpath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>XPath for search the element.</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The document address.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see> property is
            <strong>"<em>true</em>"</strong>.</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the tag, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByAttribute(System.String,System.String,System.String,System.String)">FindChildrenByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenById(System.String)">FindChildrenById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByName(System.String)">FindChildrenByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByTags(System.String)">FindChildrenByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByXPath(System.String)">FindChildrenByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetSelectedItems">GetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetValue(System.Boolean)">GetValue Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.RiseEvent(System.String,System.String)">RiseEvent Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">SetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetSelectedItems(System.String)">SetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean)">SetValue Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by id
                HtmlElement he = tab.FindElementById("main");
                if (he.IsVoid) return -2;
                // find child element by xpath
                HtmlElement heCh = he.FindChildByXPath("div[@id]", 0);
                if (heCh.IsVoid) return -3;
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by id
                $he = $tab-&gt;FindElementById("main");
                if ($he-&gt;IsVoid) return -2;
                
                // find child element by xpath
                $heCh = $he-&gt;FindChildByXPath("div[@id]", 0);
                if ($heCh-&gt;IsVoid) return -3;
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByXPath(System.String)">
            <summary>Searches for all elements among the children by the xpath.</summary>
            <param name="xpath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>XPath for search the elements.</para>
            </param>
            <remarks>If html elements were not found then this method returns the HtmlElementCollection object in which IsVoid property is <strong>"<em>true</em>"</strong>.</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the tags, if found; otherwise, the Count property is <strong>"0"</strong>.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildById(System.String)">FindChildById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByName(System.String)">FindChildByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByTag(System.String,System.Int32)">FindChildByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByXPath(System.String,System.Int32)">FindChildByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByAttribute(System.String,System.String,System.String,System.String)">FindChildrenByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenById(System.String)">FindChildrenById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByName(System.String)">FindChildrenByName Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildrenByTags(System.String)">FindChildrenByTags</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by id
                HtmlElement he = tab.FindElementById("main");
                
                // find all children by xpath
                HtmlElementCollection heCol = he.FindChildrenByXPath("div[@id]");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by id
                $he = $tab-&gt;FindElementById("main");
                
                // find all children by xpath
                $heCol = $he-&gt;FindChildrenByXPath("div[@id]");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.GetChildren(System.Boolean)">
            <summary>Returns the all children.</summary>
            <param name="recursive">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true to returns all children of the element; otherwise, false, returns the children of the first level.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlCollection</see></para>
            	<para>A collection that contains all children of the html element.</para>
            </returns>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.GetChildren(System.Boolean)">GetChildren</see> method.
            <code title="Example" description="" lang="C#">
            // find element by attribute
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get all children of current html element
            HtmlElementCollection heCol = he.GetChildren(true);</code><code title="Example2" description="" lang="PHP">
            // find element by attribute
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get all children of current html element
            $heCol = $he-&gt;GetChildren(true);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.RemoveChild(ZennoLab.CommandCenter.HtmlElement)">
            <summary>Removes a first level child element.</summary>
            <param name="child">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first level child element to remove.</para>
            </param>
            <remarks>The <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNull</see> property be true if the html element does not belongs to any document.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetChildren(System.Boolean)">GetChildren Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.ReplaceChild(ZennoLab.CommandCenter.HtmlElement,ZennoLab.CommandCenter.HtmlElement)">ReplaceChild Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.RemoveChild(ZennoLab.CommandCenter.HtmlElement)">RemoveChild</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by id
                HtmlElement he = tab.FindElementById("main");
                
                // find element for remove
                HtmlElement heToRemove = tab.FindElementById("inputs");
                
                // remove child element
                he.RemoveChild(heToRemove);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by id
                $he = $tab-&gt;FindElementById("main");
                
                // find element for remove
                $heToRemove = $tab-&gt;FindElementById("inputs");
                
                // remove child element
                $he-&gt;RemoveChild($heToRemove);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.InsertElementBefore(ZennoLab.CommandCenter.HtmlElement)">
            <summary>Inserts the specified element before this element.</summary>
            <param name="insertingElement">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The html element to insert. The value can be null.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.InsertElementAfter(ZennoLab.CommandCenter.HtmlElement)">InsertElementAfter Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.InsertElementBefore(ZennoLab.CommandCenter.HtmlElement)">InsertElementBefore</see> method.
            <code title="Example" description="" lang="C#">
            // find first element
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // find second element
            HtmlElement hePrev = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByName("rad");
             
            // insert element "hePrev" before "he"
            he.InsertElementBefore(hePrev);</code><code title="Example2" description="" lang="PHP">
            // find first element
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // find second element
            $hePrev = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByName("rad");
             
            // insert element "hePrev" before "he"
            $he-&gt;InsertElementBefore($hePrev);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.InsertElementAfter(ZennoLab.CommandCenter.HtmlElement)">
            <summary>Inserts the specified element after this element.</summary>
            <param name="insertingElement">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The html element to insert. The value can be null.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.InsertElementBefore(ZennoLab.CommandCenter.HtmlElement)">InsertElementBefore Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.InsertElementAfter(ZennoLab.CommandCenter.HtmlElement)">InsertElementAfter</see> method.
            <code title="Example" description="" lang="C#">
            // find first element
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // find second element
            HtmlElement heNext = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByName("rad");
             
            // insert element "heNext" after "he"
            he.InsertElementAfter(heNext);</code><code title="Example2" description="" lang="PHP">
            // find first element
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // find second element
            $heNext = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByName("rad");
             
            // insert element "heNext" after "he"
            $he-&gt;InsertElementAfter($heNext);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">
            <summary>Sets the text of attribute.</summary>
            <param name="attrName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute name.</para>
            </param>
            <param name="attrValue">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The new value for this attribute.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.RiseEvent(System.String,System.String)">RiseEvent Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetSelectedItems(System.String)">SetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean)">SetValue Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">SetAttribute</see> method.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // set attribute
            he.SetAttribute("Name", "NewTextValue");</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // set attribute
            $he-&gt;SetAttribute("Name", "NewTextValue");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">
            <summary>Returns the text of attribute.</summary>
            <param name="attrName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of attribute.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The text of attribute.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetValue(System.Boolean)">GetValue Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">SetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean)">SetValue Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute</see> method.
            <code title="Example" description="" lang="C#">
            // find element by attribute
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get attribute value
            string attributeText = he.GetAttribute("TagName");</code><code title="Example2" description="" lang="PHP">
            // find element by attribute
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get attribute value
            $attributeText = $he-&gt;GetAttribute("TagName");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.GetStylePropertyValue(System.String)">
            <summary>Returns the text of style property.</summary>
            <param name="property">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of style property.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The text of style property.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetValue(System.Boolean)">GetValue Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">SetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean)">SetValue Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.GetStylePropertyValue(System.String)">GetStylePropertyValue</see> method.
            <code title="Example" description="" lang="C#">
            // find element by attribute
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get attribute value
            string propertyText = he.GetStylePropertyValue("display");
            // propertyText = "inline-block"</code><code title="Example2" description="" lang="PHP">
            // find element by attribute
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get attribute value
            $propertyText = $he-&gt;GetStylePropertyValue("display");
            // $propertyText = "inline-block"</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.RemoveAttribute(System.String)">
            <summary>Removes the specified attribute.</summary>
            <param name="attrName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of the attribute.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">SetAttribute Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.RiseEvent(System.String,System.String)">
            <summary>The performs the specified event for html element.</summary>
            <param name="eventName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of the event.</para>
            </param>
            <param name="emulation">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The emulation level. Can be: <strong><em>"None"</em></strong>, <strong><em>"Middle"</em></strong>, <strong><em>"Full"</em></strong> or <strong><em>"SuperEmulation"</em></strong>.</para>
            </param>
            <remarks>
            	<para>The emulation levels:</para>
            	<para>
            		<strong>
            			<em>"Full"</em>
            		</strong> - the full emulation which include the generation of all events such as <em>mouseover</em>, <em>mousemove</em>,
            <em>mouseout</em>, <em>focus</em> on element and other.<br/><strong><em>"Middle"</em></strong> - the standard emulation level includes a minimum of actions without additional events.<br/><strong><em>"None"</em></strong> -  the default emulation level without additional events and actions.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">SetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetSelectedItems(System.String)">SetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean)">SetValue Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.RiseEvent(System.String,System.String)">RiseEvent</see> method.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // rise event
            he.RiseEvent("onclick", "full");</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // rise event
            $he-&gt;RiseEvent("onclick", "full");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.ReplaceChild(ZennoLab.CommandCenter.HtmlElement,ZennoLab.CommandCenter.HtmlElement)">
            <summary>Replaces the specified child element.</summary>
            <param name="newChild">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The new child element.</para>
            </param>
            <param name="oldChild">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The old child element.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetChildren(System.Boolean)">GetChildren Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.RemoveChild(ZennoLab.CommandCenter.HtmlElement)">RemoveChild Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.ReplaceChild(ZennoLab.CommandCenter.HtmlElement,ZennoLab.CommandCenter.HtmlElement)">ReplaceChild</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element
                HtmlElement he = tab.FindElementById("main");
                
                // find first element
                HtmlElement heOld = tab.FindElementById("inputs");
                
                // find second element
                HtmlElement heNew = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("a", "href", "http://lessons.zennolab.com/ru/index", "regexp", 0);
                
                // replace element "heOld" to "heNew"
                he.ReplaceChild(heNew, heOld);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element
                $he = $tab-&gt;FindElementById("main");
                
                // find first element
                $heOld = $tab-&gt;FindElementById("inputs");
                
                // find second element
                $heNew = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("a", "href", "http://lessons.zennolab.com/ru/index", "regexp", 0);
                
                // replace element "heOld" to "heNew"
                $he-&gt;ReplaceChild($heNew, $heOld);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.GetValue(System.Boolean)">
            <summary>Returns the value of the html element.</summary>
            <param name="useSelectedItems">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>
            		<strong>
            			<em>true</em>
            		</strong> for getting value using selected items; otherwise, <strong><em>false</em></strong>.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The element value for the html element.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">SetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean)">SetValue Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.GetValue(System.Boolean)">GetValue</see> method.
            <code title="Example" description="" lang="C#">
            // find html element
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get value
            string heValue = he.GetValue(false);</code><code title="Example2" description="" lang="PHP">
            // find html element
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // get value
            $heValue = $he-&gt;GetValue(false);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>Sets the value of the html element.</summary>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The new value for this html element.</para>
            </param>
            <param name="emulation">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The emulation level. May be: "None", "Middle", "Full" or "SuperEmulation".</para>
            </param>
            <param name="useSelectedItems">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if you need use automatic filling standard "select" fields; otherwise false.</para>
            </param>
            <param name="append">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if you need append value to an existing content; otherwise false.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetAttribute(System.String)">GetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetSelectedItems">GetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetValue(System.Boolean)">GetValue Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetAttribute(System.String,System.String)">SetAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetSelectedItems(System.String)">SetSelectedItems Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean,System.Boolean)">SetValue</see> method.
            <code title="Example" description="" lang="C#">
            // find element
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // set value
            he.SetValue("true", "Middle", true);</code><code title="Example2" description="" lang="PHP">
            // find element
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // set value
            $he-&gt;SetValue("true", "Middle", true);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.GetSelectedItems">
            <summary>Returns the value of the selected items.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The value of the selected items recorded through <strong>";"</strong>.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetSelectedItems(System.String)">SetSelectedItems Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.GetSelectedItems">GetSelectedItems</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by name
                HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByName("lang[]");
                if (he.IsVoid) return -1;
                
                // set value
                he.SetValue("1;2;3", true);
                
                // get selected items in string format
                string selectedItems = he.GetSelectedItems();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by name
                $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByName("lang[]");
                if ($he-&gt;IsVoid) return -1;
                
                // set value
                $he-&gt;SetValue("1;2;3", true);
                
                // get selected items in string format
                $selectedItems = $he-&gt;GetSelectedItems();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.SetSelectedItems(System.String)">
            <summary>Sets the value of the selected items.</summary>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The value of the selected items recorded through ";".</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetSelectedItems">GetSelectedItems Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.GetValue(System.Boolean)">GetValue Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.SetValue(System.String,System.String,System.Boolean)">SetValue Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.SetSelectedItems(System.String)">SetSelectedItems</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element
                HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByName("anything[]");
                
                // set selected item
                he.SetSelectedItems("16-30");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element
                $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByName("anything[]");
                
                // set selected item
                $he-&gt;SetSelectedItems("16-30");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.Focus">
            <summary>Sets input focus to the html element.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.RiseEvent(System.String,System.String)">RiseEvent Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.Focus">Focus</see> method.
            <code title="Example" description="" lang="C#">
            // find element by attribute
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // focus on this element
            he.Focus();</code><code title="Example2" description="" lang="PHP">
            // find element by attribute
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // focus on this element
            $he-&gt;Focus();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.Click">
            <summary>The performs the click event on the html element.</summary>
            <remarks>This method performs the click event with default settings. For setting the event settings use the <see cref="M:ZennoLab.CommandCenter.HtmlElement.RiseEvent(System.String,System.String)">RiseEvent</see> method.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.RiseEvent(System.String,System.String)">RiseEvent Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.DragDrop(ZennoLab.CommandCenter.HtmlElement,System.Int32,System.Int32,System.Int32,System.Int32)">DragDrop Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElement.FindChildByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindChildByAttribute Method</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.Document">Document Class</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.Click">Click</see> method
            <code title="Example" description="" lang="C#">
            // find element by attribute
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // click on the element
            he.Click();</code><code title="Example2" description="" lang="PHP">
            // find element by attribute
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
             
            // click on the element
            $he-&gt;Click();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.Reload">
            <summary>Reloads the html element.</summary>
            <remarks>This method performs the reload the html element.</remarks>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElement.Reload">Reload</see> method
            <code title="Example" description="" lang="C#">
            // find flash objects
            var flashObjects = instance.ActiveTab.FindElementsByTags("embed;object");
            if (flashObjects == null) return -1;
                     
            // set wmode = opaque every element which has incorrect value of property "wmode"
            for (int i = 0; i &lt; flashObjects.Count; i++)
            {
                var flashObjectsNew = instance.ActiveTab.FindElementsByTags("embed;object");
                var element         = flashObjectsNew.GetByNumber(i);
                
                var children = element.FindChildrenByName("wmode");
                if (children != null &amp;&amp; children.Count != 0) {
                    for (int j = 0; j &lt; children.Count; j++)
                    {
                        var child = children.GetByNumber(j);
                        if (child.ParentElement.ZP_ID != element.ZP_ID)
                            continue;
                            
                        if (child.TagName.ToLower().Equals("param"))
                        {
                            var wmode = child.GetAttribute("value");
                            if (wmode != null &amp;&amp; (!wmode.ToLower().Equals("opaque") &amp;&amp; !wmode.ToLower().Equals("transparent")))
                            {
                                child.SetAttribute("value", "opaque");
                                element.Reload();
                            }
                        }
                    }
                }
                else
                {
                    var wmode = element.GetAttribute("wmode");
                    if (!(wmode != null &amp;&amp; (wmode.ToLower().Equals("opaque") || wmode.ToLower().Equals("transparent"))))
                    {
                        element.SetAttribute("wmode", "opaque");
                        element.Reload();
                    }
                }
            }</code><code title="Example2" description="" lang="PHP">
            // find flash objects
            $flashObjects = $instance-&gt;ActiveTab-&gt;FindElementsByTags("embed;object");
            if ($flashObjects == null) return -1;
                     
            // set wmode = opaque every element which has incorrect value of property "wmode"
            for ($i = 0; $i &lt; $flashObjects-&gt;Count; i++)
            {
                $flashObjectsNew = $instance-&gt;ActiveTab-&gt;FindElementsByTags("embed;object");
                $element         = $flashObjectsNew-&gt;GetByNumber($i);
                
                $children = $element-&gt;FindChildrenByName("wmode");
                if ($children != null &amp;&amp; $children-&gt;Count != 0) {
                    for ($j = 0; $j &lt; $children-&gt;Count; j++)
                    {
                        $child = $children-&gt;GetByNumber($j);
                        if ($child-&gt;ParentElement-&gt;ZP_ID != $element-&gt;ZP_ID)
                            continue;
                            
                        if ($child-&gt;TagName-&gt;ToLower()-&gt;Equals("param"))
                        {
                            $wmode = $child-&gt;GetAttribute("value");
                            if ($wmode != null &amp;&amp; (!$wmode-&gt;ToLower()-&gt;Equals("opaque") &amp;&amp; !$wmode-&gt;ToLower()-&gt;Equals("transparent")))
                            {
                                $child-&gt;SetAttribute("value", "opaque");
                                $element-&gt;Reload();
                            }
                        }
                    }
                }
                else
                {
                    $wmode = $element-&gt;GetAttribute("wmode");
                    if (!($wmode != null &amp;&amp; ($wmode-&gt;ToLower()-&gt;Equals("opaque") || $wmode-&gt;ToLower()-&gt;Equals("transparent"))))
                    {
                        $element-&gt;SetAttribute("wmode", "opaque");
                        $element-&gt;Reload();
                    }
                }
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.DropFile(System.String,System.Int32,System.Int32)">
            <summary>Drop file to the element.</summary>
            <param name="filepath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to file.</para>
            </param>
            <param name="x">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate inside element's area for rise drag event. Default value is <strong>-1</strong>.</para>
            </param>
            <param name="y">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate inside element's area for rise drag event. Default value is <strong>-1</strong>.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElement.GetNull">
            <summary> Возвращает пустой элемент </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.HtmlElementCollection">
            <summary>Represents a strongly typed list of html elements that can be accessed by index.</summary>
            <remarks>The <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see> class contain the properties such as <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.ErrorDetected">ErrorDetected</see> and
            <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.IsVoid">IsVoid</see>. Their use necessary for the correct work of your code.</remarks>
            <seealso cref="T:ZennoLab.CommandCenter.DocumentCollection">DocumentCollection Class</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement Class</seealso>
            <example>
            The following code example demonstrates several properties and methods of the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by tag
                HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
                
                // if collection is invalid
                if ((heCol.IsVoid) || (heCol.ErrorDetected)) return -1;
                
                HtmlElement he = null;
                
                for (int i = 0; i &lt; heCol.Count; i++) he = heCol.Elements[i];
                
                // get index of html element in collection
                int index = heCol.IndexOf(he);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by tag
                $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
                
                // if collection is invalid
                if (($heCol-&gt;IsVoid) || ($heCol-&gt;ErrorDetected)) return -1;
                
                for ($i = 0; $i &lt; $heCol-&gt;Count; $i++) $he = $heCol-&gt;Elements[$i];
                
                // get index of html element in collection
                $index = $heCol-&gt;IndexOf($he);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="F:ZennoLab.CommandCenter.HtmlElementCollection.ZpIds">
            <summary> id элементов, которые находятся в этой коллекции </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElementCollection.IsVoid">
            <summary>Gets the specified collection is void collection or not.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if collection do not represented on the server; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElementCollection.ErrorDetected">ErrorDetected Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.IsVoid">IsVoid</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by tag
                HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
                
                // if collection is void then return -1
                if (heCol.IsVoid) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by tag
                $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
                
                // if collection is void then return -1
                if ($heCol-&gt;IsVoid) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElementCollection.ErrorDetected">
            <summary>Gets information about the error detected in the performance last command</summary>
            <remarks>If the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see> object does not indicate to the real html element collection then this property is true. Also objects
            of this class contains <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.IsVoid">IsVoid</see> property for identification of html element collection's existence. Almost all classes of
            <see cref="N:ZennoLab.CommandCenter">ZennoLab.CommandCenter</see> contains such properties. Use it for the correct execution of the code.</remarks>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if error detected in the performance last command; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElementCollection.IsVoid">IsVoid Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.ErrorDetected">ErrorDetected</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by tag
                HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
                
                // if error detected then return -1
                if (heCol.ErrorDetected) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by tag
                $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
                
                // if error detected then return -1
                if ($heCol-&gt;ErrorDetected) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">
            <summary>Gets the number of elements actually contained in the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</summary>
            <remarks>The <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property it is the number of elements that are actually in the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</remarks>
            <value>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see><br/>
            The number of elements actually contained in the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Elements">Elements Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.GetByNumber(System.Int32)">GetByNumber Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.IndexOf(ZennoLab.CommandCenter.HtmlElement)">IndexOf Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Insert(ZennoLab.CommandCenter.HtmlElement,System.Int32)">Insert Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.InsertRange">InsertRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Remove(System.Int32)">Remove Method</seealso>
            <example>
            The following code example shows the value of the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property.
            <code title="Example" description="" lang="C#">
            // find elements by tag
            HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
             
            // get count of collection
            int count = heCol.Count;</code><code title="Example2" description="" lang="PHP">
            // find elements by tag
            $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
             
            // get count of collection
            $count = $heCol-&gt;Count;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElementCollection.Elements">
            <summary>Get copies the html elements of the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see> to a new array.</summary>
            <value>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see>[]<br/>
            An array containing copies of the html elements.</value>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count Property</seealso>
            <example>
            The following code example demonstrates the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Elements">Elements</see> property.
            <code title="Example" description="" lang="C#">
            // clear cookie
            instance.ClearCookie();
             
            // go to lessons.zennolab.com
            Tab tab = instance.MainTab;
            if ((tab.IsVoid) || (tab.IsNull)) return -1;
            if (tab.IsBusy) tab.WaitDownloading();
            tab.Navigate("lessons.zennolab.com");
            if (tab.IsBusy) tab.WaitDownloading();
             
            // find elements by tag
            HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
             
            // get an array of elements
            HtmlElement[] he = heCol.Elements;</code><code title="Example2" description="" lang="PHP">
            // clear cookie
            $instance-&gt;ClearCookie();
             
            // go to lessons.zennolab.com
            $tab = $instance-&gt;MainTab;
            if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
            if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
            $tab-&gt;Navigate("lessons.zennolab.com");
            if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
             
            // find elements by tag
            $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
             
            // get an array of elements
            $he = $heCol-&gt;Elements;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.GetByNumber(System.Int32)">
            <summary>Gets the html element by specified number.</summary>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The zero-based number of the html element to get.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The html element at the specified number.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.IndexOf(ZennoLab.CommandCenter.HtmlElement)">IndexOf Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Elements">Elements Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count Property</seealso>
            <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is outside the range of valid indexes for the HtmlElementCollection.</exception>
            <example>
            The following code example demonstrates that the <see cref="M:ZennoLab.CommandCenter.HtmlElementCollection.GetByNumber(System.Int32)">GetByNumber</see> method returns html element by number.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by tag
                HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
                
                // if any element was not found
                if (heCol.Count == 0) return -1;
                
                // get last element by index (number)
                HtmlElement he = heCol.GetByNumber(heCol.Count-1);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by tag
                $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
                
                // if any element was not found
                if ($heCol-&gt;Count == 0) return -1;
                
                // get last element by index (number)
                $he = $heCol-&gt;GetByNumber($heCol-&gt;Count-1);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.Add(ZennoLab.CommandCenter.HtmlElement)">
            <summary>Adds a html element to the end of the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</summary>
            <param name="element">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The html element to be added to the end of the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.AddRange">AddRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Insert(ZennoLab.CommandCenter.HtmlElement,System.Int32)">Insert Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.InsertRange">InsertRange Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Elements">Elements Property</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Add(ZennoLab.CommandCenter.HtmlElement)">Add</see> method. At first we take all html elements from page <see cref="!:lessons.zennolab.com"/> with tags "input:checkbox" then all html elements with tags "input:radio" and store in a collection
            <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elments by tag
                HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
                
                // find elements by tag
                HtmlElementCollection newHeCol = tab.FindElementsByTags("input:radio");
                
                // add all elements from second to first collection
                for (int i = 0; i &lt; newHeCol.Count; i++) heCol.Add(newHeCol.Elements[i]);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elments by tag
                $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
                
                // find elements by tag
                $newHeCol = $tab-&gt;FindElementsByTags("input:radio");
                
                // add all elements from second to first collection
                for ($i = 0; $i &lt; $newHeCol-&gt;Count; $i++) $heCol-&gt;Add($newHeCol-&gt;Elements[$i]);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.AddRange(ZennoLab.CommandCenter.HtmlElementCollection)">
            <summary>
            	<para>Adds the html elements of the specified collection to the end of the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</para>
            </summary>
            <overloads>Adds the html elements to the end of the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</overloads>
            <param name="elements">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection whose html elements should be added to the end of the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>. The collection itself cannot be
            null.</para>
            </param>
            <remarks>The order of the elements in the collection is preserved in the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</remarks>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement Class</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Add(ZennoLab.CommandCenter.HtmlElement)">Add Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Insert(ZennoLab.CommandCenter.HtmlElement,System.Int32)">Insert Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.InsertRange">InsertRange Method</seealso>
            <example>
            The following code example demonstrates the <see cref="O:Zennolab.CommandCenter.HtmlElementCollection.AddRange">AddRange</see> method and various other methods of the
            <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see> class that act on ranges. The <see cref="O:Zennolab.CommandCenter.HtmlElementCollection.AddRange">AddRange</see> method is
            called, with the collection as its argument. The result is that the current elements of the list are added to the end of the list, duplicating all the
            elements.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by tag
                HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
                
                // find elements by tag
                HtmlElementCollection newHeCol = tab.FindElementsByTags("input:radio");
                
                // add second collection to first
                heCol.AddRange(newHeCol);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by tag
                $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
                
                // find elements by tag
                $newHeCol = $tab-&gt;FindElementsByTags("input:radio");
                
                // add second collection to first
                $heCol-&gt;AddRange($newHeCol);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.AddRange(ZennoLab.CommandCenter.HtmlElement[])">
            <summary>Adds the htm elements of the specified array to the end of the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</summary>
            <param name="elements">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see>[]</para>
            	<para>The array whose html elements should be added to the end of the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>. The collection itself cannot be null.</para>
            </param>
            <remarks>The order of the elements in the collection is preserved in the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</remarks>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement Class</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Add(ZennoLab.CommandCenter.HtmlElement)">Add Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Insert(ZennoLab.CommandCenter.HtmlElement,System.Int32)">Insert Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.InsertRange">InsertRange Method</seealso>
            <example>
            The following code example demonstrates the <see cref="O:Zennolab.CommandCenter.HtmlElementCollection.AddRange">AddRange</see> method and various other methods of the
            <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see> class that act on ranges.The <see cref="O:Zennolab.CommandCenter.HtmlElementCollection.AddRange">AddRange</see> method is called,
            with the array as its argument. The result is that the current elements of the list are added to the end of the list, duplicating all the elements.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by tag
                HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
                
                // find elements by tag
                HtmlElementCollection newHeCol = tab.FindElementsByTags("input:radio");
                
                // add second collection to first
                heCol.AddRange(newHeCol.Elements);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by tag
                $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
                
                // find elements by tag
                $newHeCol = $tab-&gt;FindElementsByTags("input:radio");
                
                // add second collection to first
                $heCol-&gt;AddRange($newHeCol);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.Insert(ZennoLab.CommandCenter.HtmlElement,System.Int32)">
            <summary>Inserts a html element into the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see> at the specified index.</summary>
            <param name="element">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The document to insert.</para>
            </param>
            <param name="index">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The zero-based index at which html element should be inserted.</para>
            </param>
            <remarks>If index is equal to <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see>, item is added to the end of <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Add(ZennoLab.CommandCenter.HtmlElement)">Add Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.AddRange">AddRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.InsertRange">InsertRange Method</seealso>
            <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is less than 0 or index is greater than Count.</exception>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Insert(ZennoLab.CommandCenter.HtmlElement,System.Int32)">Insert</see> method, along with various other properties and methods of the
            <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.
            <code title="Example" description="" lang="C#">
            // find elements by tag
            HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
             
            // find element by name
            HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByName("rad");
             
            // if collection is invalid then return -1
            if ((heCol.IsVoid) || (heCol.ErrorDetected)) return -1;
             
            // insert element to collection
            heCol.Insert(he, 0);</code><code title="Example2" description="" lang="PHP">
            // find elements by tag
            $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
             
            // find element by name
            $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByName("rad");
             
            // if collection is invalid then return -1
            if (($heCol-&gt;IsVoid) || ($heCol-&gt;ErrorDetected)) return -1;
             
            // insert element to collection
            $heCol-&gt;Insert($he, 0);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.InsertRange(ZennoLab.CommandCenter.HtmlElementCollection,System.Int32)">
            <summary>Inserts the html element of a collection into the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see> at the specified index.</summary>
            <param name="elements">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection whose elements should be inserted into the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>. The collection itself cannot be null.</para>
            </param>
            <param name="index">Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see><br/>
            The zero-based index at which the new html elements should be inserted.</param>
            <remarks>If index is equal to <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see>, the elements are added to the end of <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>. The order of the elements in the
            collection is preserved in the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Add(ZennoLab.CommandCenter.HtmlElement)">Add Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.AddRange">AddRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Insert(ZennoLab.CommandCenter.HtmlElement,System.Int32)">Insert Method</seealso>
            <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is less than 0 or index is greater than Count.</exception>
            <example>
            The following code example demonstrates the <see cref="O:Zennolab.CommandCenter.HtmlElementCollection.InsertRange">InsertRange</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by tag
                HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
                if ((heCol.IsVoid) || (heCol.ErrorDetected)) return -1;
                
                // find elements by tag
                HtmlElementCollection newHeCol = tab.FindElementsByTags("input:radio");
                if ((newHeCol.IsVoid) || (newHeCol.ErrorDetected)) return -1;
                
                // insert second collection to first
                heCol.InsertRange(newHeCol, 0);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by tag
                $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
                if (($heCol-&gt;IsVoid) || ($heCol-&gt;ErrorDetected)) return -1;
                
                // find elements by tag
                $newHeCol = $tab-&gt;FindElementsByTags("input:radio");
                if (($newHeCol-&gt;IsVoid) || ($newHeCol-&gt;ErrorDetected)) return -1;
                
                // insert second collection to first
                $heCol-&gt;InsertRange($newHeCol, 0);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.InsertRange(ZennoLab.CommandCenter.HtmlElement[],System.Int32)">
            <summary>Inserts the html element of an array into the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see> at the specified index.</summary>
            <overloads>Inserts the html element into the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see> at the specified index.</overloads>
            <param name="elements">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see>[]</para>
            	<para>The array whose elements should be inserted into the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>. The array itself cannot be null.</para>
            </param>
            <param name="index">Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see><br/>
            The zero-based index at which the new html element should be inserted.</param>
            <remarks>If index is equal to <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see>, the elements are added to the end of <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>. The order of the elements in the
            collection is preserved in the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Add(ZennoLab.CommandCenter.HtmlElement)">Add Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.AddRange">AddRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Insert(ZennoLab.CommandCenter.HtmlElement,System.Int32)">Insert Method</seealso>
            <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is less than 0 or index is greater than Count.</exception>
            <example>
            The following code example demonstrates the <see cref="O:Zennolab.CommandCenter.HtmlElementCollection.InsertRange">InsertRange</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by tag
                HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
                if ((heCol.IsVoid) || (heCol.ErrorDetected)) return -1;
                
                // find elements by tag
                HtmlElementCollection newHeCol = tab.FindElementsByTags("input:radio");
                if ((newHeCol.IsVoid) || (newHeCol.ErrorDetected)) return -1;
                
                // insert second collection to first
                heCol.InsertRange(newHeCol.Elements, 0);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by tag
                $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
                if (($heCol-&gt;IsVoid) || ($heCol-&gt;ErrorDetected)) return -1;
                
                // find elements by tag
                $newHeCol = $tab-&gt;FindElementsByTags("input:radio");
                if (($newHeCol-&gt;IsVoid) || ($newHeCol-&gt;ErrorDetected)) return -1;
                
                // insert second collection to first
                $heCol-&gt;InsertRange($newHeCol-&gt;Elements, 0);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.Remove(System.Int32)">
            <summary>Removes the element at the specified index of the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</summary>
            <param name="index">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The zero-based index of the html element to remove.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Add(ZennoLab.CommandCenter.HtmlElement)">Add Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.AddRange">AddRange Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Insert(ZennoLab.CommandCenter.HtmlElement,System.Int32)">Insert Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.InsertRange">InsertRange Method</seealso>
            <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is less than 0 or index is equal to or greater than Count.</exception>
            <example>
            The following code shows the <see cref="M:ZennoLab.CommandCenter.HtmlElementCollection.Remove(System.Int32)">Remove</see> method call
            <code title="Example" description="" lang="C#">
            // find elements by tag
            HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
             
            // remove last element
            heCol.Remove(heCol.Count-1);</code><code title="Example2" description="" lang="PHP">
            // find elements by tag
            $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
             
            // remove last element
            $heCol-&gt;Remove($heCol-&gt;Count-1);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.IndexOf(ZennoLab.CommandCenter.HtmlElement)">
            <summary>Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</summary>
            <param name="element">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The document to locate in the <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see>.</para>
            </param>
            <remarks>The <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">HtmlElementCollection</see> is searched forward starting at index and ending at the last element.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The zero-based index of the first occurrence of item within the entire HtmlElementCollection, if found; otherwise, –1.</para>
            </returns>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Elements">Elements Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count Property</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.HtmlElementCollection.GetByNumber(System.Int32)">GetByNumber Method</seealso>
            <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is less than 0 or index is greater than Count.</exception>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.HtmlElementCollection.IndexOf(ZennoLab.CommandCenter.HtmlElement)">IndexOf</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.MainTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by tag
                HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
                
                // get last element
                HtmlElement he = heCol.Elements[heCol.Count-1];
                
                // get index of 'he' in collection
                int index = heCol.IndexOf(he);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;MainTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by tag
                $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
                
                // get last element
                $he = $heCol-&gt;Elements[$heCol-&gt;Count-1];
                
                // get index of 'he' in collection
                $index = $heCol-&gt;IndexOf($he);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.AttributesToString(System.String)">
            <summary>Returns the attributes of all elements of the collection with the given name and assembles them into text. The attributes recorded through a line terminator.</summary>
            <param name="attrName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Attribute name.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Attributes of all elements of the collection with the given name in text form.</para>
            </returns>
            <example>
            The following code example demonstrates the <see cref="O:Zennolab.CommandCenter.HtmlElementCollection.AttributesToString">AttributesToString</see> method
            <code title="Example" description="" lang="C#">
            // find elements by tag
            HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
             
            // get attributes to string
            string result = heCol.AttributesToString("FullTagName");</code><code title="Example2" description="" lang="PHP">
            // find elements by tag
            $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
             
            // get attributes to string
            $result = $heCol-&gt;AttributesToString("FullTagName");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.AttributesToString(System.String,System.String)">
            <summary>Returns the attributes of all elements of the collection with the given name and assembles them into text. The attributes recorded through the specified
            delimiter.</summary>
            <overloads>Returns the attributes of all elements of the collection with the specified name and assembles them into text.</overloads>
            <param name="attrName">
            	<para>Type: System.String</para>
            	<para>Attribute name.</para>
            </param>
            <param name="delemiter">
            	<para>Type: System.String</para>
            	<para>Delimiter that separates attributes in the text.</para>
            </param>
            <returns>
            	<para>Type: System.String</para>
            	<para>Attributes of all elements of the collection with the given name in text form</para>
            </returns>
            <example>
            The following code example demonstrates the <see cref="O:Zennolab.CommandCenter.HtmlElementCollection.AttributesToString">AttributesToString</see> method
            <code title="Example" description="" lang="C#">
            // find elements by tag
            HtmlElementCollection heCol = tab.FindElementsByTags("input:checkbox");
             
            // get attributes to string
            string result = heCol.AttributesToString("FullTagName", ":");</code><code title="Example2" description="" lang="PHP">
            // find elements by tag
            $heCol = $tab-&gt;FindElementsByTags("input:checkbox");
             
            // get attributes to string
            $result = $heCol-&gt;AttributesToString("FullTagName", ":");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.GetNull">
            <summary> Возвращает пустой элемент </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.HtmlElementCollection.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.HtmlElementCollection.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.Instance">
            <summary>Represents a browser's window of ZennoPoster</summary>
            <remarks>The <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> class contain the properties such as <see cref="P:ZennoLab.CommandCenter.Instance.ErrorDetected">ErrorDetected</see> and <see cref="P:ZennoLab.CommandCenter.Instance.IsVoid">IsVoid</see>. Their use necessary for the
            correct work of your code.</remarks>
            <seealso cref="T:ZennoLab.CommandCenter.Tab">Tab Class</seealso>
            <example>
            	<para>The following example creates an <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object and shows the uses of the object <see cref="T:ZennoLab.CommandCenter.Tab">Tab</see> class.</para>
            	<code title="Example2" description="" lang="C#">
            using System;
            using ZennoLab.CommandCenter;
             
            namespace Sample
            {
                internal class Example
                {
                    public static int Execute()
                    {
                        // create a new Instance object
                        Instance instance = new Instance("127.0.0.1", 40500, "server");
                        
                        // clear cookie
                        instance.ClearCookie();
                        
                        // clear cache
                        instance.ClearCache();
                        
                        // go to zennolab.com
                        Tab tab = instance.MainTab;
                        if (tab.IsNull) return -1;
                        if (tab.IsVoid) return -1;
                        tab.Navigate("zennolab.com");
                        if (tab.IsBusy) tab.WaitDownloading();
                        
                        return 0;
                    }
                }
            }</code>
            	<code title="Example" description="" lang="PHP">
            &lt;?php
            namespace System;
            namespace ZennoLab\CommandCenter;
             
            class Example
            {
                public static function Execute()
                {
                    // create a new Instance object
                    $instance = new Instance("127.0.0.1", 40500, "server");
                    
                    // clear cookie
                    $instance-&gt;ClearCookie();
                    
                    // clear cache
                    $instance-&gt;ClearCache();
                    
                    // go to zennolab.com
                    Tab tab = instance.MainTab;
                    if (tab.IsNull) return -1;
                    if (tab.IsVoid) return -1;
                    tab.Navigate("zennolab.com");
                    if (tab.IsBusy) tab.WaitDownloading();
                    
                    return 0;
                }
            }
            ?&gt;</code>
            </example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.Transfer">
            <summary> </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.Port">
            <summary>Gets or sets the current port of the <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The current port of the <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.Url">
            <summary>Gets the host of the pipe.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The host of the pipe.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.Address">
            <summary>Get instances mode.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The active tab.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.#ctor(System.Int32)">
            <summary>Initialize a new instance of the <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> class with deafult url and address</summary>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port of the instance.</para>
            </param>
            <example>
            The following example creates an <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object
            <code title="Example" description="" lang="C#">
            // create a new instance
            Instance instance = new Instance(40500);</code><code title="Example2" description="" lang="PHP">
            // create a new instance
            $instance = new Instance(40500);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.#ctor(System.String,System.Int32,System.String)">
            <summary>Initialize a new instance of the <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> class</summary>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string expression that evaluates to the URL.</para>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port of the instance.</para>
            </param>
            <param name="address">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>This parameter can take the following values​​: "debug" and "server". The default value is "server".</para>
            </param>
            <example>
            The following example creates an <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object
            <code title="Example" description="" lang="C#">
            // create a new instance
            Instance instance = new Instance("127.0.0.1", 40500, "server");</code><code title="Example2" description="" lang="PHP">
            // create a new instance
            $instance = new Instance("127.0.0.1", 40500, "server");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.#ctor(System.Int32,ZennoLab.CommandCenter.ConnectionType)">
            <summary>Initialize a new instance of the <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> class with deafult url and address</summary>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port of the instance.</para>
            </param>
            <param name="connectionType">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.ConnectionType">ZennoLab.CommandCenter.ConnectionType</see></para>
            	<para>The connection type of the instance.</para>
            </param>
            <example>
            The following example creates an <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object
            <code title="Example" description="" lang="C#">
            // create a new instance
            Instance instance = new Instance(40500, ConnectionType.Pipe);</code><code title="Example2" description="" lang="PHP">
            // create a new instance
            $instance = new Instance(40500, ConnectionType.Pipe);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.#ctor(System.String,System.Int32,System.String,ZennoLab.CommandCenter.ConnectionType)">
            <summary>Initialize a new instance of the <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> class</summary>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string expression that evaluates to the URL.</para>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port of the instance.</para>
            </param>
            <param name="address">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>This parameter can take the following values​​: "debug" and "server". The default value is "server".</para>
            </param>
            <param name="connectionType">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.ConnectionType">ZennoLab.CommandCenter.ConnectionType</see></para>
            	<para>The connection type of the instance.</para>
            </param>
            <example>
            The following example creates an <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object
            <code title="Example" description="" lang="C#">
            // create a new instance
            Instance instance = new Instance("127.0.0.1", 40500, "server", ConnectionType.Pipe);</code><code title="Example2" description="" lang="PHP">
            // create a new instance
            $instance = new Instance("127.0.0.1", 40500, "server", ConnectionType.Pipe);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.IsVoid">
            <summary>Gets the specified instance is void or not.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if instance do not represented on the server; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.ErrorDetected">ErrorDetected Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Instance.IsVoid">IsVoid</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {    
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {    
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.ZP_ID">
            <summary>Gets the ID which represents document on the server.</summary>
            <remarks>It is used only for the technical purposes</remarks>
            <value>
            	<para></para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.ErrorDetected">
            <summary>Gets information about the error detected in the performance last command.</summary>
            <remarks>If the <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object does not indicate to the real instance object then this property is true. Also objects of this class contains
            <see cref="P:ZennoLab.CommandCenter.Instance.IsVoid">IsVoid</see> property for identification of instances's existence. Almost all classes of <see cref="N:ZennoLab.CommandCenter">ZennoLab.CommandCenter</see> contains such
            properties. Use it for the correct execution of the code.</remarks>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if error detected in the performance last command; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IsVoid">IsVoid Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Instance.ErrorDetected">ErrorDetected</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // if error detected then return -1
                if (instance.ErrorDetected) return -1;
                
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // if error detected then return -1
                if ($instance-&gt;ErrorDetected) return -1;
                
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;sVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.AllTabs">
            <summary>Gets the all open tabs.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Tab">Zennolab.CommandCenter.Tab</see>[]</para>
            	<para>An array of tabs open.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.ActiveTab">ActiveTab Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.MainTab">MainTab Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Instance.AllTabs">AllTabs</see> property.
            <code title="Example" description="" lang="C#">
            // get all tabs
            Tab[] tabs = instance.AllTabs;</code><code title="Example2" description="" lang="PHP">
            // get all tabs
            $tabs = $instance-&gt;AllTabs;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.MainTab">
            <summary>Gets the main tab. The tab with name "page" or last created.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Tab">Zennolab.CommandCenter.Tab</see></para>
            	<para>The main tab.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.ActiveTab">ActiveTab Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.AllTabs">AllTabs Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Instance.MainTab">MainTab</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab mainTab = instance.MainTab;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $mainTab = $instance-&gt;MainTab;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.ActiveTab">
            <summary>Gets the active tab.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Tab">Zennolab.CommandCenter.Tab</see></para>
            	<para>The active tab.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.AllTabs">AllTabs Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.MainTab">MainTab Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Instance.ActiveTab">ActiveTab</see> property.
            <code title="Example" description="" lang="C#">
            // get active tab
            Tab activeTab = instance.ActiveTab;</code><code title="Example2" description="" lang="PHP">
            // get active tab
            $activeTab = $instance-&gt;ActiveTab;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.ActiveExtension">
            <summary>Gets the active extension.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Tab">Zennolab.CommandCenter.Tab</see></para>
            	<para>The active extension.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Instance.ActiveExtension">ActiveExtension</see> property.
            <code title="Example" description="" lang="C#">
            // get active extension
            Tab activeExtension = instance.ActiveExtension;</code><code title="Example2" description="" lang="PHP">
            // get active extension
            activeExtension = $instance-&gt;ActiveExtension;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.IsExtensionWorking">
            <summary>Gets a value that indicates whether extension activated (working).</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if extension activated; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.LoadPictures">
            <summary>Gets or sets a value that indicates whether loading picture from server are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if loading picture are allowed; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.FormTitle">
            <summary>Gets the parent form title</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The parent form title</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.AllowPopUp">
            <summary>Gets or sets a value that indicates whether popups are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if pop-ups are allowed; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.AllowScriptError">
            <summary>Gets or sets a value that indicates whether script error are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if script error are allowed; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.BackGroundSoundsPlay">
            <summary>Gets or sets a value that indicates whether play background sounds associated with the document are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if playing background sounds are allowed; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.DownloadActiveX">
            <summary>Gets or sets a value that indicates whether to download ActiveX controls are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if download ActiveX controls are allowed; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.DownloadFrame">DownloadFrame Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.DownloadVideos">DownloadVideos Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.DownloadFrame">
            <summary>Gets or sets a value that indicates whether download contents of frames are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if download frame are allowed; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.DownloadActiveX">DownloadActiveX Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.DownloadVideos">DownloadVideos Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UseJavaApplets">
            <summary>Gets or sets a value that indicates whether to run Java applets are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if run Java applets are allowed; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UseCSS">UseCSS Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UseJavaScripts">UseJavaScripts Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UsePlugins">UsePlugins Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UsePluginsForceWmode">UsePluginsForceWmode Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UsePlugins">
            <summary>Gets or sets a value that indicates whether to run Plugins are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if run Plugins are allowed; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UseCSS">UseCSS Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UseJavaApplets">UseJavaApplets Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UseJavaScripts">UseJavaScripts Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UsePluginsForceWmode">UsePluginsForceWmode Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UseMedia">
            <summary>Gets or sets a value that indicates whether to use media content are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use media content are allowed; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.RunActiveX">
            <summary>Gets or sets a value that indicates whether to run on the execution of ActiveX controls are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if run on the execution of ActiveX controls are allowed; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UseJavaScripts">
            <summary>Gets or sets a value that indicates whether use of Java scripts are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use Java scripts are allowed; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UseCSS">UseCSS Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UseJavaApplets">UseJavaApplets Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UsePlugins">UsePlugins Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UsePluginsForceWmode">UsePluginsForceWmode Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UseCSS">
            <summary>Gets or sets a value that indicates whether use of CSS are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use CSS are allowed; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UseJavaApplets">UseJavaApplets Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UseJavaScripts">UseJavaScripts Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UsePlugins">UsePlugins Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UsePluginsForceWmode">UsePluginsForceWmode Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UseAdds">
            <summary>Gets or sets a value that indicates whether blocks adds.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if blocks adds are not allowed; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UsePluginsForceWmode">
            <summary>Gets or sets a value that indicates whether use of Java scripts are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use force plugins wmode (opaque); otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UseCSS">UseCSS Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UseJavaApplets">UseJavaApplets Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UseJavaScripts">UseJavaScripts Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.UsePlugins">UsePlugins Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.ForceTouch">
            <summary>Gets or sets a value that indicates whether user's manual mouse input must be replaced with touch events.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if input must be replaced with touch events; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UseBrowserWithoutContent">
            <summary>Gets or sets a value that indicates whether show content of the browser.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if doesn't show content of the browser; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.DownloadVideos">
            <summary>Gets or sets a value that indicates whether download videos contained in the document are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if download video are allowed; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.DownloadActiveX">DownloadActiveX Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.DownloadFrame">DownloadFrame Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.ClearCookie(System.String)">
            <summary>Clears the cookies.</summary>
            <param name="domainFilter">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The regular expressions for filtering by domain. If value is null or empty string, then method clears cookies for all domains. The default value is empty string.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCache">ClearCache Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearProxy">ClearProxy Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.LoadCookie">LoadCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SaveCookie">SaveCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetCookie">SetCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetCookie">GetCookie Method</seealso>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.ClearCookie(System.String)">ClearCookie</see> method.
            <code title="Example" description="" lang="C#">
            // clear cookie
            instance.ClearCookie();</code><code title="Example2" description="" lang="PHP">
            // clear cookie
            $instance-&gt;ClearCookie();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.ClearCache(System.String,System.Boolean)">
            <summary>Clears the cache.</summary>
            <param name="domainFilter">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The regular expressions for filtering by domain. If value is null or empty string, then method clears caches for all domains. The default value is empty string.</para>
            </param>
            <param name="storeCookie">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need to store the cookies; otherwise false.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearProxy">ClearProxy Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.Instance.ClearCache(System.String,System.Boolean)">ClearCache</see> method.
            <code title="Example" description="" lang="C#">
            // clear cache
            instance.ClearCache();</code><code title="Example2" description="" lang="PHP">
            // clear cache
            $instance-&gt;ClearCache();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SwitchPopupHandlerMode(System.Boolean,System.String)">
            <summary>Reserved function</summary>
            <buildflag>Exclude from Online</buildflag>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.NewTab(System.String)">
            <summary>Creates a new tab in the current instance.</summary>
            <param name="address">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The header of a new tab.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Tab">Zennolab.CommandCenter.Tab</see></para>
            	<para>A new tab in the current instance.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.CloseAllTabs">CloseAllTabs Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.ActiveTab">ActiveTab Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.AllTabs">AllTabs Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.MainTab">MainTab Property</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.NewTab(System.String)">NewTab</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // create a new tab and go to zennolab.com
                tab = instance.NewTab("zennolab");
                tab.Navigate("zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-.IsBusy) $tab-&gt;WaitDownloading();
                
                // create a new tab and go to zennolab.com
                $tab = $instance-&gt;NewTab("zennolab");
                $tab-&gt;Navigate("zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetTabByAddress(System.String)">
            <summary>Returns tab by the address.</summary>
            <param name="address">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The address of tab in the <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</para>
            </param>
            <remarks>
            	<para>"page" - this is the default value for main tab. For popup uses the address "popup".</para>
            </remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Tab">Zennolab.CommandCenter.Tab</see></para>
            	<para>The tab of the <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object with the necessary address.</para>
            </returns>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.GetTabByAddress(System.String)">GetTabByAddress</see> method by address "page".
            <code title="Example" description="" lang="C#">
            // get tab by address
            Tab tab = instance.GetTabByAddress("page");</code><code title="Example2" description="" lang="PHP">
            // get tab by address
            $tab = $instance-&gt;GetTabByAddress("page");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.ReleasePreparing(System.Boolean)">
            <summary>Prepare before release instance.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.CloseAllTabs">
            <summary>Closes all tabs except the main tab.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.NewTab(System.String)">NewTab Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.ActiveTab">ActiveTab Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.AllTabs">AllTabs Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.MainTab">MainTab Property</seealso>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.CloseAllTabs">CloseAllTabs</see> method.
            <code title="Example" description="" lang="C#">
            // close all tabs
            instance.CloseAllTabs();</code><code title="Example2" description="" lang="PHP">
            // close all tabs
            $instance-&gt;CloseAllTabs();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetOkAlertPolicy(System.String,System.String)">
            <summary>Sets the policy for pop-up Alert windows with one-click OK.</summary>
            <param name="answer">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The answer for the window.</para>
            </param>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The id of project. The default value is empty string.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetOkCancelConfirmPolicy(System.String,System.String)">
            <summary>Sets the policy for pop-up windows Confirm with OK and Cancel.</summary>
            <param name="answer">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The answer for the window of the authorization. This parameter can take the following values: "ok" or "cancel".</para>
            </param>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The id of project. The default value is empty string.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetCertificate(System.String,System.String)">
            <summary>Sets the certificate to browser.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path of certificate, witch extension is ".p12" or ".pfx".</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password for certificate.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetJSValuePromptPolicy(System.String,System.String,System.String)">
            <summary>Sets the policy for pop-up Prompt windows with an input field value.</summary>
            <param name="answer">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The answer for the window of the authorization. This parameter can take the following values: "ok" or "cancel".</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The value of the answer.</para>
            </param>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The id of project. The default value is empty string.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetFileUploadPolicy(System.String,System.String,System.String)">
            <summary>Sets the policy for the windows of to send the file to the server.</summary>
            <param name="answer">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The answer for the window of the authorization. This parameter can take the following values: "ok" or "cancel".</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The value of the answer.</para>
            </param>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The id of project. The default value is empty string.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetAuthorizationPolicy(System.String,System.String,System.String,System.String)">
            <summary>Sets the policy for the windows of the authorization.</summary>
            <param name="answer">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The answer for the window of the authorization. This parameter can take the following values: "ok" or "cancel".</para>
            </param>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login for the window of the authorization.</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password for the window of the authorization.</para>
            </param>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The id of project. The default value is empty string.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetCertificatesPolicy(System.String)">SetCertificatesPolicy Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetFileUploadPolicy(System.String,System.String)">SetFileUploadPolicy Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetJSValuePromptPolicy(System.String,System.String)">SetJSValuePromptPolicy Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetOkAlertPolicy(System.String)">SetOkAlertPolicy Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetOkCancelConfirmPolicy(System.String)">SetOkCancelConfirmPolicy Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetCertificatesPolicy(System.String,System.String)">
            <summary>Sets the policy for the window of making the certificate.</summary>
            <param name="answer">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The answer for the window.</para>
            </param>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The id of project. The default value is empty string.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetDefaultPreference(System.String)">
            <summary>Sets the all the default settings.</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The id of project. The default value is empty string.</para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.SetDefaultPreference(System.String)">SetDefaultPreference</see> method.
            <code title="Example" description="" lang="C#">
            instance.SetDefaultPreference();</code><code title="Example2" description="" lang="PHP">
            $instance-&gt;SetDefaultPreference();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetProxy(System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Sets the proxy to the instance.</summary>
            <overloads>Sets the proxy to the instance.</overloads>
            <param name="ip">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The IP address for the proxy.</para>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port for the instance.</para>
            </param>
            <param name="type">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of proxy. It's can be http, socks4 or socks5</para>
            </param>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login for authorization.</para>
            </param>
            <param name="password">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password for authorization.</para>
            </param>
            <param name="useProxifier">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use proxifier; otherwise and default, false.</para>
            </param>
            <param name="emulateGeolocation">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate geolocation according with the ip, but the accuracy  will be generated randomly from 50 meters to 20 kilometers; otherwise and default, false.</para>
            </param>
            <param name="emulateTimezone">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate timezone according with the ip; otherwise and default, false.</para>
            </param>
            <param name="emulateWebrtc">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate webrtc addresses according with the ip; otherwise and default, false.</para>
            </param>
            <remarks>The parameters login and password can be empty if authorization is not necessary.</remarks>
            <example>
            The following code example demonstrates uses of the <see cref="o:SetProxy">SetProxy</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance)
            {
                instance.ClearCookie();
                instance.ClearProxy();        
                instance.SetProxy("174.59.74.190", 1686, "http", "", "");
                        
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                        
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance)
            {
                $instance-&gt;ClearCookie();
                $instance-&gt;ClearProxy();        
                $instance-&gt;SetProxy("174.59.74.190", "http", "", "");
                        
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                        
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetProxy(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Sets the proxy to the instance.</summary>
            <overloads>Sets the proxy to the instance.</overloads>
            <param name="proxyString">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The parameters of proxy. This string should has the follow format: [protocol://][(login):(password)@](ip):(port). For example: socks5://192.168.0.1:80</para>
            </param>
            <param name="useProxifier">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use proxifier; otherwise and default, false.</para>
            </param>
            <param name="emulateGeolocation">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate geolocation according with the ip; otherwise and default, false.</para>
            </param>
            <param name="emulateTimezone">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate timezone according with the ip; otherwise and default, false.</para>
            </param>
            <param name="emulateWebrtc">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need emulate webrtc addresses according with the ip; otherwise and default, false.</para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="o:SetProxy">SetProxy</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance)
            {
                instance.ClearCookie();
                instance.ClearProxy();        
                instance.SetProxy("http://174.59.74.190:1686");
                        
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                        
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute(e$instance)
            {
                $instance-&gt;ClearCookie();
                $instance-&gt;ClearProxy();        
                $instance-&gt;SetProxy("http://174.59.74.190:1686");
                        
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                        
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetProxy(ZennoLab.CommandCenter.ProxySettings,ZennoLab.CommandCenter.NetworkSettings)">
            <summary>Sets the proxy and network settings to the instance.</summary>
            <overloads>Sets the proxy to the instance.</overloads>
            <remarks>
                Null params do not reset proxy or network settings.
                To reset NetworkSettings, call the method with empty class instannces.
            	<para>"networkSettings" - available only in Chromium.</para>
            </remarks>
            <param name="proxySettings">
            	<para>Type: <see>ZennoLab.CommandCenter.ProxySettings</see></para>
            	<para>Class of proxy parameters</para>
            </param>
            <param name="networkSettings">
            	<para>Type: <see>ZennoLab.CommandCenter.NetworkSettings</see></para>
            	<para>Class of network settings parameters</para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.SetProxy(ZennoLab.CommandCenter.ProxySettings,ZennoLab.CommandCenter.NetworkSettings)">SetProxy</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance)
            {
                instance.ClearCookie();
                instance.ClearProxy();
                instance.SetProxy(new ProxySettings("http://174.59.74.190:1686"), new NetworkSettings(true, "https://cloudflare-dns.com/dns-query{?dns} https://dns.google/dns-query{?dns}")
                        
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                        
                return 0;
            }</code>
            /// The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.SetProxy(ZennoLab.CommandCenter.ProxySettings,ZennoLab.CommandCenter.NetworkSettings)">SetProxy</see> method to reset NetworkSettings.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance)
            {
                instance.ClearCookie();
                // reset proxy
                instance.ClearProxy();
                // reset NetworkSettings
                instance.SetProxy(null, new NetworkSettings());
            
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                        
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ZennoLab.CommandCenter.Instance.SetProxyExclusions(System.Collections.Generic.IEnumerable{System.String})" -->
        <member name="M:ZennoLab.CommandCenter.Instance.SetHeader(System.String,System.String)">
            <summary>Sets the header for tab.</summary>
            <param name="headerName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The header name.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The header value.</para>
            </param>
            <remarks>The method call is made before calling any other methods of an <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</remarks>
            <example>
            The following code example demonstrates uses of the <see cref="o:SetHeader">SetHeader</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // set header
                instance.SetHeader("HTTP_USER_AGENT", "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; ZennoPoster)");
                
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // set header
                $instance-&gt;SetHeader("HTTP_USER_AGENT", "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; ZennoPoster)");
                
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetHeader(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField,System.String)">
            <summary>Sets the header for tab.</summary>
            <param name="field">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField">ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField</see></para>
            	<para>The header name.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The header value.</para>
            </param>
            <remarks>The method call is made before calling any other methods of an <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</remarks>
            <example>
            The following code example demonstrates uses of the <see cref="o:SetHeader">SetHeader</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // set header
                instance.SetHeader(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField.UserAgent, "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; ZennoPoster)");
                
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // set header
                $instance-&gt;SetHeader(ZennoLab\InterfacesLibrary\Enums\Browser\NavigatorField::UserAgent, "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; ZennoPoster)");
                
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetUserHeader(System.String,System.String)">
            <summary>Sets the user header for tabs requests.</summary>
            <param name="headerName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The header name.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The header value.</para>
            </param>
            <remarks>The method call is made before calling any other methods of an <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</remarks>
            <example>
            The following code example demonstrates uses of the <see cref="o:SetHeader">SetHeader</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // set header
                instance.SetHeader("X-Forwarded-For", "123.34.5.78");
                
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // set header
                $instance-&gt;SetHeader("X-Forwarded-For", "123.34.5.78");
                
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.ShowNavigatorField(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField)">
            <summary>Show navigator field for tab.</summary>
            <param name="field">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField">ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField</see></para>
            	<para>The field name.</para>
            </param>
            <remarks>The method call is made before calling any other methods of an <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</remarks>
            <example>
            The following code example demonstrates uses of the <see cref="o:SetHeader">SetHeader</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // set header
                instance.ShowNavigatorField(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField.JavaEnabled);
                
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("whoer.net", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.ShowNavigatorField(System.String)">
            <summary>Show navigator field for tab.</summary>
            <param name="field">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The field name.</para>
            </param>
            <remarks>The method call is made before calling any other methods of an <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</remarks>
            <example>
            The following code example demonstrates uses of the <see cref="o:SetHeader">SetHeader</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // set header
                instance.ShowNavigatorField("javaEnabled");
                
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("whoer.net", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.HideNavigatorField(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField)">
            <summary>Hide navigator field for tab.</summary>
            <param name="field">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField">ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField</see></para>
            	<para>The field name.</para>
            </param>
            <remarks>The method call is made before calling any other methods of an <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</remarks>
            <example>
            The following code example demonstrates uses of the <see cref="o:SetHeader">SetHeader</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // set header
                instance.HideNavigatorField(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField.JavaEnabled);
                
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("whoer.net", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.HideNavigatorField(System.String)">
            <summary>Hide navigator field for tab.</summary>
            <param name="field">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The field name.</para>
            </param>
            <remarks>The method call is made before calling any other methods of an <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</remarks>
            <example>
            The following code example demonstrates uses of the <see cref="o:SetHeader">SetHeader</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // set header
                instance.HideNavigatorField("javaEnabled");
                
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("whoer.net", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetPlugins">
            <summary>Returns a collection of current visible plugins.</summary>
            <returns>
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of plugins.</para>
            </returns>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.GetPlugins">GetPlugins</see> method.
            <code title="Example" description="" lang="C#">
            // get plugins
            var plugins = instance.GetPlugins();
            // name of first plugin
            string name = "";
            if (plugins != null)
            {
                var pluginsList = plugins.ToList();
                if(pluginsList.Count &gt; 0)
                {
                    name = pluginsList[0].Name;
                }
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.ShowPlugin(ZennoLab.CommandCenter.PluginItem)">
            <summary>Show the plugin.</summary>
            <param name="plugin">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.PluginItem">ZennoLab.CommandCenter.PluginItem</see></para>
            	<para>Plugin object for showing. If it not exist in plugins collection, it will be added to colllection.</para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.ShowPlugin(ZennoLab.CommandCenter.PluginItem)">ShowPlugin</see> method.
            <code title="Example" description="" lang="C#">
            // create plugin item
            var plugin = new ZennoLab.CommandCenter.PluginItem("Plugin name", "PluginFile.dll", "It is description of plugin", "15.0.0.3");
            // add and show plugin
            instance.ShowPlugin(plugin);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.HidePlugin(ZennoLab.CommandCenter.PluginItem)">
            <summary>Hide the plugin.</summary>
            <param name="plugin">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.PluginItem">ZennoLab.CommandCenter.PluginItem</see></para>
            	<para>Plugin object for hiding.</para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.HidePlugin(ZennoLab.CommandCenter.PluginItem)">HidePlugin</see> method.
            <code title="Example" description="" lang="C#">
            // create plugin item
            var plugin = new ZennoLab.CommandCenter.PluginItem("Plugin name", "PluginFile.dll", "It is description of plugin", "15.0.0.3");
            // hide plugin
            instance.HidePlugin(plugin);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadPlugins(System.String)">
            <summary>Loads plugins.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to plugins.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetPlugins">GetPlugins Method</seealso>
            <seealso cref="M:ZennoLab.CommanмdCenter.Instance.ShowPlugin(ZennoLab.CommandCenter.PluginItem)">ShowPlugin Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.HidePlugin(ZennoLab.CommandCenter.PluginItem)">ShowPlugin Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SavePlugins(System.String)">SavePlugins Method</seealso>
            <example>
            The following example uses the <see cref="o:LoadPlugins">LoadPlugins</see> method.
            <code title="Example" description="" lang="C#">
            // load plugins
            instance.LoadPlugins("path");</code><code title="Example2" description="" lang="PHP">
            // load plugins
            $instance-&gt;LoadPlugins("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadPlugins(System.Byte[])">
            <summary>Loads plugins.</summary>
            <param name="plugins">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The plugins data.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SavePlugins(System.String)">
            <summary>Saves plugins.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to plugins.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetPlugins">GetPlugins Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ShowPlugin(ZennoLab.CommandCenter.PluginItem)">ShowPlugin Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.HidePlugin(ZennoLab.CommandCenter.PluginItem)">ShowPlugin Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.LoadPlugins(System.String)">LoadPlugins Method</seealso>
            <example>
            The following example uses the <see cref="o:SavePlugins">SavePlugins</see> method.
            <code title="Example" description="" lang="C#">
            // save plugins
            instance.SavePlugins("path");</code><code title="Example2" description="" lang="PHP">
            // save plugins
            $instance-&gt;SavePlugins("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SavePlugins">
            <summary>Saves plugins.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The path to plugins.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadLocalStorage(System.String)">
            <summary>Loads local storage.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to local storage data.</para>
            </param>
            <example>
            The following example uses the <see cref="o:LoadLocalStorage">LoadLocalStorage</see> method.
            <code title="Example" description="" lang="C#">
            // load local storage
            instance.LoadLocalStorage("path");</code><code title="Example2" description="" lang="PHP">
            // load local storage
            $instance-&gt;LoadLocalStorage("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadLocalStorage(System.Byte[])">
            <summary>Loads local storage.</summary>
            <param name="storage">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The local storage data.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SaveLocalStorage(System.String)">
            <summary>Saves local storage.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to local storage data.</para>
            </param>
            <example>
            The following example uses the <see cref="o:SaveLocalStorage">SaveLocalStorage</see> method.
            <code title="Example" description="" lang="C#">
            // save local storage
            instance.SaveLocalStorage("path");</code><code title="Example2" description="" lang="PHP">
            // save local storage
            $instance-&gt;SaveLocalStorage("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SaveLocalStorage">
            <summary>Saves local storage.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The local storage data.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.HeadersToDefault">
            <summary>Sets all headers to default.</summary>
            <example>
            The following code example demonstrates uses of the HeadersToDefault method.
            </example>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetProxy">
            <summary>Returns a proxy of the <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</summary>
            <remarks>If a proxy is not used, then the result is "noproxy"</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Contains a string of the form "ip:port:isSocks"</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearProxy">ClearProxy Method</seealso>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.GetProxy">GetProxy</see> method. Parses proxy and gets ip, port, socks.
            <code title="Example" description="" lang="C#">
            // get proxy
            string proxy = instance.GetProxy();
             
            // if instance has proxy
            if (proxy != "noproxy")
            {
                // split string
                string[] args = proxy.Split(':');
                // first is id
                string ip = args[0];
                // second is port
                int port = Convert.ToInt32(args[1]);
                // third is socks or not
                bool s = Convert.ToBoolean(args[2]); 
            }</code><code title="Example2" description="" lang="PHP">
            // get proxy
            $proxy = $instance-&gt;GetProxy();
             
            // if instance has proxy
            if ($proxy != "noproxy")
            {
                // split string
                $args = $proxy-&gt;Split(':');
                // first is id
                $ip = $args[0];
                // second is port
                $port = System\Convert::ToInt32($args[1]);
                // third is socks or not
                $s = System\Convert::ToBoolean($args[2]); 
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.ClearProxy">
            <summary>Removes the proxy from the <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCache">ClearCache Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearProxy">ClearProxy Method</seealso>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.ClearProxy">ClearProxy</see> method.
            <code title="Example" description="" lang="C#">
            // clear proxy
            instance.ClearProxy();</code><code title="Example2" description="" lang="PHP">
            // clear proxy
            $instance-&gt;ClearProxy();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetTemplateValue(System.String,System.String)">
            <summary>Returns the value of a branch in the template for the specified step.</summary>
            <param name="stepId">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Id of step.</para>
            </param>
            <param name="branchName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The branch name.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The value of a branch.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetTemplateValue(System.String,System.String,System.String)">
            <summary>Sets the value of a branch in the template for the specified step.</summary>
            <param name="stepId">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Id of the step.</para>
            </param>
            <param name="branchName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The branch name.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The value to set.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.RiseMacros(System.String,System.String[])">
            <summary>Executes the specified macros with parameters.</summary>
            <overloads>Executes the specified macros.</overloads>
            <param name="macrosType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of macros.</para>
            </param>
            <param name="parameters">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>[]</para>
            	<para>An array of parameters for macros.</para>
            </param>
            <remarks>Full description of macros can be found here: <see cref="!:http://help.zennolab.com/en/v3/zennoposter/index.html?macroses.htm">Macros</see>.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result of the macros. If the value is empty string then an error at runtime.</para>
            </returns>
            <example>
            The following code example demonstrates uses of the <see cref="O:Zennolab.CommandCenter.Instance.RiseMacros">RiseMacros</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance)
            {
                instance.ClearCookie();
             
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                        
                HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByName("text");
                        
                string result = instance.RiseMacros("Person.FirstName", new [] { "eng", "male" });
                        
                he.SetValue(result, true);
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance)
            {
                $instance-&gt;ClearCookie();
             
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                        
                $he = $instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByName("text");
                        
                $result = $instance-&gt;RiseMacros("Person.FirstName", array("eng", "male"));
                        
                $he-&gt;SetValue($result, true);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.EvaluateJavaScript(System.String)">
            <overloads>Evaluates localy the specified java script code (supports WSH objects).</overloads>
            <summary>Evaluates localy the specified java script code (supports WSH objects).</summary>
            <param name="javaScript">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The specified java script string to evaluate.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result of the evaluation. If the value is empty string then an error at runtime.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.RiseMacros(System.String)">
            <overloads>Executes the specified macros.</overloads>
            <summary>Executes the specified macros.</summary>
            <param name="macros">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The macros as a string in the following format: {-MacrosType-|-param1-|-param2-| - ... -}</para>
            </param>
            <remarks>Full description of macros can be found here: <see cref="!:http://help.zennolab.com/en/v3/zennoposter/index.html?macroses.htm">Macros</see>.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result of the macros. If the value is empty string then an error at runtime.</para>
            </returns>
            <example>
            The following code example demonstrates uses of the <see cref="O:Zennolab.CommandCenter.Instance.RiseMacros">RiseMacros</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance)
            {
                instance.ClearCookie();
             
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                        
                HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByName("text");
                        
                string result = instance.RiseMacros("{-Person.FirstName-|-eng-|-male-}");
                        
                he.SetValue(result, true);
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance)
            {
                $instance-&gt;ClearCookie();
             
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                        
                $he = $instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByName("text");
                        
                $result = $instance-&gt;RiseMacros("{-Person.FirstName-|-eng-|-male-}");
                        
                $he-&gt;SetValue($result, true);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.Reload">
            <summary>Reloads the current Instance object. Works only in ProjectMaker and ZennoPoster.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.Launch(ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType,System.Boolean)">
            <summary>Launches the instance with required built-in browser type. Works in ProjectMaker and ZennoPoster.</summary>
            <param name="browserType">
            	<para>Type: <see cref="P:ZennoLab.CommandCenter.Instance.BrowserType">ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType</see></para>
            	<para>The required type of browser to launch.</para>
            </param>
            <param name="useProfile">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need to use the current profile; otherwise false.</para>
            </param>
            <example>
            The following example uses the <see cref="o:Launch">Launch</see> method.
            <code title="Example" description="" lang="C#">
            instance.Launch(ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType.WithoutBrowser, true);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.Launch(ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType,System.String,System.Boolean)">
            <summary>Launches the instance with required built-in browser type and browser arguments. Works in ProjectMaker and ZennoPoster.</summary>
            <param name="browserType">
            	<para>Type: <see cref="P:ZennoLab.CommandCenter.Instance.BrowserType">ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType</see></para>
            	<para>The required type of browser to launch.</para>
            </param>
            <param name="browserArgs">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The command line arguments for starting browser.</para>
            </param>
            <param name="useProfile">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if need to use the current profile; otherwise false.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.Launch(ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType,System.String,System.String)">
            <summary>Launches the instance with required built-in browser type, browser arguments and folder-profile. Works in ProjectMaker and ZennoPoster.</summary>
            <param name="browserType">
            	<para>Type: <see cref="P:ZennoLab.CommandCenter.Instance.BrowserType">ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType</see></para>
            	<para>The required type of browser to launch.</para>
            </param>
            <param name="browserArgs">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The command line arguments for starting browser.</para>
            </param>
            <param name="cachePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Path to the folder-profile folder.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.Launch(ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType,System.String,System.String,System.Boolean)">
            <summary>Launches the instance with required built-in browser type, browser arguments and folder-profile. Works in ProjectMaker and ZennoPoster.</summary>
            <param name="browserType">
            	<para>Type: <see cref="P:ZennoLab.CommandCenter.Instance.BrowserType">ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType</see></para>
            	<para>The required type of browser to launch.</para>
            </param>
            <param name="browserArgs">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The command line arguments for starting browser.</para>
            </param>
            <param name="cachePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Path to the folder-profile folder.</para>
            </param>
            <param name="convertProfileFolder">
            	<para>Type: <see cref="!:https://docs.microsoft.com/en-us/dotnet/api/system.boolean">System.Boolean</see></para>
            	<para>Convert CEF profile folder to Chromium profile folder.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.IntegrationLaunch(System.String)">
            <summary>Launches integtated instance. Works in ProjectMaker and ZennoPoster.</summary>
            <param name="profileId">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The profile identifier in ZennoBrowser.</para>
            </param>
            <example>
            The following example uses the <see cref="o:IntegrationLaunch">IntegrationLaunch</see> method.
            <code title="Example" description="" lang="C#">
            // Launch integrated browser
            instance.IntegrationLaunch(project.Variables["id"].Value);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.IntegrationLaunch(System.String,System.String)">
            <summary>Launches integtated instance. Works in ProjectMaker and ZennoPoster.</summary>
            <param name="profileId">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The profile identifier in ZennoBrowser.</para>
            </param>
            <param name="workspaceId">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The workspace identifier in ZennoBrowser.</para>
            </param>
            <example>
            The following example uses the <see cref="o:IntegrationLaunch">IntegrationLaunch</see> method.
            <code title="Example" description="" lang="C#">
            // Launch integrated browser
            instance.IntegrationLaunch(project.Variables["profileId"].Value, project.Variables["workspaceId"].Value);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.Launch(ZennoLab.CommandCenter.Classes.BrowserLaunchSettings)">
            <summary>Launches the instance with settings object, allow to launch any browser type. Works in ProjectMaker and ZennoPoster.</summary>
            <param name="launchSettings">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Classes.BrowserLaunchSettings">ZennoLab.CommandCenter.Classes.BrowserLaunchSettings</see></para>
            	<para>The settings of browser launch.</para>
            </param>
            <example>
            The following example uses the <see cref="o:Launch(BrowserLaunchSettings)">Launch</see> method.
            <code title="Example" description="" lang="C#">
            // Launch build-in Chromium with settings
            {
                var settings = (ZennoLab.CommandCenter.Classes.BuiltInBrowserLaunchSettings)
                       ZennoLab.CommandCenter.Classes.BrowserLaunchSettingsFactory.Create(
                           ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType.Chromium);
                settings.BrowserArgs = "--your-arg1 --your-arg2=value";
                settings.CachePath = Path.Combine(project.Directory, "TestProfilePath");
                settings.ConvertProfileFolder = true;
                settings.UseProfile = true;
                
                instance.Launch(settings);
            }
            // Launch integrated browser
            {
                var settings = (ZennoLab.CommandCenter.Classes.IntegratedBrowserLaunchSettings)
                        ZennoLab.CommandCenter.Classes.BrowserLaunchSettingsFactory.Create(
                            ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType.ChromiumFromZB);
                settings.IntegrationProfileId = new ZennoLab.CommandCenter.Classes.IntegrationProfileId()
                {
                   ProfileId = project.Variables["id"].Value
                };
                
                // Override proxy for profile
                settings.ProxyOptions = new ZennoLab.CommandCenter.Classes.IntegrationProxyOptions()
                {
                    ProxyOverride = project.Variables["proxy"].Value,
                    ProxyUsageKind = ZennoLab.InterfacesLibrary.Enums.Integration.IntegrationProxyUsageKind.OverrideProxyString
                };
            
                instance.Launch(settings);
            }
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.Stop">
            <summary>Stops the instance. Works in ProjectMaker and ZennoPoster.</summary>
            <example>
            The following example uses the <see cref="o:Stop">Stop</see> method.
            <code title="Example" description="" lang="C#">
            instance.Stop();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SaveCookie(System.String)">
            <summary>Saves cookie.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to cookie.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.LoadCookie">LoadCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetCookie">SetCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetCookie">GetCookie Method</seealso>
            <example>
            The following example uses the <see cref="o:SaveCookie">SaveCookie</see> method.
            <code title="Example" description="" lang="C#">
            // save cookie
            instance.SaveCookie("path");</code><code title="Example2" description="" lang="PHP">
            // save cookie
            $instance-&gt;SaveCookie("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SaveCookie">
            <summary>Saves cookie.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The cookies data.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.LoadCookie">LoadCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetCookie">SetCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetCookie">GetCookie Method</seealso>
            <example>
            The following example uses the <see cref="o:SaveCookie">SaveCookie</see> method.
            <code title="Example" description="" lang="C#">
            // get byte array of cookie
            byte[] cookieBytes = instance.SaveCookie();
            // convert byte array to string and return result
            return System.Text.Encoding.UTF8.GetString(cookieBytes);</code><code title="Example2" description="" lang="PHP">
            // get byte array of cookie
            cookieBytes = instance.SaveCookie();
            // convert byte array to string and return result
            return System.Text.Encoding.UTF8.GetString(cookieBytes);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadCookie(System.String)">
            <summary>Loads cookie.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to cookie.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SaveCookie">SaveCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetCookie">SetCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetCookie">GetCookie Method</seealso>
            <example>
            The following example uses the <see cref="o:LoadCookie">LoadCookie</see> method.
            <code title="Example" description="" lang="C#">
            // load cookie
            instance.LoadCookie("path");</code><code title="Example2" description="" lang="PHP">
            // load cookie
            $instance-&gt;LoadCookie("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadCookie(System.Byte[])">
            <summary>Loads cookie.</summary>
            <param name="cookie">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The cookies data.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SaveCookie">SaveCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetCookie">SetCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetCookie">GetCookie Method</seealso>
            <example>
            The following example uses the <see cref="o:LoadCookie">LoadCookie</see> method.
            <code title="Example" description="" lang="C#">
            // format cookie string
            string cookie = @".samy.pl	TRUE	/	FALSE	05/18/2033 06:33:20	__utmc	27102015	FALSE	TRUE
            samy.pl	FALSE	/evercookie/	FALSE	05/18/2033 06:33:20	evercookie_png	398	FALSE	TRUE";
            // convert cookie string to byte array
            byte[] cookieBytes = System.Text.Encoding.UTF8.GetBytes(cookie);
            // load cookie
            instance.LoadCookie(cookieBytes);</code><code title="Example2" description="" lang="PHP">
            // format cookie string
            $cookie = @".samy.pl	TRUE	/	FALSE	05/18/2033 06:33:20	__utmc	27102015	FALSE	TRUE
            samy.pl	FALSE	/evercookie/	FALSE	05/18/2033 06:33:20	evercookie_png	398	FALSE	TRUE";
            // convert cookie string to byte array
            $cookieBytes = System\Text\Encoding\UTF8::GetBytes($cookie);
            // load cookie
            $instance-&gt;LoadCookie($cookieBytes);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetCookie(System.String)">
            <summary>Sets cookie.</summary>
            <param name="cookie">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The cookies data in format "Host\tDomainFlag\tPath\tSecureFlag\tExpiry\tName\tValue\tHttpOnlyFlag\tSessionFlag\r\n ..." for Firefox
            	and "Host\tDomainFlag\tPath\tSecureFlag\tExpiry\tName\tValue\tHttpOnlyFlag\tSessionFlag\tSameSite\tPriority\r\n ..." for Chrome.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.LoadCookie">LoadCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SaveCookie">SaveCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetCookie">GetCookie Method</seealso>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.SetCookie(System.String)">SetCookie</see> method.
            <code title="Example" description="" lang="C#">
            // format cookie string
            string cookie = @".samy.pl	TRUE	/	FALSE	05/18/2033 06:33:20	__utmc	27102015	FALSE	TRUE
            samy.pl	FALSE	/evercookie/	FALSE	05/18/2033 06:33:20	evercookie_png	398	FALSE	TRUE";
            // load cookie
            instance.SetCookie(cookie);</code><code title="Example2" description="" lang="PHP">
            // format cookie string
            $cookie = @".samy.pl	TRUE	/	FALSE	05/18/2033 06:33:20	__utmc	27102015	FALSE	TRUE
            samy.pl	FALSE	/evercookie/	FALSE	05/18/2033 06:33:20	evercookie_png	398	FALSE	TRUE";
            // load cookie
            $instance-&gt;SetCookie($cookie);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetCookie(System.String,System.Boolean)">
            <summary>Gets cookie.</summary>
            <param name="domain">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The domain of cookie. The default value is empty string.</para>
            </param>
            <param name="isCookieFormat">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true, if need format of cookie "name1=value1; name2=value2; ...", otherwise false. The default value is false. 
                The default format is "Host\tDomainFlag\tPath\tSecureFlag\tExpiry\tName\tValue\tHttpOnlyFlag\tSessionFlag\r\n ..." for Firefox
            	and "Host\tDomainFlag\tPath\tSecureFlag\tExpiry\tName\tValue\tHttpOnlyFlag\tSessionFlag\tSameSite\tPriority\r\n ..." for Chrome.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The cookies in the string format.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.LoadCookie">LoadCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SaveCookie">SaveCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetCookie">SetCookie Method</seealso>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.GetCookie(System.String,System.Boolean)">GetCookie</see> method.
            <code title="Example" description="" lang="C#">
            instance.ActiveTab.Navigate("http://google.com/");
            instance.ActiveTab.WaitDownloading();
            // get cookie by domain
            return instance.GetCookie("google.com", true);</code><code title="Example2" description="" lang="PHP">
            $instance-&gt;ActiveTab-&gt;Navigate("http://google.com/");
            $instance-&gt;ActiveTab-&gt;WaitDownloading();
            // get cookie by domain
            return $instance-&gt;GetCookie("google.com", true);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.DownloadsPath">
            <summary>Gets or sets the path for downloads.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path for downloads.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetFilesForUpload(System.String)">
            <summary>Sets the files for upload.</summary>
            <param name="files">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The paths of files for upload </para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.EmulationLevel">
            <summary>Gets or sets the current emulation level.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The current emulation level. It's can be "None", "Middle", "Full" or "SuperEmulation".</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.FindElementByIntelliSearch(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>Searches for an HTML element using <strong>IntelliSearch</strong> technology, and returns the first or the most appropriate occurrence.</summary>
            <param name="form">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The form for searching. It's can be name on one of supported languages or id from current <strong>IntelliSearch</strong> base.</para>
            </param>
            <param name="elementClass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The class of element for searching. It's can be name on one of supported languages or id from current <strong>IntelliSearch</strong> base.</para>
            </param>
            <param name="isLink">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if are searching html link; otherwise false. In case then isLink is true, parameter "form" can be empty. It's not error if "form" not empty,
            however this parameter is not used.</para>
            </param>
            <param name="inBlocked">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if allowed to search among the locked html elements; otherwise false.</para>
            </param>
            <remarks>
            	<para>The parameters <strong>form</strong> and <strong>elementClass</strong> can be name on one of supported languages or id from current
            <strong>IntelliSearch</strong> base. <strong>IntelliSearch</strong> not depend not on the language or the version of the program.
            <strong>IntelliSearch</strong> is a multi-language system. However, depends on the current versions of the standard base and additional base (user base).
            Currently supports two languages: <strong>English</strong> and <strong>Russian</strong>. Do not forget that before using <strong>IntelliSearch</strong> must
            choose one of the standard base. Also the name of a class of elements and forms may vary in different versions of the base. The case of strings does not
            matter.</para>
            	<para>The parameter <strong>isBlocked</strong> should use if need find html element which was used by <strong>IntelliSearch</strong>. After using of the element,
            <strong>IntelliSearch</strong> marks html element as a blocked and ignores it in followings searching. If need find element among all or among the blocked then
            <strong>isBlocked</strong> should be true; otherwise false.</para>
            </remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see></para>
            	<para>The element found by the search.</para>
            </returns>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.FindElementByIntelliSearch(System.String,System.String,System.Boolean,System.Boolean)">FindElementByIntelliSearch</see> method. At first search the link with class "Simple registration" and
            click on this element, next field with class "Password" on the form with class "Registration" and sets value "password". Finally again field with class
            "Password" on the form with class "Registration" and sets value "password" and gets value of this field.
            <code title="Example" description="" lang="C#">
            // clear cookie
            instance.ClearCookie();
             
            // navigate to lessons.zennolab.com
            instance.ActiveTab.Navigate("lessons.zennolab.com", "");
             
            // waiting for downloading
            instance.ActiveTab.WaitDownloading();
             
            // find link by IntelliSearch
            HtmlElement he = instance.FindElementByIntelliSearch("", "Simple registration", true, false);
             
            // if html element found
            if (!he.IsVoid) 
            {
                // click on link
                he.RiseEvent("click", "Full");
            }
             
            // find password field
            he = instance.FindElementByIntelliSearch("Registration", "Password", false, false);
             
            // if html element found
            if (!he.IsVoid)
            {
                // set value
                he.SetValue("password", "Full", false);
            }
             
            // find password field again in blocked
            he = instance.FindElementByIntelliSearch("Registration", "Password", false, true);
             
            // if html element found
            if (!he.IsVoid)
            {
                // get value
                return he.GetValue(false);
            }</code><code title="Example2" description="" lang="PHP">
            // clear cookie
            $instance-&gt;ClearCookie();
             
            // navigate to lessons.zennolab.com
            $instance-&gt;ActiveTab-&gt;Navigate("lessons.zennolab.com", "");
             
            // waiting for downloading
            $instance-&gt;ActiveTab-&gt;WaitDownloading();
             
            // find link by IntelliSearch
            $he = $instance-&gt;FindElementByIntelliSearch("", "Simple registration", true, false);
             
            // if html element found
            if (!$he-&gt;IsVoid) 
            {
                // click on link
                $he-&gt;RiseEvent("click", "Full");
            }
             
            // find password field
            $he = $instance-&gt;FindElementByIntelliSearch("Registration", "Password", false, false);
             
            // if html element found
            if (!$he-&gt;IsVoid)
            {
                // set value
                $he-&gt;SetValue("password", "Full", false);
            }
             
            // find password field again in blocked
            $he = $instance-&gt;FindElementByIntelliSearch("Registration", "Password", false, true);
             
            // if html element found
            if (!$he-&gt;IsVoid)
            {
                // get value
                return $he-&gt;GetValue(false);
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SendText(System.String,System.Int32)">
            <summary>Emulates the typing.</summary>
            <param name="text">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The text for typing.</para>
            </param>
            <param name="latency">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The latency between the input characters of text.</para>
            </param>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.SendText(System.String,System.Int32)">SendText</see> method.
            <code title="Example" description="" lang="C#">
            // clear cookie
            instance.ClearCookie();
             
            // navigate to lessons.zennolab.com
            instance.ActiveTab.Navigate("lessons.zennolab.com", String.Empty);
             
            // wait downloading
            if (instance.ActiveTab.IsBusy) instance.ActiveTab.WaitDownloading();
             
            // try find textarea
            HtmlElement he = instance.ActiveTab.MainDocument.Body.FindChildByTag("textarea", 0);
             
            // if html element is not empty
            if (!he.IsVoid &amp;&amp; !he.IsNull)
            {
                // focus on this element
                he.Focus();
                // send text
                instance.SendText("It's just simple text for typing. Look at the textarea element and you can see this text.", 200);
            }</code><code title="Example2" description="" lang="PHP">
            // clear cookie
            $instance-&gt;ClearCookie();
             
            // navigate to lessons.zennolab.com
            $instance-&gt;ActiveTab-&gt;Navigate("lessons.zennolab.com", "");
             
            // wait downloading
            if ($instance-&gt;ActiveTab-&gt;IsBusy) $instance-&gt;ActiveTab-&gt;WaitDownloading();
             
            // try find textarea
            $he = $instance-&gt;ActiveTab-&gt;MainDocument-&gt;Body-&gt;FindChildByTag("textarea", 0);
             
            // if html element is not empty
            if (!$he-&gt;IsVoid &amp;&amp; !$he-&gt;IsNull)
            {
                // focus on this element
                $he-&gt;Focus();
                // send text
                $instance-&gt;SendText("It's just simple text for typing. Look at the textarea element and you can see this text.", 200);
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.Click(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>Emulates a click on specified area.</summary>
            <param name="xMin">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>The minimum x coordinate.</param>
            <param name="xMax">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>The maximum x coordinate.</param>
            <param name="yMin">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>The minimum y coordinate.</param>
            <param name="yMax">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>The maximum y coordinate.</param>
            <param name="clickType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The mouse button type. It can have a value "Left", "Right", "DoubleClick".</para>
            </param>
            <param name="clickDistributionType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The click distribution type. It can have a value "Normal", "Random".</para>
            </param>
            <remarks>The emulation of click made only on the active tab.</remarks>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.Click(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">Click</see> method for emulation of click in specified area.
            <code title="Example" description="" lang="C#">
            // navigate to lessons.zennolab.com
            instance.ActiveTab.Navigate("lessons.zennolab.com", "");
             
            // waiting for page loading
            instance.ActiveTab.WaitDownloading();
             
            // emulation of click
            instance.Click(100, 100, 200, 200, "Left", "Normal");</code><code title="Example2" description="" lang="PHP">
            // navigate to lessons.zennolab.com
            $instance-&gt;ActiveTab-&gt;Navigate("lessons.zennolab.com", "");
             
            // waiting for page loading
            $instance-&gt;ActiveTab-&gt;WaitDownloading();
             
            // emulation of click
            $instance-&gt;Click(100, 100, 200, 200, "Left", "Normal");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.ScreenResolution">
            <summary>Gets the screen resolution.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.drawing.size.aspx">System.Drawing.Size</see></para>
            	<para>The screen resolution.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.IgnoreAjaxRequests">
            <summary>Gets or set the information about ignoring ajax requests.</summary>
            <remarks>
            	<para></para>
            </remarks>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if all ajax requests must be ignored; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IgnoreAdditionalRequests">IgnoreAdditionalRequests Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IgnoreFlashRequests">IgnoreFlashRequests Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IgnoreAjaxRequests">IgnoreFrameRequests Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.IgnoreFlashRequests">
            <summary>Gets or set the information about ignoring flash requests.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if all flash requests must be ignored; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IgnoreAdditionalRequests">IgnoreAdditionalRequests Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IgnoreAjaxRequests">IgnoreAjaxRequests Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IgnoreAjaxRequests">IgnoreFrameRequests Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.IgnoreAdditionalRequests">
            <summary>Gets or set the information about ignoring additional requests.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if all additional requests must be ignored; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IgnoreAjaxRequests">IgnoreAjaxRequests Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IgnoreFlashRequests">IgnoreFlashRequests Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IgnoreAjaxRequests">IgnoreFrameRequests Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.IgnoreFrameRequests">
            <summary>Gets or set the information about ignoring frame requests.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if all frame requests must be ignored; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IgnoreAjaxRequests">IgnoreAjaxRequests Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IgnoreAjaxRequests">IgnoreAdditionalRequests Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.IgnoreFlashRequests">IgnoreFlashRequests Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.SymbolEmulationDelay">
            <summary>Gets or sets the symbol emulation delay.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The symbol emulation delay.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.FieldEmulationDelay">
            <summary>Gets or sets the field emulation delay.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The field emulation delay.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.IntelliSearchSetBase(System.Int32,System.String,System.String)">
            <summary>Sets base of IntelliSearch.</summary>
            <param name="revision">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The revision of base.</para>
            </param>
            <param name="path">Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></param>
            <param name="password">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.IntelliSearchSetAdditionalBase(System.String)">IntelliSearchSetAdditionalBase Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.IntelliSearchSetAdditionalBase(System.String)">
            <summary>Sets additional base of IntelliSearch.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to the additional base.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.IntelliSearchSetBase(System.Int32,System.String,System.String)">IntelliSearchSetBase Method</seealso>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.IntelliSearchSetAdditionalBase(System.String)">IntelliSearchSetAdditionalBase</see> method.
            <code title="Example" description="" lang="C#">
            // set additional base of IntelliSearch
            instance.IntelliSearchSetAdditionalBase("path");</code><code title="Example2" description="" lang="PHP">
            // set additional base of IntelliSearch
            $instance-&gt;IntelliSearchSetAdditionalBase("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetWindowPreference(System.String,System.Int32)">
            <summary>Sets the window settings.</summary>
            <param name="preference">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The setting of window.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The value of setting.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetWindowPreference(ZennoLab.InterfacesLibrary.Enums.Browser.WindowPreference,System.Int32)">
            <summary>Sets the window settings.</summary>
            <param name="preference">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.WindowPreference">ZennoLab.InterfacesLibrary.Enums.Browser.WindowPreference</see></para>
            	<para>The setting of window.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The value of setting.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetScreenPreference(System.String,System.Int32)">
            <summary>Sets the screen settings.</summary>
            <param name="preference">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The setting of screen.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The value of setting.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetScreenPreference(ZennoLab.InterfacesLibrary.Enums.Browser.ScreenPreference,System.Int32)">
            <summary>Sets the screen settings.</summary>
            <param name="preference">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.ScreenPreference">ZennoLab.InterfacesLibrary.Enums.Browser.ScreenPreference</see></para>
            	<para>The setting of screen.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The value of setting.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.ScreenOrientation">
            <summary>Gets or set the screen orientation.</summary>
            <value>
            	<para>Type: <see cref="P:ZennoLab.CommandCenter.Instance.ScreenOrientation">ZennoLab.InterfacesLibrary.Enums.Browser.ScreenOrientation</see></para>
            	<para>The true if url might to be changed; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.AudioPreferences">
            <summary>Gets the AudioPreferences object that allows you to edit audio settings.</summary>
            <value>
            	<para>Type: <see cref="P:ZennoLab.CommandCenter.Instance.AudioPreferences">ZennoLab.CommandCenter.AudioPreferences</see></para>
            	<para>The AudioPreferences object.</para>
            </value>
            <example>
            The following example uses the <see cref="P:ZennoLab.CommandCenter.Instance.AudioPreferences">AudioPreferences</see> property.
            <code title="Example" description="" lang="C#">
            // set Chrome useragent
            instance.SetHeader(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField.UserAgent, "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36");
            // set audio context params
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.AudioContextState, "running"); // string value, can take values "suspended", "running" or "closed"
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.BaseLatency, "0.02"); // double value, visible if Chrome useragent is set
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.MaxChannelCount, "10"); // int value
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.SampleRate, "96000"); // int value
            instance.AudioPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.AudioPreference.SmoothingTimeConstant, "0.65"); // double value, can take values from 0 to 1
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.WebGLPreferences">
            <summary>Gets the WebGLPreferences object that allows you to edit webgl settings.</summary>
            <value>
            	<para>Type: <see cref="P:ZennoLab.CommandCenter.Instance.AudioPreferences">ZennoLab.CommandCenter.AudioPreferences</see></para>
            	<para>The AudioPreferences object.</para>
            </value>
            <example>
            The following example uses the <see cref="P:ZennoLab.CommandCenter.Instance.WebGLPreferences">WebGLPreferences</see> property.
            <code title="Example" description="" lang="C#">
            // set Chrome useragent
            instance.SetHeader(ZennoLab.InterfacesLibrary.Enums.Browser.NavigatorField.UserAgent, "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36");
            // set webgl context params
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.Renderer, "WebKit WebGL");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.Vendor, "WebKit");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.Version, "WebGL 1.0 (OpenGL ES 2.0 Chromium)");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.ShadingLanguageVersion, "WebGL GLSL ES 1.0 (OpenGL ES GLSL ES 1.0 Chromium)");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.UnmaskedRenderer, "Google Inc.");
            instance.WebGLPreferences.Set(ZennoLab.InterfacesLibrary.Enums.Browser.WebGLPreference.UnmaskedVendor, "ANGLE (NVIDIA GeForce GT 630 Direct3D11 vs_5_0 ps_5_0)");
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetWindowSize(System.Int32,System.Int32)">
            <summary>Sets the size of window.</summary>
            <param name="width">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The width of window.</para>
            </param>
            <param name="height">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The height of window.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UrlManipulation">
            <summary>Gets or set the information about url manipulation.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if url might to be changed; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.WaitForUserAction(System.Int32)">
            <summary>Show instance window and wait for user action.</summary>
            <param name="timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The timeout of waiting in seconds.</para>
            </param>
            <example>
            The following example uses the <see cref="o:WaitForUserAction">WaitForUserAction</see> method.
            <code title="Example" description="" lang="C#">
            // wait for user action 5 minutes
            instance.WaitForUserAction(300);</code><code title="Example2" description="" lang="PHP">
            // wait for user action 5 minutes
            $instance-&gt;WaitForUserAction(300);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.WaitForUserAction(System.Int32,System.String)">
            <summary>Show instance window and wait for user action.</summary>
            <param name="timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The timeout of waiting in seconds.</para>
            </param>
            <param name="comment">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The comment shown when the browser appears.</para>
            </param>
            <example>
            The following example uses the <see cref="o:WaitForUserAction">WaitForUserAction</see> method.
            <code title="Example" description="" lang="C#">
            // wait for user action 5 minutes
            instance.WaitForUserAction(300);</code><code title="Example2" description="" lang="PHP">
            // wait for user action 5 minutes
            $instance-&gt;WaitForUserAction(300);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.IsWaitingUserAction">
            <summary>Gets the instance is waiting user action or not.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if the instance is waiting user action, otherwise false.</para>
            </value>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.LastDownloadedFile">
            <summary>Gets the path of the last downloaded file.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path of last the last downloaded file.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.AddToTitle(System.String)">
            <summary>Add text to title of instance.</summary>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The text to add.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetContentPolicy">
            <summary>Returns the content policy mode. It can have a value "DirectLoad", "WhiteList", "BlockList".</summary>
            <returns>
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>The content policy mode for instance.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetContentPolicyDomains">
            <summary>Returns collection of domains texts for "WhiteList" or "BlockList" policy.</summary>
            <returns>
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of domains.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetContentPolicyRegexs">
            <summary>Returns collection of regexs for "WhiteList" or "BlockList" policy.</summary>
            <returns>
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of regexs.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetContentPolicy(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>Sets the policy for browser content.</summary>
            <param name="policy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of policy. It can have a value "DirectLoad", "WhiteList", "BlockList".</para>
            </param>
            <param name="domains">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of domains for "WhiteList" or "BlockList" policy. Default value is null.</para>
            </param>
            <param name="regexs">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of regular expressions for "WhiteList" or "BlockList" policy. Default value is null.</para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.SetContentPolicy(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">SetContentPolicy</see> method.
            <code title="Example" description="" lang="C#">
            instance.SetContentPolicy("BlockList", new []{ "mc.yandex.ru" }, null);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UseGeoposition">
            <summary>Gets or sets a value that indicates whether to use geoposition are allowed.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use geoposition are allowed; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetGeoposition(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Gets the geoposition coordinates.</summary>
            <param name="latitude">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The position's latitude in decimal degrees.</para>
            </param>
            <param name="longitude">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The position's longitude in decimal degrees.</para>
            </param>
            <param name="accuracy">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The accuracy of the latitude and longitude, expressed in meters.</para>
            </param>
            <param name="altitude">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The position's altitude in metres, relative to sea level. The default value is 0.</para>
            </param>
            <param name="altitudeAccuracy">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The accuracy of the altitude expressed in meters. The default value is 0.</para>
            </param>
            <param name="heading">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The direction in which the device is traveling. This value, specified in degrees, 0 degrees represents true north, and the direction is determined clockwise (which means that east is 90 degrees and west is 270 degrees). The default value is 0.</para>
            </param>
            <param name="speed">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The  velocity of the device in meters per second. The default value is 0.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetGeoposition(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Sets the geoposition coordinates and enables it for websites.</summary>
            <param name="latitude">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The position's latitude in decimal degrees.</para>
            </param>
            <param name="longitude">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The position's longitude in decimal degrees.</para>
            </param>
            <param name="accuracy">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The accuracy of the latitude and longitude, expressed in meters.</para>
            </param>
            <param name="altitude">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The position's altitude in metres, relative to sea level. The default value is 0.</para>
            </param>
            <param name="altitudeAccuracy">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The accuracy of the altitude expressed in meters. The default value is 0.</para>
            </param>
            <param name="heading">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The direction in which the device is traveling. This value, specified in degrees, 0 degrees represents true north, and the direction is determined clockwise (which means that east is 90 degrees and west is 270 degrees). The default value is 0.</para>
            </param>
            <param name="speed">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The  velocity of the device in meters per second. The default value is 0.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.CanvasRenderMode">
            <summary>Gets or set the information about canvas render mode.</summary>
            <remarks>
            	<para></para>
            </remarks>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.CanvasMode">ZennoLab.InterfacesLibrary.Enums.Browser.CanvasMode</see></para>
            	<para>Canvas render mode.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Instance.CanvasRenderMode">CanvasRenderMode</see> property.
            <code title="Example" description="" lang="C#">
            instance.CanvasRenderMode = ZennoLab.InterfacesLibrary.Enums.Browser.CanvasMode.Emulate;
            instance.CanvasRenderSeed = "5caf24ded0e11f4a29a3ba236152c4d1";</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.CanvasMissMode">
            <summary>Gets or set the information about canvas render mode after SuperEmulation fails</summary>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Instance.CanvasMissMode">CanvasMissMode</see> property.
            <code title="Example" description="" lang="C#">
            instance.CanvasRenderMode = ZennoLab.InterfacesLibrary.Enums.Browser.CanvasMode.SuperEmulation;
            instance.CanvasMissMode = ZennoLab.InterfacesLibrary.Enums.Browser.CanvasMissModeEnum.Emulate;
            instance.CanvasRenderSeed = "5caf24ded0e11f4a29a3ba236152c4d1";</code></example>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.CanvasRenderSeed">
            <summary>Gets or set the seed string for generating fake canvas. Canvas emulation works only if CanvasRenderMode sets to Emulate.</summary>
            <remarks>
            	<para></para>
            </remarks>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Canvas render seed.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Instance.CanvasRenderSeed">CanvasRenderSeed</see> property.
            <code title="Example" description="" lang="C#">
            instance.CanvasRenderMode = ZennoLab.InterfacesLibrary.Enums.Browser.CanvasMode.Emulate;
            instance.CanvasRenderSeed = "5caf24ded0e11f4a29a3ba236152c4d1";</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetCanvasEmulationSettings(ZennoLab.CommandCenter.CanvasEmulationSettings)">
            <summary>Set settings for SuperEmulation canvas render mode.</summary>
            <param name="settings">
            	<para>Type: <see>ZennoLab.CommandCenter.CanvasEmulationSettings</see> </para>
            	<para></para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.SetContentPolicy(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">SetContentPolicy</see> method.
            <code title="Example" description="" lang="C#">
            instance.CanvasRenderMode = ZennoLab.InterfacesLibrary.Enums.Browser.CanvasMode.SuperEmulation;
            instance.CanvasRenderSeed = "5caf24ded0e11f4a29a3ba236152c4d1";
            instance.SetCanvasEmulationSettings(new CanvasEmulationSettings() { DropPotentialRandomlyAlgorithms = true });</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.TimezoneWorkMode">
            <summary>Gets or set the information about time zone working mode.</summary>
            <remarks>
            	<para></para>
            </remarks>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.TimezoneMode">ZennoLab.InterfacesLibrary.Enums.Browser.TimezoneMode</see></para>
            	<para>Time zone working mode.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Instance.TimezoneWorkMode">TimezoneWorkMode</see> property.
            <code title="Example" description="" lang="C#">
            instance.TimezoneWorkMode = ZennoLab.InterfacesLibrary.Enums.Browser.TimezoneMode.Emulate;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetTimezone(System.Int32@,System.Int32@)">
            <summary>Gets the system timezone.</summary>
            <param name="hours">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The number of hours in the difference between the current time zone and UTC.</para>
            </param>
            <param name="minutes">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The number of minutes in the difference between the current time zone and UTC.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetIanaTimezone">
            <summary>Gets the system timezone.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of IANA region. If IANA region doesn't set, will be returned string.Empty</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetTimezone(System.Int32,System.Int32,ZennoLab.InterfacesLibrary.Enums.Browser.TimezoneMode)">
            <summary>Sets the system timezone.</summary>
            <param name="hours">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The number of hours in the difference between the current time zone and UTC. Possible values from -12 to 12.</para>
            </param>
            <param name="minutes">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The number of minutes in the difference between the current time zone and UTC. Possible values from 0 to 60. The default value is 0. </para>
            </param>
            <param name="mode">
                <para>Type: <see cref="P:ZennoLab.CommandCenter.Instance.TimezoneWorkMode">ZennoLab.InterfacesLibrary.Enums.Browser.TimezoneMode</see></para>
            	<para>Time zone working mode.</para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.SetTimezone(System.Int32,System.Int32,ZennoLab.InterfacesLibrary.Enums.Browser.TimezoneMode)">SetTimezone</see> method.
            <code title="Example" description="" lang="C#">
            instance.SetTimezone(-4, 0); // UTC -04:00</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetIanaTimezone(System.String,ZennoLab.InterfacesLibrary.Enums.Browser.TimezoneMode)">
            <summary>Sets the system timezone.</summary>
            <param name="ianaZone">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of IANA region.</para>
            </param>
            <param name="mode">
                <para>Type: <see cref="P:ZennoLab.CommandCenter.Instance.TimezoneWorkMode">ZennoLab.InterfacesLibrary.Enums.Browser.TimezoneMode</see></para>
            	<para>Time zone working mode.</para>
            </param>
            <remarks>
            <para><b>The list of available IANA time zones:</b></para>
            <para>Africa/Abidjan</para>
            <para>Africa/Accra</para>
            <para>Africa/Addis_Ababa</para>
            <para>Africa/Algiers</para>
            <para>Africa/Asmara</para>
            <para>Africa/Bamako</para>
            <para>Africa/Bangui</para>
            <para>Africa/Banjul</para>
            <para>Africa/Bissau</para>
            <para>Africa/Blantyre</para>
            <para>Africa/Brazzaville</para>
            <para>Africa/Bujumbura</para>
            <para>Africa/Cairo</para>
            <para>Africa/Casablanca</para>
            <para>Africa/Ceuta</para>
            <para>Africa/Conakry</para>
            <para>Africa/Dakar</para>
            <para>Africa/Dar_es_Salaam</para>
            <para>Africa/Djibouti</para>
            <para>Africa/Douala</para>
            <para>Africa/El_Aaiun</para>
            <para>Africa/Freetown</para>
            <para>Africa/Gaborone</para>
            <para>Africa/Harare</para>
            <para>Africa/Johannesburg</para>
            <para>Africa/Juba</para>
            <para>Africa/Kampala</para>
            <para>Africa/Khartoum</para>
            <para>Africa/Kigali</para>
            <para>Africa/Kinshasa</para>
            <para>Africa/Lagos</para>
            <para>Africa/Libreville</para>
            <para>Africa/Lome</para>
            <para>Africa/Luanda</para>
            <para>Africa/Lubumbashi</para>
            <para>Africa/Lusaka</para>
            <para>Africa/Malabo</para>
            <para>Africa/Maputo</para>
            <para>Africa/Maseru</para>
            <para>Africa/Mbabane</para>
            <para>Africa/Mogadishu</para>
            <para>Africa/Monrovia</para>
            <para>Africa/Nairobi</para>
            <para>Africa/Ndjamena</para>
            <para>Africa/Niamey</para>
            <para>Africa/Nouakchott</para>
            <para>Africa/Ouagadougou</para>
            <para>Africa/Porto-Novo</para>
            <para>Africa/Sao_Tome</para>
            <para>Africa/Tripoli</para>
            <para>Africa/Tunis</para>
            <para>Africa/Windhoek</para>
            <para>America/Adak</para>
            <para>America/Anchorage</para>
            <para>America/Anguilla</para>
            <para>America/Antigua</para>
            <para>America/Araguaina</para>
            <para>America/Argentina/Buenos_Aires</para>
            <para>America/Argentina/Catamarca</para>
            <para>America/Argentina/Cordoba</para>
            <para>America/Argentina/Jujuy</para>
            <para>America/Argentina/La_Rioja</para>
            <para>America/Argentina/Mendoza</para>
            <para>America/Argentina/Rio_Gallegos</para>
            <para>America/Argentina/Salta</para>
            <para>America/Argentina/San_Juan</para>
            <para>America/Argentina/San_Luis</para>
            <para>America/Argentina/Tucuman</para>
            <para>America/Argentina/Ushuaia</para>
            <para>America/Aruba</para>
            <para>America/Asuncion</para>
            <para>America/Atikokan</para>
            <para>America/Bahia</para>
            <para>America/Bahia_Banderas</para>
            <para>America/Barbados</para>
            <para>America/Belem</para>
            <para>America/Belize</para>
            <para>America/Blanc-Sablon</para>
            <para>America/Boa_Vista</para>
            <para>America/Bogota</para>
            <para>America/Boise</para>
            <para>America/Cambridge_Bay</para>
            <para>America/Campo_Grande</para>
            <para>America/Cancun</para>
            <para>America/Caracas</para>
            <para>America/Cayenne</para>
            <para>America/Cayman</para>
            <para>America/Chicago</para>
            <para>America/Chihuahua</para>
            <para>America/Coral_Harbour</para>
            <para>America/Costa_Rica</para>
            <para>America/Creston</para>
            <para>America/Cuiaba</para>
            <para>America/Curacao</para>
            <para>America/Danmarkshavn</para>
            <para>America/Dawson</para>
            <para>America/Dawson_Creek</para>
            <para>America/Denver</para>
            <para>America/Detroit</para>
            <para>America/Dominica</para>
            <para>America/Edmonton</para>
            <para>America/Eirunepe</para>
            <para>America/El_Salvador</para>
            <para>America/Fort_Nelson</para>
            <para>America/Fortaleza</para>
            <para>America/Glace_Bay</para>
            <para>America/Godthab</para>
            <para>America/Goose_Bay</para>
            <para>America/Grand_Turk</para>
            <para>America/Grenada</para>
            <para>America/Guadeloupe</para>
            <para>America/Guatemala</para>
            <para>America/Guayaquil</para>
            <para>America/Guyana</para>
            <para>America/Halifax</para>
            <para>America/Havana</para>
            <para>America/Hermosillo</para>
            <para>America/Indiana/Indianapolis</para>
            <para>America/Indiana/Knox</para>
            <para>America/Indiana/Marengo</para>
            <para>America/Indiana/Petersburg</para>
            <para>America/Indiana/Tell_City</para>
            <para>America/Indiana/Vevay</para>
            <para>America/Indiana/Vincennes</para>
            <para>America/Indiana/Winamac</para>
            <para>America/Inuvik</para>
            <para>America/Iqaluit</para>
            <para>America/Jamaica</para>
            <para>America/Juneau</para>
            <para>America/Kentucky/Louisville</para>
            <para>America/Kentucky/Monticello</para>
            <para>America/Kralendijk</para>
            <para>America/La_Paz</para>
            <para>America/Lima</para>
            <para>America/Los_Angeles</para>
            <para>America/Lower_Princes</para>
            <para>America/Maceio</para>
            <para>America/Managua</para>
            <para>America/Manaus</para>
            <para>America/Marigot</para>
            <para>America/Martinique</para>
            <para>America/Matamoros</para>
            <para>America/Mazatlan</para>
            <para>America/Menominee</para>
            <para>America/Merida</para>
            <para>America/Metlakatla</para>
            <para>America/Mexico_City</para>
            <para>America/Miquelon</para>
            <para>America/Moncton</para>
            <para>America/Monterrey</para>
            <para>America/Montevideo</para>
            <para>America/Montreal</para>
            <para>America/Montserrat</para>
            <para>America/Nassau</para>
            <para>America/New_York</para>
            <para>America/Nipigon</para>
            <para>America/Nome</para>
            <para>America/Noronha</para>
            <para>America/North_Dakota/Beulah</para>
            <para>America/North_Dakota/Center</para>
            <para>America/North_Dakota/New_Salem</para>
            <para>America/Ojinaga</para>
            <para>America/Panama</para>
            <para>America/Pangnirtung</para>
            <para>America/Paramaribo</para>
            <para>America/Phoenix</para>
            <para>America/Port_of_Spain</para>
            <para>America/Port-au-Prince</para>
            <para>America/Porto_Velho</para>
            <para>America/Puerto_Rico</para>
            <para>America/Rainy_River</para>
            <para>America/Rankin_Inlet</para>
            <para>America/Recife</para>
            <para>America/Regina</para>
            <para>America/Resolute</para>
            <para>America/Rio_Branco</para>
            <para>America/Santarem</para>
            <para>America/Santiago</para>
            <para>America/Santo_Domingo</para>
            <para>America/Sao_Paulo</para>
            <para>America/Scoresbysund</para>
            <para>America/Sitka</para>
            <para>America/St_Barthelemy</para>
            <para>America/St_Johns</para>
            <para>America/St_Kitts</para>
            <para>America/St_Lucia</para>
            <para>America/St_Thomas</para>
            <para>America/St_Vincent</para>
            <para>America/Swift_Current</para>
            <para>America/Tegucigalpa</para>
            <para>America/Thule</para>
            <para>America/Thunder_Bay</para>
            <para>America/Tijuana</para>
            <para>America/Toronto</para>
            <para>America/Tortola</para>
            <para>America/Vancouver</para>
            <para>America/Whitehorse</para>
            <para>America/Winnipeg</para>
            <para>America/Yakutat</para>
            <para>America/Yellowknife</para>
            <para>Antarctica/Macquarie</para>
            <para>Arctic/Longyearbyen</para>
            <para>Asia/Aden</para>
            <para>Asia/Almaty</para>
            <para>Asia/Amman</para>
            <para>Asia/Anadyr</para>
            <para>Asia/Aqtau</para>
            <para>Asia/Aqtobe</para>
            <para>Asia/Ashgabat</para>
            <para>Asia/Atyrau</para>
            <para>Asia/Baghdad</para>
            <para>Asia/Bahrain</para>
            <para>Asia/Baku</para>
            <para>Asia/Bangkok</para>
            <para>Asia/Barnaul</para>
            <para>Asia/Beirut</para>
            <para>Asia/Bishkek</para>
            <para>Asia/Brunei</para>
            <para>Asia/Chita</para>
            <para>Asia/Choibalsan</para>
            <para>Asia/Chongqing</para>
            <para>Asia/Colombo</para>
            <para>Asia/Damascus</para>
            <para>Asia/Dhaka</para>
            <para>Asia/Dili</para>
            <para>Asia/Dubai</para>
            <para>Asia/Dushanbe</para>
            <para>Asia/Famagusta</para>
            <para>Asia/Gaza</para>
            <para>Asia/Harbin</para>
            <para>Asia/Hebron</para>
            <para>Asia/Ho_Chi_Minh</para>
            <para>Asia/Hong_Kong</para>
            <para>Asia/Hovd</para>
            <para>Asia/Irkutsk</para>
            <para>Asia/Jakarta</para>
            <para>Asia/Jayapura</para>
            <para>Asia/Jerusalem</para>
            <para>Asia/Kabul</para>
            <para>Asia/Kamchatka</para>
            <para>Asia/Karachi</para>
            <para>Asia/Kashgar</para>
            <para>Asia/Kathmandu</para>
            <para>Asia/Khandyga</para>
            <para>Asia/Kolkata</para>
            <para>Asia/Krasnoyarsk</para>
            <para>Asia/Kuala_Lumpur</para>
            <para>Asia/Kuching</para>
            <para>Asia/Kuwait</para>
            <para>Asia/Macau</para>
            <para>Asia/Magadan</para>
            <para>Asia/Makassar</para>
            <para>Asia/Manila</para>
            <para>Asia/Muscat</para>
            <para>Asia/Nicosia</para>
            <para>Asia/Novokuznetsk</para>
            <para>Asia/Novosibirsk</para>
            <para>Asia/Omsk</para>
            <para>Asia/Oral</para>
            <para>Asia/Phnom_Penh</para>
            <para>Asia/Pontianak</para>
            <para>Asia/Pyongyang</para>
            <para>Asia/Qatar</para>
            <para>Asia/Qyzylorda</para>
            <para>Asia/Rangoon</para>
            <para>Asia/Riyadh</para>
            <para>Asia/Sakhalin</para>
            <para>Asia/Samarkand</para>
            <para>Asia/Seoul</para>
            <para>Asia/Shanghai</para>
            <para>Asia/Singapore</para>
            <para>Asia/Srednekolymsk</para>
            <para>Asia/Taipei</para>
            <para>Asia/Tashkent</para>
            <para>Asia/Tbilisi</para>
            <para>Asia/Tehran</para>
            <para>Asia/Thimphu</para>
            <para>Asia/Tokyo</para>
            <para>Asia/Tomsk</para>
            <para>Asia/Ulaanbaatar</para>
            <para>Asia/Urumqi</para>
            <para>Asia/Ust-Nera</para>
            <para>Asia/Vientiane</para>
            <para>Asia/Vladivostok</para>
            <para>Asia/Yakutsk</para>
            <para>Asia/Yekaterinburg</para>
            <para>Asia/Yerevan</para>
            <para>Atlantic/Azores</para>
            <para>Atlantic/Bermuda</para>
            <para>Atlantic/Canary</para>
            <para>Atlantic/Cape_Verde</para>
            <para>Atlantic/Faroe</para>
            <para>Atlantic/Madeira</para>
            <para>Atlantic/Reykjavik</para>
            <para>Atlantic/South_Georgia</para>
            <para>Atlantic/St_Helena</para>
            <para>Atlantic/Stanley</para>
            <para>Australia/Adelaide</para>
            <para>Australia/Brisbane</para>
            <para>Australia/Broken_Hill</para>
            <para>Australia/Currie</para>
            <para>Australia/Darwin</para>
            <para>Australia/Eucla</para>
            <para>Australia/Hobart</para>
            <para>Australia/Lindeman</para>
            <para>Australia/Lord_Howe</para>
            <para>Australia/Melbourne</para>
            <para>Australia/Perth</para>
            <para>Australia/Sydney</para>
            <para>Europe/Amsterdam</para>
            <para>Europe/Andorra</para>
            <para>Europe/Astrakhan</para>
            <para>Europe/Athens</para>
            <para>Europe/Belgrade</para>
            <para>Europe/Berlin</para>
            <para>Europe/Bratislava</para>
            <para>Europe/Brussels</para>
            <para>Europe/Bucharest</para>
            <para>Europe/Budapest</para>
            <para>Europe/Busingen</para>
            <para>Europe/Chisinau</para>
            <para>Europe/Copenhagen</para>
            <para>Europe/Dublin</para>
            <para>Europe/Gibraltar</para>
            <para>Europe/Guernsey</para>
            <para>Europe/Helsinki</para>
            <para>Europe/Isle_of_Man</para>
            <para>Europe/Istanbul</para>
            <para>Europe/Jersey</para>
            <para>Europe/Kaliningrad</para>
            <para>Europe/Kiev</para>
            <para>Europe/Kirov</para>
            <para>Europe/Lisbon</para>
            <para>Europe/Ljubljana</para>
            <para>Europe/London</para>
            <para>Europe/Luxembourg</para>
            <para>Europe/Madrid</para>
            <para>Europe/Malta</para>
            <para>Europe/Mariehamn</para>
            <para>Europe/Minsk</para>
            <para>Europe/Monaco</para>
            <para>Europe/Moscow</para>
            <para>Europe/Oslo</para>
            <para>Europe/Paris</para>
            <para>Europe/Podgorica</para>
            <para>Europe/Prague</para>
            <para>Europe/Riga</para>
            <para>Europe/Rome</para>
            <para>Europe/Samara</para>
            <para>Europe/San_Marino</para>
            <para>Europe/Sarajevo</para>
            <para>Europe/Saratov</para>
            <para>Europe/Simferopol</para>
            <para>Europe/Skopje</para>
            <para>Europe/Sofia</para>
            <para>Europe/Stockholm</para>
            <para>Europe/Tallinn</para>
            <para>Europe/Tirane</para>
            <para>Europe/Ulyanovsk</para>
            <para>Europe/Uzhgorod</para>
            <para>Europe/Vaduz</para>
            <para>Europe/Vatican</para>
            <para>Europe/Vienna</para>
            <para>Europe/Vilnius</para>
            <para>Europe/Volgograd</para>
            <para>Europe/Warsaw</para>
            <para>Europe/Zagreb</para>
            <para>Europe/Zaporozhye</para>
            <para>Europe/Zurich</para>
            <para>Indian/Antananarivo</para>
            <para>Indian/Chagos</para>
            <para>Indian/Christmas</para>
            <para>Indian/Cocos</para>
            <para>Indian/Comoro</para>
            <para>Indian/Kerguelen</para>
            <para>Indian/Mahe</para>
            <para>Indian/Maldives</para>
            <para>Indian/Mauritius</para>
            <para>Indian/Mayotte</para>
            <para>Indian/Reunion</para>
            <para>Pacific/Apia</para>
            <para>Pacific/Auckland</para>
            <para>Pacific/Bougainville</para>
            <para>Pacific/Chatham</para>
            <para>Pacific/Chuuk</para>
            <para>Pacific/Easter</para>
            <para>Pacific/Efate</para>
            <para>Pacific/Enderbury</para>
            <para>Pacific/Fakaofo</para>
            <para>Pacific/Fiji</para>
            <para>Pacific/Funafuti</para>
            <para>Pacific/Galapagos</para>
            <para>Pacific/Gambier</para>
            <para>Pacific/Guadalcanal</para>
            <para>Pacific/Guam</para>
            <para>Pacific/Honolulu</para>
            <para>Pacific/Johnston</para>
            <para>Pacific/Kiritimati</para>
            <para>Pacific/Kosrae</para>
            <para>Pacific/Kwajalein</para>
            <para>Pacific/Majuro</para>
            <para>Pacific/Marquesas</para>
            <para>Pacific/Midway</para>
            <para>Pacific/Nauru</para>
            <para>Pacific/Niue</para>
            <para>Pacific/Norfolk</para>
            <para>Pacific/Noumea</para>
            <para>Pacific/Pago_Pago</para>
            <para>Pacific/Palau</para>
            <para>Pacific/Pitcairn</para>
            <para>Pacific/Pohnpei</para>
            <para>Pacific/Port_Moresby</para>
            <para>Pacific/Rarotonga</para>
            <para>Pacific/Saipan</para>
            <para>Pacific/Tahiti</para>
            <para>Pacific/Tarawa</para>
            <para>Pacific/Tongatapu</para>
            <para>Pacific/Wake</para>
            <para>Pacific/Wallis</para>
            <para>Pacific/Yap</para>
            </remarks>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.SetIanaTimezone(System.String,ZennoLab.InterfacesLibrary.Enums.Browser.TimezoneMode)">SetIanaTimezone</see> method.
            <code title="Example" description="" lang="C#">
            instance.SetIanaTimezone("America/Los_Angeles");
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.AudioContextMode">
            <summary>Gets or set the information about audio context work mode.</summary>
            <remarks>
            	<para></para>
            </remarks>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.AudioMode">ZennoLab.InterfacesLibrary.Enums.Browser.AudioMode</see></para>
            	<para>Audio context work mode.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Instance.AudioContextMode">AudioContextMode</see> property.
            <code title="Example" description="" lang="C#">
            instance.AudioContextMode = ZennoLab.InterfacesLibrary.Enums.Browser.AudioMode.Emulate;
            instance.AudioContextSeed = "0.0004817737;0.0008047798";</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.AudioContextSeed">
            <summary>Gets or set the seed string for generating fake audio context. AudioContext emulation works only if AudioContextMode sets to Emulate</summary>
            <remarks>
            	<para></para>
            </remarks>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Audio context seed.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Instance.AudioContextSeed">AudioContextSeed</see> property.
            <code title="Example" description="" lang="C#">
            instance.AudioContextMode = ZennoLab.InterfacesLibrary.Enums.Browser.AudioMode.Emulate;
            instance.AudioContextSeed = "0.0004817737;0.0008047798";</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.ClientRectWorkMode">
            <summary>Gets or set the information about client rect work mode.</summary>
            <remarks>
            	<para></para>
            </remarks>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.ClientRectMode">ZennoLab.InterfacesLibrary.Enums.Browser.ClientRectMode</see></para>
            	<para>Client rect work mode.</para>
            </value>
            <example>
            The following code example demonstrates uses of the <see cref="P:ZennoLab.CommandCenter.Instance.ClientRectWorkMode">ClientRectWorkMode</see> method.
            <code title="Example" description="" lang="C#">
            instance.ClientRectWorkMode = ZennoLab.InterfacesLibrary.Enums.Browser.ClientRectMode.Emulate;
            instance.ClientRectSeed = "9.957216E-06;3.87007E-06";</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.ClientRectSeed">
            <summary>Gets or set the seed string for generating fake client rect. ClientRect emulation works only if ClientRectWorkMode sets to Emulate</summary>
            <remarks>
            	<para></para>
            </remarks>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Client rect seed.</para>
            </value>
            <example>
            The following code example demonstrates uses of the <see cref="P:ZennoLab.CommandCenter.Instance.ClientRectSeed">ClientRectSeed</see> method.
            <code title="Example" description="" lang="C#">
            instance.ClientRectWorkMode = ZennoLab.InterfacesLibrary.Enums.Browser.ClientRectMode.Emulate;
            instance.ClientRectSeed = "9.957216E-06;3.87007E-06";</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.MinimizeMemory">
            <summary>Performs a forced garbage collection. May cause the application hangs.
            ATTENTION! When using MinimizeMemory deletes all references to elements and documents, and thus need to re-obtain elements and documents.</summary>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.MinimizeMemory">MinimizeMemory</see> method.
            <code title="Example" description="" lang="C#">
            instance.ActiveTab.Navigate("yandex.ru");
            instance.ActiveTab.WaitDownloading();
            
            // get html element and set value
            var he = instance.ActiveTab.FindElementById("text");
            he.SetValue("123", "Full", false);
            project.SendInfoToLog(he.ErrorDetected.ToString(), ""); // result "False"
            
            // minimize memory and release references
            instance.MinimizeMemory();
            
            // try set value by old reference, but nothing change, because reference was released
            he.SetValue("345", "Full", false);
            project.SendInfoToLog(he.ErrorDetected.ToString(), ""); // result "True"
            
            // get html element again and successfully set new value
            he = instance.ActiveTab.FindElementById("text");
            he.SetValue("345", "Full", false);
            project.SendInfoToLog(he.ErrorDetected.ToString(), ""); // result "False"
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.WebRTCWorkMode">
            <summary>Gets or set the information about webrtc working mode. 
            The property needs isolated process, because it is applied to all instances in the process.</summary>
            <remarks>
            	<para></para>
            </remarks>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.WebRTCMode">ZennoLab.InterfacesLibrary.Enums.Browser.WebRTCMode</see></para>
            	<para>WebRtc working mode.</para>
            </value>
            <example>
            The following code example demonstrates uses of the <see cref="P:ZennoLab.CommandCenter.Instance.WebRTCWorkMode">WebRTCWorkMode</see> method.
            <code title="Example" description="" lang="C#">
            instance.WebRTCWorkMode = ZennoLab.InterfacesLibrary.Enums.Browser.WebRTCMode.Emulate;
            instance.SetWebRTCAdresses("127.0.0.1");
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetWebRTCAdresses(System.String@,System.String@,System.String@)">
            <summary>Gets the IP addresses, that have been set last time. 
            The returned values will be empty for disable work mode, "default" for enable work mode. 
            For emulate work mode returns user values or empty strings, if user don't set any values.</summary>
            <param name="ipv4Address">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The "internal" IPv4 address in format "ip:port" for WebRTC.</para>
            </param>
            <param name="ipv6Address">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The IPv6 address for WebRTC in format "ip" or "[ip]:port".</para>
            </param>
            <param name="ipv4Nat">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The "external" IPv4 address in format "ip:port" for NAT.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetWebRTCAdresses(System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Browser.WebRTCMode)">
            <summary>Sets the IP addresses for emulate WebRTC settings. 
            The method needs isolated process, because it is applied to all instances in the process. 
            It will generate host candidates for RTP on UDP and route through NAT, if it required.</summary>
            <param name="ipv4Address">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The "internal" IPv4 address in format "ip:port" for WebRTC.</para>
            </param>
            <param name="ipv6Address">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The IPv6 address for WebRTC. It is optional parameter. Avaliable formats are "ip" or "[ip]:port". If address hasn't port, then port generates according to ipv4 port.</para>
            </param>
            <param name="ipv4Nat">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The "external" IPv4 address in format "ip:port" for NAT. It is optional parameter.</para>
            </param>
            <param name="mode">
                <para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.WebRTCMode">ZennoLab.InterfacesLibrary.Enums.Browser.WebRTCMode</see></para>
            	<para>WebRTC working mode.</para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.SetTimezone(System.Int32,System.Int32,ZennoLab.InterfacesLibrary.Enums.Browser.TimezoneMode)">SetTimezone</see> method.
            <code title="Example" description="" lang="C#">
            string ipv4, ipv6, ipNat;
            
            // disable WebRTC
            instance.WebRTCWorkMode = ZennoLab.InterfacesLibrary.Enums.Browser.WebRTCMode.Disable;
            // then WebRTC is disabled, the output variables will be empty
            instance.GetWebRTCAdresses(out ipv4, out ipv6, out ipNat);
            if (!string.IsNullOrWhiteSpace(ipv4) || !string.IsNullOrWhiteSpace(ipv6) || !string.IsNullOrWhiteSpace(ipNat))
                throw new Exception("Adresses should be empty then webRTC disabled!!!");
            
            // enable WebRTC
            instance.WebRTCWorkMode = ZennoLab.InterfacesLibrary.Enums.Browser.WebRTCMode.Enable;
            // then WebRTC is enabled, the output variables will be "default"
            instance.GetWebRTCAdresses(out ipv4, out ipv6, out ipNat);
            if (!ipv4.Equals("default") || !ipv6.Equals("default") || !ipNat.Equals("default"))
                throw new Exception("Adresses should be 'default' then webRTC enabled!!!");
            
            // emulate WebRTC
            instance.WebRTCWorkMode = ZennoLab.InterfacesLibrary.Enums.Browser.WebRTCMode.Emulate;
            // now the output variables will be empty, because we didn't set any values
            instance.GetWebRTCAdresses(out ipv4, out ipv6, out ipNat);
            if (!string.IsNullOrWhiteSpace(ipv4) || !string.IsNullOrWhiteSpace(ipv6) || !string.IsNullOrWhiteSpace(ipNat))
                throw new Exception("Adresses should be empty then webRTC emulate, but not configured!!!");
            
            // format for IPv4 is "ip:port"
            // for IPv6 are "ip" or "[ip]:port"
            var ipv4Emulate = "192.168.5.5:5687";
            var ipv6Emulate = "[2001:0:53aa:62c:24cb:218c:9257:63c]:33282";
            var ipNatEmulate = "54.234.21.12:7654";
            
            // you can emulate only local ipv4
            instance.SetWebRTCAdresses(ipv4Emulate);
            // now the output variable ipv4 will be "192.168.5.5:5687", other variables will be empty
            instance.GetWebRTCAdresses(out ipv4, out ipv6, out ipNat);
            if (ipv4 != ipv4Emulate || !string.IsNullOrWhiteSpace(ipv6) || !string.IsNullOrWhiteSpace(ipNat))
                throw new Exception("Wrong set adresses, set only ipv4!!!");
            
            // or you can emulate only local ipv4 and ipv6
            instance.SetWebRTCAdresses(ipv4Emulate, ipv6Emulate);
            // now the output variable ipv4 will be "192.168.5.5:5687", ipv6 will be "[2001:0:53aa:62c:24cb:218c:9257:63c]:33282", but ipNat will be empty
            instance.GetWebRTCAdresses(out ipv4, out ipv6, out ipNat);
            if (ipv4 != ipv4Emulate || ipv6 != ipv6Emulate || !string.IsNullOrWhiteSpace(ipNat))
                throw new Exception("Wrong set adresses, set ipv4 and ipv6!!!");
            
            // or you can emulate all addresses
            instance.SetWebRTCAdresses(ipv4Emulate, ipv6Emulate, ipNatEmulate);
            // now the output variable ipv4 will be "192.168.5.5:5687", ipv6 will be "[2001:0:53aa:62c:24cb:218c:9257:63c]:33282", ipNat will be "54.234.21.12:7654"
            instance.GetWebRTCAdresses(out ipv4, out ipv6, out ipNat);
            if (ipv4 != ipv4Emulate || ipv6 != ipv6Emulate || ipNat != ipNatEmulate)
                throw new Exception("Wrong set adresses, set ipv4, ipv6, ipNat!!!");
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetWebRTCDevices">
            <summary>Returns a collection of current visible devices.</summary>
            <returns>
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of plugins.</para>
            </returns>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.GetWebRTCDevices">GetWebRTCDevices</see> method.
            <code title="Example" description="" lang="C#">
            // get devices
            var devices = instance.GetWebRTCDevices();
            // name of first device
            string name = "";
            if (devices != null)
            {
                var devicesList = devices.ToList();
                if(devicesList.Count &gt; 0)
                {
                    name = devicesList[0].Name;
                }
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.ShowWebRTCDevice(ZennoLab.CommandCenter.WebRtcDeviceItem)">
            <summary>Show the webrtc device. Device emulation works only if WebRTCWorkMode sets to Emulate.</summary>
            <param name="device">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.WebRtcDeviceItem">ZennoLab.CommandCenter.WebRtcDeviceItem</see></para>
            	<para>WebRtcDevice object for showing. If it not exist in devices collection, it will be added to colllection.</para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.ShowWebRTCDevice(ZennoLab.CommandCenter.WebRtcDeviceItem)">ShowWebRTCDevice</see> method.
            <code title="Example" description="" lang="C#">
            // create device item
            var device = new ZennoLab.CommandCenter.WebRtcDeviceItem("WebRtcDevice name", "{0.0.0.00000000}" + Guid.NewGuid().ToString("B"), ZennoLab.InterfacesLibrary.Enums.Browser.WebRtcDeviceKind.Video);
            // add and show device
            instance.ShowWebRTCDevice(device);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.HideWebRTCDevice(ZennoLab.CommandCenter.WebRtcDeviceItem)">
            <summary>Hide the webrtc device. Device emulation works only if WebRTCWorkMode sets to Emulate.</summary>
            <param name="device">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.WebRtcDeviceItem">ZennoLab.CommandCenter.WebRtcDeviceItem</see></para>
            	<para>WebRtcDevice object for hiding.</para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.HideWebRTCDevice(ZennoLab.CommandCenter.WebRtcDeviceItem)">HideWebRTCDevice</see> method.
            <code title="Example" description="" lang="C#">
            // get devices
            var devices = instance.GetWebRTCDevices();
            // hide first device
            if (devices != null)
            {
                var devicesList = devices.ToList();
                if(devicesList.Count &gt; 0)
                {
                    instance.HideWebRTCDevice(devicesList[0]);
                }
            }
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadWebRTCDevices(System.String)">
            <summary>Loads devices.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to devices.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetWebRTCDevices">GetWebRTCDevices Method</seealso>
            <seealso cref="M:ZennoLab.CommanмdCenter.Instance.ShowWebRTCDevice(ZennoLab.CommandCenter.WebRtcDeviceItem)">ShowWebRTCDevice Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.HideWebRTCDevice(ZennoLab.CommandCenter.WebRtcDeviceItem)">ShowWebRTCDevice Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SaveWebRTCDevices(System.String)">SaveWebRTCDevices Method</seealso>
            <example>
            The following example uses the <see cref="o:LoadWebRTCDevices">LoadWebRTCDevices</see> method.
            <code title="Example" description="" lang="C#">
            // load devices
            instance.LoadWebRTCDevices("path");</code><code title="Example2" description="" lang="PHP">
            // load devices
            $instance-&gt;LoadWebRTCDevices("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadWebRTCDevices(System.Byte[])">
            <summary>Loads devices.</summary>
            <param name="devices">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The devices data.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SaveWebRTCDevices(System.String)">
            <summary>Saves devices.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to devices.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetWebRTCDevices">GetWebRTCDevices Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ShowWebRTCDevice(ZennoLab.CommandCenter.WebRtcDeviceItem)">ShowWebRTCDevice Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.HideWebRTCDevice(ZennoLab.CommandCenter.WebRtcDeviceItem)">ShowWebRTCDevice Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.LoadWebRTCDevices(System.String)">LoadWebRTCDevices Method</seealso>
            <example>
            The following example uses the <see cref="o:SaveWebRTCDevices">SaveWebRTCDevices</see> method.
            <code title="Example" description="" lang="C#">
            // save devices
            instance.SaveWebRTCDevices("path");</code><code title="Example2" description="" lang="PHP">
            // save devices
            $instance-&gt;SaveWebRTCDevices("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SaveWebRTCDevices">
            <summary>Saves devices.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The path to devices.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetBrowserPreference(System.String,System.Object)">
            <summary>Sets the broswer preference. The method needs isolated process, because it is applied to all instances in the process. </summary>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of preference.</para>
            </param>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.object.aspx">System.Object</see></para>
            	<para>The value of preference.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>True if the preference successfully setted, otherwise false.</para>
            </returns>
            <example> 
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.SetBrowserPreference(System.String,System.Object)">SetBrowserPreference</see> method.
            <code title="Example" description="" lang="C#">
            instance.SetBrowserPreference("network.http.speculative-parallel-limit", 0);
            instance.SetBrowserPreference("browser.send_pings", false);
            instance.SetBrowserPreference("intl.accept_languages", "ru-RU, ru, en-US, en");
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetBrowserPreference(System.String)">
            <summary>Returns the preference of browser.</summary>
            <param name="name">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.WindowPreference">ZennoLab.InterfacesLibrary.Enums.Browser.WindowPreference</see></para>
            	<para>The name of preference.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.object.aspx">System.Object</see></para>
            	<para>The value of browser preference. May has type string, int or boolean</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.ChangeRequest(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>Replaces data of browser request.</summary>
            <remarks>
            	<para>To find the request use regex "regexUrl". 
            To replace data in the request body use collections "regexesForReplace" and "datasForReplace", 
            the first collection contains regular expressions that will replace the original data with the corresponding elements from the second collection.
            The "regexesForReplace" and "datasForReplace" collections should has a same size, otherwise the method doesn't perform and set ErrorDetected to True.</para>
            </remarks>
            <param name="regexUrl">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The regex string to find the request url.</para>
            </param>
            <param name="regexesForReplace">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of regexs to find data in the request body.</para>
            </param>
            <param name="datasForReplace">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of strings to replace the relevant data.</para>
            </param>
            <param name="allTime">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use this replacement all time; otherwise and default, false.</para>
            </param>
            <example> 
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.ChangeRequest(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">ChangeRequest</see> method.
            <code title="Example" description="" lang="C#">
            instance.ChangeResponse(&quot;http://lessons.zennolab.com/en/index&quot;, 
                new List&lt;string&gt; 
                { 
            	    &quot;(?&lt;=&lt;input type=\&quot;checkbox\&quot; class=\&quot;inputs\&quot;&gt;&lt;h2&gt;&amp;ensp;).*(?=&lt;/h2&gt;)&quot;,
            	    &quot;(?&lt;=&lt;textarea rows=\&quot;5\&quot; cols=\&quot;45\&quot; name=\&quot;text\&quot;&gt;).*(?=&lt;/textarea&gt;)&quot;,
            	    &quot;&lt;h2&gt;Any text:&lt;/h2&gt;&quot;
                }, 
                new List&lt;string&gt; 
                { 
            	    &quot;no OS&quot;,
            	    &quot;NEW TEXT TO TEXTAREA&quot;,
            	    &quot;&lt;h2&gt;NEW HEADER TO TEXTAREA:&lt;/h2&gt;&quot;
                });
            instance.ChangeRequest(@&quot;(?&lt;=https://mc\.yandex\.ru/webvisor/).*&quot;, new List&lt;string&gt; { @&quot;(?&lt;=wv-data=).*&quot; }, new List&lt;string&gt; { &quot;NODATA&quot; }, true);
            
            Tab tab = instance.ActiveTab;
            if ((tab.IsVoid) || (tab.IsNull)) return -1;
            if (tab.IsBusy) tab.WaitDownloading();
            tab.Navigate(&quot;lessons.zennolab.com&quot;, &quot;&quot;);
            if (tab.IsBusy) tab.WaitDownloading();
            </code></example>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ChangeResponse">ChangeResponse Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.ChangeResponse(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>Replaces data of browser response.</summary>
            <remarks>
            	<para>To find the response use regex "regexUrl". 
            To replace data in the response body use collections "regexesForReplace" and "datasForReplace", 
            the first collection contains regular expressions that will replace the original data with the corresponding elements from the second collection.
            The "regexesForReplace" and "datasForReplace" collections should has a same size, otherwise the method doesn't perform and set ErrorDetected to True.</para>
            </remarks>
            <param name="regexUrl">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The regex string to find the response url.</para>
            </param>
            <param name="regexesForReplace">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of regexs to find data in the response body.</para>
            </param>
            <param name="datasForReplace">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of strings to replace the relevant data.</para>
            </param>
            <param name="allTime">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use this replacement all time; otherwise and default, false.</para>
            </param>
            <example> 
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.ChangeRequest(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">ChangeRequest</see> method.
            <code title="Example" description="" lang="C#">
            instance.ChangeResponse(&quot;http://lessons.zennolab.com/en/index&quot;, 
                new List&lt;string&gt; 
                { 
            	    &quot;(?&lt;=&lt;input type=\&quot;checkbox\&quot; class=\&quot;inputs\&quot;&gt;&lt;h2&gt;&amp;ensp;).*(?=&lt;/h2&gt;)&quot;,
            	    &quot;(?&lt;=&lt;textarea rows=\&quot;5\&quot; cols=\&quot;45\&quot; name=\&quot;text\&quot;&gt;).*(?=&lt;/textarea&gt;)&quot;,
            	    &quot;&lt;h2&gt;Any text:&lt;/h2&gt;&quot;
                }, 
                new List&lt;string&gt; 
                { 
            	    &quot;no OS&quot;,
            	    &quot;NEW TEXT TO TEXTAREA&quot;,
            	    &quot;&lt;h2&gt;NEW HEADER TO TEXTAREA:&lt;/h2&gt;&quot;
                });
            instance.ChangeRequest(@&quot;(?&lt;=https://mc\.yandex\.ru/webvisor/).*&quot;, new List&lt;string&gt; { @&quot;(?&lt;=wv-data=).*&quot; }, new List&lt;string&gt; { &quot;NODATA&quot; }, true);
            
            Tab tab = instance.ActiveTab;
            if ((tab.IsVoid) || (tab.IsNull)) return -1;
            if (tab.IsBusy) tab.WaitDownloading();
            tab.Navigate(&quot;lessons.zennolab.com&quot;, &quot;&quot;);
            if (tab.IsBusy) tab.WaitDownloading();
            </code></example>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ChangeResponse">ChangeRequest Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">
            <summary>Gets or sets a value that indicates whether use detailed traffic monitoring.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use detailed traffic monitoring; otherwise, false.</para>
            </value>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetTraffic">GetTraffic Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="P:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring</see> property.
            <code title="Example" description="" lang="C#">
            instance.SetContentPolicy("BlockList", new []{ "mc.yandex.ru" }, null);
            instance.UseTrafficMonitoring = false;
            Tab tab = instance.ActiveTab;
            // navigate to url
            instance.ClearCache();
            instance.ClearCookie();
            tab.Navigate("http://lessons.zennolab.com");
            if (tab.IsBusy) tab.WaitDownloading();
            // get list of requests
            var traffic = instance.ActiveTab.GetTraffic();
            // print count of items, it will be more than 0
            project.SendInfoToLog("First count of traffic elements = " + traffic.Count());
            // get some data from items and log it
            foreach(var t in traffic)
                project.SendInfoToLog(string.Format("Url: {0}\r\n Method: {1}\r\n Result: {2}", t.Url, t.Method, t.ResultCode));
            // get list of request second time
            traffic = instance.ActiveTab.GetTraffic();
            // print count of items, it will be 0, because the previous method call removed the old items
            project.SendInfoToLog("Second count of traffic elements = " + traffic.Count());
                        
            // navigate to url
            instance.ClearCache();
            instance.ClearCookie();
            tab.Navigate("http://lessons.zennolab.com");
            if (tab.IsBusy) tab.WaitDownloading();
            // get reqest by urls filter collection
            traffic = instance.ActiveTab.GetTraffic(new [] {"http://lessons.zennolab.com/main.css"});
            project.SendInfoToLog("Request by urls filter:");
            foreach(var t in traffic)
                project.SendInfoToLog("Url: " + t.Url);
            // result collection must has one item
            if (traffic.Count(t => !t.IsBlocked) != 1)
                throw new Exception("Traffic collection count != 1");
            // this item must match the filter collection
            if (traffic.First().Url != "http://lessons.zennolab.com/main.css")
                throw new Exception("Traffic item url != http://lessons.zennolab.com/main.css");
            // RequestHeaders and other additional fields must be null while instance.UseTrafficMonitoring == false 
            if (!string.IsNullOrWhiteSpace(traffic.First().RequestHeaders))
                throw new Exception("Instance.UseTrafficMonitoring (false) is not working, value = " + instance.UseTrafficMonitoring);
            // get list of request second time, second result list must be empty
            traffic = instance.ActiveTab.GetTraffic().ToList();
            if (traffic.Count(t => !t.IsBlocked) != 0)
            	throw new Exception("Second traffic collection count != 0");
            
            // enable additional traffic monitoring
            instance.UseTrafficMonitoring = true;
                        
            // navigate to url
            instance.ClearCache();
            instance.ClearCookie();
            tab.Navigate("http://lessons.zennolab.com");
            if (tab.IsBusy) tab.WaitDownloading();
            // get list of requests by urls filter collection and headers filter collection
            traffic = instance.ActiveTab.GetTraffic(new [] {"http://lessons.zennolab.com/main.css"}, new [] { "image/png" });
            project.SendInfoToLog("Request by urls filter collection and headers filter collection:");
            foreach(var t in traffic)
                project.SendInfoToLog("Url: " + t.Url);
            // result collection must has two item, first match url regex, second match header regex
            if (traffic.Count(t => !t.IsBlocked) != 2)
                throw new Exception("Traffic collection count != 2");
            // all items must contains RequestHeaders and other fields, because instance.UseTrafficMonitoring == true 
            if (traffic.Any(t => string.IsNullOrWhiteSpace(t.RequestHeaders)))
                throw new Exception("Instance.UseTrafficMonitoring (true) is not working, value = " + instance.UseTrafficMonitoring);
            // get list of request second time, second result list must be empty
            traffic = instance.ActiveTab.GetTraffic().ToList();
            if (traffic.Count(t => !t.IsBlocked) != 0)
                throw new Exception("Second traffic collection count != 0");
            
            // navigate to url
            instance.ClearCache();
            instance.ClearCookie();
            tab.Navigate("http://lessons.zennolab.com");
            if (tab.IsBusy) tab.WaitDownloading();
            // get list of requests by urls, headers and body filter collection
            traffic = instance.ActiveTab.GetTraffic(new [] {"http://lessons.zennolab.com/main.css"}, new [] { "image/png" }, new [] { "DOCTYPE HTML PUBLIC" });
            project.SendInfoToLog("Request by urls filter collection and headers filter collection:");
            foreach(var t in traffic)
                project.SendInfoToLog("Url: " + t.Url);
            // result collection must has three item
            if (traffic.Count(t => !t.IsBlocked) != 3)
                throw new Exception("Traffic collection count != 3");
            // all items must contains RequestHeaders and other fields, because instance.UseTrafficMonitoring == true 
            if (traffic.Any(t => string.IsNullOrWhiteSpace(t.RequestHeaders)))
               throw new Exception("Instance.UseTrafficMonitoring (true) is not working, value = " + instance.UseTrafficMonitoring);
            // get list of request second time, second result list must be empty
            traffic = instance.ActiveTab.GetTraffic().ToList();
            if (traffic.Count(t => !t.IsBlocked) != 0)
                throw new Exception("Second traffic collection count != 0");
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SaveSuperCookie(System.String)">
            <summary>Saves super cookie.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to cookie.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.LoadSuperCookie">LoadSuperCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetSuperCookie">SetSuperCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetSuperCookie">GetSuperCookie Method</seealso>
            <example>
            The following example uses the <see cref="o:SaveSuperCookie">SaveSuperCookie</see> method.
            <code title="Example" description="" lang="C#">
            // save cookie
            instance.SaveSuperCookie("path");</code><code title="Example2" description="" lang="PHP">
            // save cookie
            $instance-&gt;SaveSuperCookie("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SaveSuperCookie">
            <summary>Saves super cookie.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The super cookies data.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.LoadSuperCookie">LoadSuperCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetSuperCookie">SetSuperCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetSuperCookie">GetSuperCookie Method</seealso>
            <example>
            The following example uses the <see cref="o:SaveSuperCookie">SaveSuperCookie</see> method.
            <code title="Example" description="" lang="C#">
            // get byte array of super cookie
            byte[] cookieBytes = instance.SaveSuperCookie();
            // convert byte array to string and return result
            return System.Text.Encoding.UTF8.GetString(cookieBytes);</code><code title="Example2" description="" lang="PHP">
            // get byte array of super cookie
            cookieBytes = instance.SaveSuperCookie();
            // convert byte array to string and return result
            return System.Text.Encoding.UTF8.GetString(cookieBytes);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadSuperCookie(System.String)">
            <summary>Loads super cookie.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to super cookie.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SaveSuperCookie">SaveSuperCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetSuperCookie">SetSuperCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetSuperCookie">GetSuperCookie Method</seealso>
            <example>
            The following example uses the <see cref="o:LoadSuperCookie">LoadSuperCookie</see> method.
            <code title="Example" description="" lang="C#">
            // load super cookie
            instance.LoadSuperCookie("path");</code><code title="Example2" description="" lang="PHP">
            // load super cookie
            $instance-&gt;LoadSuperCookie("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadSuperCookie(System.Byte[])">
            <summary>Loads super cookie.</summary>
            <param name="cookie">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The super cookies data.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SaveSuperCookie">SaveSuperCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetSuperCookie">SetSuperCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetSuperCookie">GetSuperCookie Method</seealso>
            <example>
            The following example uses the <see cref="o:LoadSuperCookie">LoadSuperCookie</see> method.
            <code title="Example" description="" lang="C#">
            // format super cookie string
            string cookie = @"mc.yandex.ru:HSTS	0	17324	1528380625408,1,0
            yastatic.net:HSTS	0	17324	1540044588554,1,1";
            // convert super cookie string to byte array
            byte[] cookieBytes = System.Text.Encoding.UTF8.GetBytes(cookie);
            // load cookie
            instance.LoadSuperCookie(cookieBytes);</code><code title="Example2" description="" lang="PHP">
            // format super cookie string
            $cookie = @"mc.yandex.ru:HSTS	0	17324	1528380625408,1,0
            yastatic.net:HSTS	0	17324	1540044588554,1,1";
            // convert super cookie string to byte array
            $cookieBytes = System\Text\Encoding\UTF8::GetBytes($cookie);
            // load cookie
            $instance-&gt;LoadSuperCookie($cookieBytes);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SetSuperCookie(System.String)">
            <summary>Sets super cookie.</summary>
            <param name="cookie">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The super cookies data in format "Key\tScore\tLastAccessed\tValue".</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.LoadSuperCookie">LoadSuperCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SaveSuperCookie">SaveSuperCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetSuperCookie">GetSuperCookie Method</seealso>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.SetSuperCookie(System.String)">SetSuperCookie</see> method.
            <code title="Example" description="" lang="C#">
            // format super cookie string
            string cookie = @"mc.yandex.ru:HSTS	0	17324	1528380625408,1,0
            yastatic.net:HSTS	0	17324	1540044588554,1,1";
            // load cookie
            instance.SetSuperCookie(cookie);</code><code title="Example2" description="" lang="PHP">
            // format super cookie string
            $cookie = @"mc.yandex.ru:HSTS	0	17324	1528380625408,1,0
            yastatic.net:HSTS	0	17324	1540044588554,1,1";
            // load cookie
            $instance-&gt;SetSuperCookie($cookie);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetSuperCookie(System.String)">
            <summary>Gets super cookie.</summary>
            <param name="domain">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The domain of cookie. The default value is empty string.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The ыгзук cookies in the string format.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ClearCookie">ClearCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.LoadSuperCookie">LoadSuperCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SaveSuperCookie">SaveSuperCookie Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SetSuperCookie">SetSuperCookie Method</seealso>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.GetSuperCookie(System.String)">GetSuperCookie</see> method.
            <code title="Example" description="" lang="C#">
            instance.ActiveTab.Navigate("http://google.com/");
            instance.ActiveTab.WaitDownloading();
            // get super cookie by domain
            return instance.GetSuperCookie("google.com");</code><code title="Example2" description="" lang="PHP">
            $instance-&gt;ActiveTab-&gt;Navigate("http://google.com/");
            $instance-&gt;ActiveTab-&gt;WaitDownloading();
            // get super cookie by domain
            return $instance-&gt;GetSuperCookie("google.com");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetFonts">
            <summary>Returns a collection of current visible fonts.</summary>
            <returns>
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of fonts.</para>
            </returns>
            <example>
            The following example uses the <see cref="M:ZennoLab.CommandCenter.Instance.GetFonts">GetFonts</see> method.
            <code title="Example" description="" lang="C#">
            // get fonts
            var fonts = instance.GetFonts();
            // name of first font
            string name = "";
            if (fonts != null)
            {
                var fontList = fonts.ToList();
                if(fontList.Count &gt; 0)
                {
                    name = fontList[0];
                }
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.FontsFolder">
            <summary>Gets or sets path of additional fonts folder. The fonts from the folder may be used for ShowFont/HideFont methods.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path of fonts folder.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.ShowFont(System.String)">
            <summary>Show the font. The method needs isolated process, because it is applied to all instances in the process.
            If browser is Chrome, fonts changes applies only for new tabs.</summary>
            <param name="font">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Font name string for showing. If it not exist in default fonts collection or in <see cref="P:ZennoLab.CommandCenter.Instance.FontsFolder">FontsFolder</see>, it will be ignored.</para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.ShowFont(System.String)">ShowFont</see> method.
            <code title="Example" description="" lang="C#">
            // show font
            instance.ShowFont("Arial");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.HideFont(System.String)">
            <summary>Hide the font. The method needs isolated process, because it is applied to all instances in the process.
            If browser is Chrome, fonts changes applies only for new tabs.</summary>
            <param name="font">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Font name string for hiding.</para>
            </param>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.HideFont(System.String)">HideFont</see> method.
            <code title="Example" description="" lang="C#">
            // hide font
            instance.HideFont("Arial");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadFonts(System.String)">
            <summary>Loads fonts. The method needs isolated process, because it is applied to all instances in the process.
            If browser is Chrome, fonts changes applies only for new tabs.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to fonts.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetFonts">GetFonts Method</seealso>
            <seealso cref="M:ZennoLab.CommanмdCenter.Instance.ShowFont(ZennoLab.CommandCenter.FontItem)">ShowFont Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.HideFont(ZennoLab.CommandCenter.FontItem)">ShowFont Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.SaveFonts(System.String)">SaveFonts Method</seealso>
            <example>
            The following example uses the <see cref="o:LoadFonts">LoadFonts</see> method.
            <code title="Example" description="" lang="C#">
            // load fonts
            instance.LoadFonts("path");</code><code title="Example2" description="" lang="PHP">
            // load fonts
            $instance-&gt;LoadFonts("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadFonts(System.Byte[])">
            <summary>Loads fonts. The method needs isolated process, because it is applied to all instances in the process.
            If browser is Chrome, fonts changes applies only for new tabs.</summary>
            <param name="fonts">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The fonts data.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SaveFonts(System.String)">
            <summary>Saves fonts. The method needs isolated process, because it is applied to all instances in the process.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to fonts.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.GetFonts">GetFonts Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.ShowFont(ZennoLab.CommandCenter.FontItem)">ShowFont Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.HideFont(ZennoLab.CommandCenter.FontItem)">ShowFont Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.LoadFonts(System.String)">LoadFonts Method</seealso>
            <example>
            The following example uses the <see cref="o:SaveFonts">SaveFonts</see> method.
            <code title="Example" description="" lang="C#">
            // save fonts
            instance.SaveFonts("path");</code><code title="Example2" description="" lang="PHP">
            // save fonts
            $instance-&gt;SaveFonts("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SaveFonts">
            <summary>Saves fonts. The method needs isolated process, because it is applied to all instances in the process.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The fonts data.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.FlushDataOnDisk">
            <summary>Saves folder with browser profile</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadIndexedDb(System.String)">
            <summary>Loads indexedDB.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to indexedDB file.</para>
            </param>
            <example>
            The following example uses the <see cref="o:LoadIndexedDb">LoadIndexedDb</see> method.
            <code title="Example" description="" lang="C#">
            // load IndexedDb
            instance.LoadIndexedDb("path");</code><code title="Example2" description="" lang="PHP">
            // load IndexedDb
            $instance-&gt;LoadIndexedDb("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.LoadIndexedDb(System.Byte[])">
            <summary>Loads indexedDB.</summary>
            <param name="databases">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The indexedDB data.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SaveIndexedDb(System.String)">
            <summary>Saves indexedDB.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to fonts.</para>
            </param>
            <example>
            The following example uses the <see cref="o:SaveIndexedDb">SaveIndexedDb</see> method.
            <code title="Example" description="" lang="C#">
            // save IndexedDb
            instance.SaveIndexedDb("path");</code><code title="Example2" description="" lang="PHP">
            // save IndexedDb
            $instance-&gt;SaveIndexedDb("path");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.SaveIndexedDb">
            <summary>Saves indexedDB.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The indexedDB data.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.ProfilePath">
            <summary>Gets path of profile for instance.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path of profile.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.CachePath">
            <summary>Gets path of cache for instance.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path of profile.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UsesFolderProfile">
            <summary>Gets whether instance uses folder profile on disk or not.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspxx">System.Boolean</see></para>
            	<para>Whether instance uses folder profile on disk or not.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.BrowserType">
            <summary>Gets the type of browser.</summary>
            <value>
            	<para>Type: <see cref="P:ZennoLab.CommandCenter.Instance.BrowserType">ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType</see></para>
            	<para>The current browser type.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.WaitForPreparing">
            <summary>Wait while instance prerpare all tabs.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.StopDownloads">
            <summary>Stop the active downloads.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UseToStringEmulation">
            <summary>Gets or sets a value that indicates whether use javascript toString() emulation.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use javascript toString() emulation; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UseJsFeatures">
            <summary>Gets or sets a value that indicates whether use javascript features.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use javascript features; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.UseFullMouseEmulation">
            <summary>Gets or sets a value that indicates whether use full mouse emulation features where it posible.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if use full mouse emulation features where it posible; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.AllowNotification">
            <summary>Gets or sets a value that indicates whether allow browser notification.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if allow browser notitcation; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.LastNotificationTitle">
            <summary>Gets the last notification title of the browser.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string that contains the last notification title.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.ClearTrafficWhenNavigate">
            <summary>Gets or sets whether the traffic items are to be cleared when navigating.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if clear traffic items; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.LastNotificationText">
            <summary>Gets the last notification text of the browser.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string that contains the last notification text.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.AutoRetry">
            <summary>Gets or sets a value that indicates whether retry requests. Works only in Chrome.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if retry requests; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.AutoRetryMaxAttempts">
            <summary>Gets or set retry requests attempts. Works only in Chrome.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The retry requests attempts. The attempts can take values from 1 to 10, default value is 3.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.AutoRetry5xxResponses">
            <summary>Gets or sets a value that indicates whether retry requests with response code 5xx. Works only in Chrome.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if retry requests with response code 5xx; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.FrameRate">
            <summary>Gets or set frame rate of the browser. Works only in Chrome.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The frame rate of the browser. Frame rate can take values from 1 to 60, and 0 - default value.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.AnimationFrameRate">
            <summary>Gets or set animation frame rate of the browser. Works only in Chrome.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The anumation frame rate of the browser. Animation frame rate can take values from 1 to 1000, and 0 - default value.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.NavigatorPermissions">
            <summary>
            Sets or gets a JSON document, which is a config for permissions statuses provided by the Permissions API.
            Defaults are used the same as chrome.
            </summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>
            	    Example of the default chrome confuguration:
                    {
                        "geolocation":2,
                        "notifications":2,
                        "midi":0,
                        "camera":2,
                        "microphone":2,
                        "background-sync":0,
                        "persistent-storage":2,
                        "accelerometer":0,
                        "gyroscope":0,
                        "magnetometer":0,
                        "clipboard-read":2,
                        "clipboard-write":0,
                        "payment-handler":0
                    }
            	    where key is name of the API and value is one of the following:
            	     0 - 'granted'
                     1 - 'denied'
                     2 -  'prompt'
            	</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.SpeechSynthesisVoices">
            <summary>Sets or gets a JSON document, which is a config for voices in the Speech Synthesis API</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>
            	    Example of the confuguration: [{"voiceURI":"Milena","name":"Milena","lang":"ru-RU","localService":true,"default":true}]
            	    field 'voiceURI' - type of URI and location of the speech synthesis service for this voice
            	    field 'name' - name of the voice;
            	    field 'lang' - default language;
            	    field 'localService' - indecaties where the voice is a localy and dont need to any network calls;
            	    field 'default' - indicates which voice using by default;
            	</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.DevicePixelRatio">
            <summary>Get or set device pixel ratio of the browser. Works only in Chrome.</summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.op_Equality(ZennoLab.CommandCenter.Instance,ZennoLab.CommandCenter.Instance)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.op_Inequality(ZennoLab.CommandCenter.Instance,ZennoLab.CommandCenter.Instance)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.Equals(ZennoLab.CommandCenter.Instance)">
            <summary>
            	<span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px 'Segoe UI', Verdana, Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
            Determines whether the specified <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object is equal to the current <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</span>
            </summary>
            <overloads>Determines whether the specified object is equal to the current object.</overloads>
            <param name="other">Type: <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see><br/>
            The Instance object to compare with the current Instance object.</param>
            <returns>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see><br/>
            The true if the specified <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object is equal to the current <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object; otherwise, false.</returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.Equals(System.Object)">
            <summary>
            	<span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px 'Segoe UI', Verdana, Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
            Determines whether the specified object is equal to the current <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</span>
            </summary>
            <overloads>Determines whether the specified object is equal to the current object.</overloads>
            <param name="obj">Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.object.aspx">System.Object</see><br/>
            The object to compare with the current object.</param>
            <returns>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see><br/>
            The true if the specified object is equal to the current <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object; otherwise, false.</returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetHashCode">
            <summary>
            	<span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px 'Segoe UI', Verdana, Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
            Returns the hash code for this <see cref="T:ZennoLab.CommandCenter.Instance">Instance</see> object.</span>
            </summary>
            <returns>
            	<span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: 13px 'Segoe UI', Verdana, Arial; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
            Type: </span>
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	<br style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; FONT: 13px 'Segoe UI', Verdana, Arial; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"/>
            	<span style="TEXT-ALIGN: left; WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; FONT: 13px 'Segoe UI', Verdana, Arial; WHITE-SPACE: normal; ORPHANS: 2; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
            		<span>A 32-bit signed integer hash code.</span>
            	</span>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.WaitFieldEmulationDelay">
             <summary>Waits for end of the filling up field.</summary>
             <example>
             The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.WaitFieldEmulationDelay">WaitFieldEmulationDelay</see> method.
             <code title="Example" description="" lang="C#">
             // clear cookie
             instance.ClearCookie();
              
             // navigate to lessons.zennolab.com
             instance.ActiveTab.Navigate("lessons.zennolab.com", "");
             
             // wait for downloading
             instance.ActiveTab.WaitDownloading();
             
             // find html element
             HtmlElement he = instance.ActiveTab.AllDocuments.Documents[0].FindElementByTag("textarea", 0);
             
             // if html element not exist
             if (he.IsNull &amp;&amp; he.IsVoid) return -1;
             
             // set input field emulation delay
             instance.FieldEmulationDelay = 20000;
            
             // restarting input delay timer for the first call WaitFieldEmulationDelay
             instance.RefreshFieldEmulationDelay();
             
             // set value
             he.SetValue("It's just not a larger text for testing this method. And for showing how to use C# or PHP code for making the nice projects.", "Full", false);
             
             // and wait if delay time has not passed
             instance.WaitFieldEmulationDelay();
              
             // but now shows message that all done
             System.Windows.Forms.MessageBox.Show("All done", "End of action");</code><code title="Example2" description="" lang="PHP">
             // clear cookie
             $instance-&gt;ClearCookie();
              
             // navigate to lessons.zennolab.com
             $instance-&gt;ActiveTab-&gt;Navigate("lessons.zennolab.com", "");
              
             // wait for downloading
             $instance-&gt;ActiveTab-&gt;WaitDownloading();
              
             // find html element
             $he = $instance-&gt;ActiveTab-&gt;AllDocuments-&gt;Documents[0]-&gt;FindElementByTag("textarea", 0);
              
             // if html element exist
             if (!$he-&gt;IsNull &amp;&amp; !$he-&gt;IsVoid)
             {
                 // set value
                 $he-&gt;SetValue("It's just not a larger text for testing this method. And for showing how to use C# or PHP code for making the nice projects.", "Full", false);
                 // and wait
                 $instance-&gt;WaitFieldEmulationDelay();
             }
              
             // but now show message that all done
             System\Windows\Forms\MessageBox::Show("All done", "End of action");</code></example>
             <requirements>
             	<para>
             		<strong>Target Platforms:</strong>
             		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
             </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.RefreshFieldEmulationDelay">
             <summary>Refresh the field emulation delay.</summary><example>
             The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Instance.RefreshFieldEmulationDelay">RefreshFieldEmulationDelay</see> method.
             <code title="Example" description="" lang="C#">
             // clear cookie
             instance.ClearCookie();
              
             // navigate to lessons.zennolab.com
             instance.ActiveTab.Navigate("lessons.zennolab.com", "");
             
             // wait for downloading
             instance.ActiveTab.WaitDownloading();
             
             // find html element
             HtmlElement he = instance.ActiveTab.AllDocuments.Documents[0].FindElementByTag("textarea", 0);
             
             // if html element not exist
             if (he.IsNull &amp;&amp; he.IsVoid) return -1;
             
             // set input field emulation delay
             instance.FieldEmulationDelay = 20000;
            
             // restarting input delay timer for the first call WaitFieldEmulationDelay
             instance.RefreshFieldEmulationDelay();
             
             // set value
             he.SetValue("It's just not a larger text for testing this method. And for showing how to use C# or PHP code for making the nice projects.", "Full", false);
             
             // and wait if delay time has not passed
             instance.WaitFieldEmulationDelay();
              
             // but now shows message that all done
             System.Windows.Forms.MessageBox.Show("All done", "End of action");</code></example>
             <requirements>
             	<para>
             		<strong>Target Platforms:</strong>
             		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
             </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Instance.NavigateErrorCountRunning">
            <summary>Gets or sets the count of the detected navigation errors.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The count of the detected navigation errors.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="E:ZennoLab.CommandCenter.Instance.OnLaunch">
            <summary>Occurs when the instance launches.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="E:ZennoLab.CommandCenter.Instance.OnMessageLog">
            <summary>Occurs when the instance put message to log.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.InvokeOnMessageLog(Global.Args.InstanceMessageLogEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:ZennoLab.CommandCenter.Instance.OnReload">
            <summary>Occurs when the instance restarts.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.InvokeOnReload">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="E:ZennoLab.CommandCenter.Instance.OnCheckProxy">
            <summary>Occurs when needs check real proxy ip.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.InvokeOnCheckProxy(Global.Args.InstanceCheckProxyEventArgs)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="E:ZennoLab.CommandCenter.Instance.OnSetProxy">
            <summary>Occurs when sets proxy to the instance.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.InvokeOnSetProxy(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="E:ZennoLab.CommandCenter.Instance.OnToProfile">
            <summary>Occurs when the instance send info to profile.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.InvokeOnToProfile(Global.Args.InstanceToProfileEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:ZennoLab.CommandCenter.Instance.OnWaitForUserAction">
            <summary>
            Occurs when WaitForUserAction starting
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="E:ZennoLab.CommandCenter.Instance.OnWaitForUserActionOver">
            <summary>
            Occurs when WaitForUserAction ends
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.Test(System.String[])">
            <summary> Тест </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.Instance.GetNull">
            <summary> Возвращает пустой инстанс </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.IZennoCustomCode">
            <summary>Defines methods that allow you to run execution of code in ZennoPoster</summary>
            <seealso cref="T:ZennoLab.CommandCenter.Instance">Instance Class</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel">IZennoPosterProjectModel Interface</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.IZennoCustomEndCode">IZennoCustomEndCode Interface</seealso>
            <example>
            The following example demonstrates the implementation of <see cref="T:ZennoLab.CommandCenter.IZennoCustomCode">IZennoCucstomCode</see><code title="Example" description="" lang="C#">
            using System;
            using ZennoLab.CommandCenter;
             
            namespace ZennoCustomCode
            {
                class Program : IZennoCustomCode
                {
                    public int ExecuteCode(Instance instance, IZennoPosterProjectModel project)
                    { 
                        return 0;
                    }
                }
            }</code><code title="Example2" description="" lang="PHP">
            &lt;?php
            use System;
            use ZennoLab\CommandCenter;
             
            [Export]
            class Program implements ZennoLab\CommandCenter\IZennoCustomCode
            {
                public function ExecuteCode($instance, $project)
                {
                    return 0;
                }
            }
            ?&gt;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.IZennoCustomCode.ExecuteCode(ZennoLab.CommandCenter.Instance,ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel)">
            <summary>The entry point in your code</summary>
            <param name="instance">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Instance">ZennoLab.CommandCenter.Instance</see></para>
            	<para>This object contains all necessary methods and properties for work with instance.</para>
            </param>
            <param name="project">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel">ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel</see></para>
            	<para>The model of the current project.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.int32.aspx">System.Int32</see></para>
            	<para>Takes a negative value, if execution of this method, error is detected</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.IZennoCustomEndCode">
            <summary>Defines methods that allow use the GoodEnd and BadEnd methods via code.</summary>
            <seealso cref="T:ZennoLab.CommandCenter.IZennoCustomCode">IZennoCustomCode Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel">IZennoPosterProjectModel Interface</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.Instance">Instance Class</seealso>
            <example>
            The following example demonstrates the implementation of <see cref="T:ZennoLab.CommandCenter.IZennoCustomEndCode">IZennoCustomEndCode</see><code title="Example" description="" lang="C#">
            using System;
            using ZennoLab.CommandCenter;
             
            namespace ZennoCustomCode
            {
                public class Program : IZennoCustomCode, IZennoCustomEndCode
                {
                    // good end method
                    public void GoodEnd(Instance instance, IZennoPosterProjectModel project)
                    {
                    }
             
                    // bad end method
                    public void BadEnd(Instance instance, IZennoPosterProjectModel project)
                    {
                    }
                    
                    // The main method
                    public int ExecuteCode(Instance instance, IZennoPosterProjectModel project)
                    {
                        int executionResult = 0;
             
                        return executionResult;
                    }
                }
            }</code><code title="Example2" description="" lang="PHP">
            &lt;?php
            use System;
            use ZennoLab\CommandCenter;
             
            [Export]
            class Program implements ZennoLab\CommandCenter\IZennoCustomCode, ZennoLab\CommandCenter\IZennoCustomEndCode
            {
                // good end method
                public function GoodEnd($instance, $project)
                {
                }
             
                // bad end method
                public function BadEnd($instance, $project)
                {
                }
                    
                // The main method
                public function ExecuteCode($instance, $project)
                {
                    int executionResult = 0;
             
                    return executionResult;
                }
            }
            ?&gt;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.IZennoCustomEndCode.GoodEnd(ZennoLab.CommandCenter.Instance,ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel)">
            <summary>The entry point into GoodEnd method.</summary>
            <param name="instance">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Instance">ZennoLab.CommandCenter.Instance</see></para>
            	<para>This object contains all necessary methods and properties for work with instance.</para>
            </param>
            <param name="project">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel">ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel</see></para>
            	<para>The model of the current project.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.IZennoCustomEndCode.BadEnd(ZennoLab.CommandCenter.Instance,ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel)">BadEnd Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.IZennoCustomEndCode.BadEnd(ZennoLab.CommandCenter.Instance,ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel)">
            <summary>The entry point into BadEnd method.</summary>
            <param name="instance">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Instance">ZennoLab.CommandCenter.Instance</see></para>
            	<para>This object contains all necessary methods and properties for work with instance.</para>
            </param>
            <param name="project">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel">ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel</see></para>
            	<para>The model of the current project.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.IZennoCustomEndCode.GoodEnd(ZennoLab.CommandCenter.Instance,ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel)">GoodEnd Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.PhpHelper">
            <summary>The special class for synchronization in php code.</summary>
            <remarks>This class possible to use for synchronization your code in multithreading mode.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockInputSyncer">LockInputSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockListSyncer">LockListSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockTableSyncer">LockTableSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockInputSyncer">UnLockInputSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockListSyncer">UnLockListSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockTableSyncer">UnLockTableSyncer Method</seealso>
            <example>
            The following example uses the <see cref="T:ZennoLab.CommandCenter.PhpHelper">PhpHelper</see> for synchronization working with list of projects.
            <code title="Example" description="" lang="PHP">
            // get the list from project
            $list = $project-&gt;Lists-&gt;get_Item("List1");
            // lock the lists
            ZennoLab\CommandCenter\PhpHelper::LockListSyncer();
            try 
            {
                // get the item from list
                $tmp = $list-&gt;get_Item(0);
                // remove this item
                $list-&gt;RemoveAt(0);
            }
            catch (Exception $e) {}
            // unlock the lists
            ZennoLab\CommandCenter\PhpHelper::UnLockListSyncer();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.PhpHelper.LockListSyncer">
            <summary>The performs the lock the lists.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockInputSyncer">LockInputSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockTableSyncer">LockTableSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockInputSyncer">UnLockInputSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockListSyncer">UnLockListSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockTableSyncer">UnLockTableSyncer Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.PhpHelper.LockListSyncer">LockListSyncer</see> method.
            <code title="Example" description="" lang="PHP">
            // get the list from project
            $list = $project-&gt;Lists-&gt;get_Item("List1");
            // lock the lists
            ZennoLab\CommandCenter\PhpHelper::LockListSyncer();
            try 
            {
                // get the item from list
                $tmp = $list-&gt;get_Item(0);
                // remove this item
                $list-&gt;RemoveAt(0);
            }
            catch (Exception $e) {}
            // unlock the lists
            ZennoLab\CommandCenter\PhpHelper::UnLockListSyncer();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.PhpHelper.UnLockListSyncer">
            <summary>The performs the unlock the lists.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockInputSyncer">LockInputSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockListSyncer">LockListSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockTableSyncer">LockTableSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockInputSyncer">UnLockInputSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockTableSyncer">UnLockTableSyncer Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockListSyncer">UnLockListSyncer</see> method.
            <code title="Example" description="" lang="PHP">
            // get the list from project
            $list = $project-&gt;Lists-&gt;get_Item("List1");
            // lock the lists
            ZennoLab\CommandCenter\PhpHelper::LockListSyncer();
            try 
            {
                // get the item from list
                $tmp = $list-&gt;get_Item(0);
                // remove this item
                $list-&gt;RemoveAt(0);
            }
            catch (Exception $e) {}
            // unlock the lists
            ZennoLab\CommandCenter\PhpHelper::UnLockListSyncer();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.PhpHelper.LockTableSyncer">
            <summary>The performs the lock the tables.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockInputSyncer">LockInputSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockListSyncer">LockListSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockInputSyncer">UnLockInputSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockListSyncer">UnLockListSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockTableSyncer">UnLockTableSyncer Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.PhpHelper.LockTableSyncer">LockTableSyncer</see> method.
            <code title="Example" description="" lang="PHP">
            // get the list from project
            $table = $project-&gt;Tables-&gt;get_Item("Table1");
            // lock the table
            ZennoLab\CommandCenter\PhpHelper::LockTableSyncer();
            try 
            {
                $table-&gt;AddRow("a;b;c;d;e;f");
            }
            catch (Exception $e) {}
            // unlock the table
            ZennoLab\CommandCenter\PhpHelper::UnLockListSyncer();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.PhpHelper.UnLockTableSyncer">
            <summary>The performs the unlock the tables.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockInputSyncer">LockInputSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockListSyncer">LockListSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockTableSyncer">LockTableSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockInputSyncer">UnLockInputSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockListSyncer">UnLockListSyncer Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockTableSyncer">UnLockTableSyncer</see> method.
            <code title="Example" description="" lang="PHP">
            // get the list from project
            $table = $project-&gt;Tables-&gt;get_Item("Table1");
            // lock the table
            ZennoLab\CommandCenter\PhpHelper::LockTableSyncer();
            try 
            {
                $table-&gt;AddRow("a;b;c;d;e;f");
            }
            catch (Exception $e) {}
            // unlock the table
            ZennoLab\CommandCenter\PhpHelper::UnLockListSyncer();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.PhpHelper.LockInputSyncer">
            <summary>The performs the lock the input settings.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockListSyncer">LockListSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockTableSyncer">LockTableSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockInputSyncer">UnLockInputSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockListSyncer">UnLockListSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockTableSyncer">UnLockTableSyncer Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.PhpHelper.UnLockInputSyncer">
            <summary>The performs the unlock the input settings.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockInputSyncer">LockInputSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockListSyncer">LockListSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.LockTableSyncer">LockTableSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockListSyncer">UnLockListSyncer Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.PhpHelper.UnLockTableSyncer">UnLockTableSyncer Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.Properties.ZennoLab_CommandCenterStringResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Properties.ZennoLab_CommandCenterStringResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Properties.ZennoLab_CommandCenterStringResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Properties.ZennoLab_CommandCenterStringResources.deprecated_font_methods">
            <summary>
              Looks up a localized string similar to Элемент Instance.{0} не поддерживается в Chromium. Для эмуляции списка шрифтов используйте аргумент zl-fonts-dir при запуске браузера. Документация - {1}.
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Properties.ZennoLab_CommandCenterStringResources._0__указан_в_неверном_формате">
            <summary>
              Looks up a localized string similar to {0} указан в неверном формате, не удаётся распарсить значение &quot;{1}&quot;&quot; как IP адрес.
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Properties.ZennoLab_CommandCenterStringResources.использование_dns_over_https">
            <summary>
              Looks up a localized string similar to Использование DNS over HTTPS доступно только на Chromium!.
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Properties.ZennoLab_CommandCenterStringResources.произошла_ошибка_в_instance_setproxysettings">
             <summary>
               Looks up a localized string similar to Произошла ошибка в Instance.SetProxySettings.
            Не удалось определить &quot;выходной&quot; ip-адрес прокси, что является необходимым для эмуляции geolocation/timezone/webrtc (хотя бы одна из этих эмуляций была включена).
            Обычно эта ошибка происходит, когда прокси не работает. Попробуйте следующее:
            1. Используйте другую прокси
            2. Попробуйте выполнить установку прокси еще раз, если вы уверены, что она рабочая
            3. Попробуйте выполнить установку прокси с выключенными эмуляциями
            4. В настройках действия установки прокс [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Properties.ZennoLab_CommandCenterStringResources.прокси_0_имеет_неправильный_форма">
            <summary>
              Looks up a localized string similar to Прокси &quot;{0}&quot; имеет неправильный формат..
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.Properties.ZennoLab_CommandCenterStringResources.шрифт_0_не_найден">
            <summary>
              Looks up a localized string similar to Шрифт {0} не найден!.
            </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.Tab">
            <summary>Represents a tab of browser. Contains the necessary methods and properties for working with tabs instance.</summary>
            <remarks>The <see cref="T:ZennoLab.CommandCenter.Tab">Tab</see> class contain the properties such as <see cref="P:ZennoLab.CommandCenter.Tab.ErrorDetected">ErrorDetected</see>, <see cref="P:ZennoLab.CommandCenter.Tab.IsBusy">IsBusy</see>, <see cref="P:ZennoLab.CommandCenter.Tab.IsNull">IsNull</see> and <see cref="P:ZennoLab.CommandCenter.Tab.IsVoid">IsVoid</see>.
            Their use necessary for the correct work of your code.</remarks>
            <seealso cref="T:ZennoLab.CommandCenter.Instance">Instance Class</seealso>
            <example>
            This example demonstrates some methods and properties of the <see cref="T:ZennoLab.CommandCenter.Tab">Tab</see> class.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // go to zennolab.com in new tab
                Tab tb = instance.NewTab("zennolab");
                tb.Navigate("zennolab.com");
                if (tb.IsBusy) tb.WaitDownloading();
                
                // get source text
                string text = tab.GetSourceText("utf-8");
                
                // close tab
                tab.Close();
                
                // set source text
                tb.SetSourceText(text);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab.-&gt;sVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // go to zennolab.com in new tab
                $tb = $instance-&gt;NewTab("zennolab");
                $tb-&gt;Navigate("zennolab.com");
                if ($tb-&gt;IsBusy) $tb-&gt;WaitDownloading();
                
                // get source text
                $text = $tab-&gt;GetSourceText("utf-8");
                
                // close tab
                $tab-&gt;Close();
                
                // set source text
                $tb-&gt;SetSourceText($text);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.Name">
            <summary>Gets the name of the tab.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of the tab.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.DomText">Name</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get name
            string name = tab.Name;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get name
            $domText = $tab-&gt;Name;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.IsVoid">
            <summary>Gets the specified tab is void or not.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if tab do not represented on the server; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.ErrorDetected">ErrorDetected Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.IsNull">IsNull Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.IsVoid">IsVoid</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.ErrorDetected">
            <summary>Gets information about the error detected in the performance last command.</summary>
            <remarks>If the <see cref="T:ZennoLab.CommandCenter.Tab">Tab</see> object does not indicate to the tab of instance when this property is true. Also objects of this class contains <see cref="P:ZennoLab.CommandCenter.Tab.IsNull">IsNull</see> and
            <see cref="P:ZennoLab.CommandCenter.Tab.IsVoid">IsVoid</see> properties for identification of tab's existence. Almost all classes of <see cref="N:ZennoLab.CommandCenter">ZennoLab.CommandCenter</see> contains such properties.
            Use it for the correct execution of the code.</remarks>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if error detected in the performance last command; otherwise, false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.IsNull">IsNull Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.IsVoid">IsVoid Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.ErrorDetected">ErrorDetected</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // if error detected the return -1
                if (tab.ErrorDetected) return -1;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // if error detected the return -1
                if ($tab-&gt;ErrorDetected) return -1;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.ZP_ID">
            <summary>Gets the ID which represents tab on the server.</summary>
            <remarks>It is used only for the technical purposes</remarks>
            <value>
            	<para>Type: System.Int32</para>
            	<para>Tab ID</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.AllDocuments">
            <summary>Gets the all uploaded documents.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.DocumentCollection">Zennolab.CommanCenter.DocumentCollection</see></para>
            	<para>The collection of documents that currently loaded.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.MainDocument">MainDocument Property</seealso>
            <seealso cref="T:ZennoLab.CommandCenter.Document">Document Class</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.AllDocuments">AllDocuments</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get all documents
            DocumentCollection docCol = tab.AllDocuments;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get all documents
            $docCol = $tab-&gt;AllDocuments;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.MainDocument">
            <summary>Gets the main document the current tab.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Document">Zennolab.CommandCenter.Document</see></para>
            	<para>The main document.</para>
            </value>
            <seealso cref="T:ZennoLab.CommandCenter.Document">Document Class</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.MainBody">MainBody Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.MainDocument">MainDocument</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get main document
            Document doc = tab.MainDocument;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get main document
            $doc = $tab-&gt;MainDocument;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.MainBody">
            <summary>Gets the main body of tab.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The main body.</para>
            </value>
            <seealso cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement Class</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.MainDocument">MainDocument Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.MainBody">MainBody</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get main body
            HtmlElement he = tab.MainBody;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get main body
            $he = $tab-&gt;MainBody;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.URL">
            <summary>Gets the URL-address of the page the current tab.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The URL of the page.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.URL">URL</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get url
                string url = tab.URL;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get url
                $url = $tab-&gt;URL;
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.Domain">
            <summary>Gets the current domain of the tab.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string that contains the current domain.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.MainDomain">MainDomain Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.Domain">Domain</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get domain
            string domain = tab.Domain;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get domain
            $domain = $tab-&gt;Domain;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.MainDomain">
            <summary>Gets the current main domain of the tab.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string that contains the current main domain.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.Domain">Domain Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.MainDomain">MainDomain</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get main domain
            string domain = tab.MainDomain;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get main domain
            $domain = $tab-&gt;MainDomain;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.LastAlertTitle">
            <summary>Gets the last alert title of the tab.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string that contains the last alert title.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.LastAlertTitle">LastAlertTitle</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get alert title
            string alerttitle = tab.LastAlertTitle;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get alert title
            $alerttitle = $tab-&gt;LastAlertTitle;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.LastAlertText">
            <summary>Gets the last alert text of the tab.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string that contains the last alert text.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.LastAlertText">LastAlertText</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get alert message
            string alerttext = tab.LastAlertText;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get alert message
            $alerttext = $tab-&gt;LastAlertText;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.Title">
            <summary>Gets the title of the tab.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The title of the tab.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.Title">Title</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get title
            string title = tab.Title;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get title
            $title = $tab-&gt;Title;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.Handle">
            <summary>Gets the handle of the browser window.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The handle of the browser window.</para>
            </value>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.Handle">Handle</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get handle
            int handle = tab.Handle;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get handle
            $handle = $tab-&gt;Handle;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.IsBusy">
            <summary>Gets the specified tab is busy or not.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if the tab is busy loading the page, otherwise false.</para>
            </value>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.Navigate(System.String,System.String)">Navigate Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.WaitDownloading">WaitDownloading Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.IsInteractive">IsInteractive Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.IsPreComplete">IsPreComplete Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.IsBusy">IsBusy</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.IsInteractive">
            <summary>Gets the specified tab is interactive.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if the tab is interactive, otherwise false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.IsBusy">IsBusy Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.IsPreComplete">IsPreComplete Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.IsPreComplete">
            <summary>Gets the specified tab is pre-complete.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if the tab is pre-complete , otherwise false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.IsBusy">IsBusy Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.IsInteractive">IsInteractive Property</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.IsNull">
            <summary>Gets a value that indicates whether or not the value of the tab is null value.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if the tab value is null, otherwise false.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.ErrorDetected">ErrorDetected Property</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.IsVoid">IsVoid Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.IsNull">IsNull</see> property.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.NavigateTimeout">
            <summary>Gets or sets the timeout of page loading.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The timeout of page load in seconds.</para>
            </value>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.Navigate(System.String,System.String)">Navigate Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.Stop">Stop Method</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.NavigateTimeout">NavigateTimeout</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get navigate timeout
            int timeout = tab.NavigateTimeout;
             
            // set navigate timeout
            tab.NavigateTimeout = timeout*2;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get navigate timeout
            $timeout = $tab-&gt;NavigateTimeout;
             
            // set navigate timeout
            $tab-&gt;NavigateTimeout = $timeout*2;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.DomText">
            <summary>Gets the dom text of the tab.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The dom text of the tab.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.PageText">PageText Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.DomText">DomText</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get dom text
            string domText = tab.DomText;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get dom text
            $domText = $tab-&gt;DomText;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.PageText">
            <summary>Gets the text of the page that the user sees.</summary>
            <value>
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">Type: System.String</see>
            	<para>The text of the page.</para>
            </value>
            <seealso cref="P:ZennoLab.CommandCenter.Tab.DomText">DomText Property</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.PageText">PageText</see> property.
            <code title="Example" description="" lang="C#">
            // get main tab
            Tab tab = instance.MainTab;
             
            // get page text
            string pageText = tab.PageText;</code><code title="Example2" description="" lang="PHP">
            // get main tab
            $tab = $instance-&gt;MainTab;
             
            // get page text
            $pageText = $tab-&gt;PageText;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.MainPageArticle">
            <summary>Gets the text of the main page article.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The text of the page.</para>
            </value>
            <requirements>
            	<para>
            		<b>ZennoPoster Versions:</b> 4.0.8+</para>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.WaitDownloading">
            <summary>Waits downloading of the page.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.Navigate(System.String,System.String)">Navigate Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.WaitInteractive">WaitInteractive Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.WaitPreComplete">WaitPreComplete Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.WaitDownloading">WaitDownloading</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.WaitInteractive">
            <summary>Waits until the status changed to interactive.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.WaitDownloading">WaitDownloading Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.WaitPreComplete">WaitPreComplete Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.WaitPreComplete">
            <summary>Waits until the status changed to PreComplite.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.WaitDownloading">WaitDownloading Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.WaitInteractive">WaitInteractive Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.Stop">
            <summary>Stops downloading of the page.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.Navigate(System.String,System.String)">Navigate Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.Stop">Stop</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // stop downloading
                if (tab.IsBusy) tab.Stop();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // stop downloading
                if ($tab-&gt;IsBusy) $tab-&gt;Stop();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.Navigate(System.String,System.String)">
            <summary>Navigates to a resource identified by a URL with specified referrer.</summary>
            <overloads>Navigates to a resource identified by a URL.</overloads>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string expression that evaluates to the URL.</para>
            </param>
            <param name="referrer">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string expression that evaluates to the HTTP_REFERER header. It is empty by default.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.Stop">Stop Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.Navigate(System.String,System.String)">Navigate</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.GoBack">
            <summary>Returns to the previous resource if possible.</summary>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.Stop">Stop Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.Navigate">Navigate Method</seealso> 
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.GoBack">GoBack</see> method.
            <code title="Example" description="" lang="C#">public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com/en/registration", "");
                if (tab.IsBusy) tab.WaitDownloading();
                tab.GoBack();
            
                return 0;
            }</code><code title="Example2" description="" lang="PHP">public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com/en/registration", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;GoBack();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">
            <summary>Returns the HTML element located at specified coordinates.</summary>
            <param name="x">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The coordinate of x.</para>
            </param>
            <param name="y">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The coordinate of y.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The element located at specified coordinates.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get element from point
                HtmlElement he = tab.GetElementFromPoint(50, 50);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get element from point
                $he = $tab-&gt;GetElementFromPoint(50, 50);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.GetDocumentByAddress(System.String)">
            <summary>Searches for a document by the address.</summary>
            <param name="docAddress">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The address of a document in the tab.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Document">Zennolab.CommandCenter.Document</see></para>
            	<para>The document corresponds to the specified address.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>Searches for an HTML element by the attribute, and returns the first occurrence.</summary>
            <overloads>Searches for an HTML element by the attribute, and returns the first occurrence.</overloads>
            <param name="tags">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tags for search the element. If the count of tags is more than one then they are through <strong>";"</strong>.</para>
            </param>
            <param name="attrName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute name.</para>
            </param>
            <param name="attrValue">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute value.</para>
            </param>
            <param name="searchKind">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>This parameter can take the following values​​: <strong>"text"</strong>, <strong>"notext"</strong> and <strong>"regexp"</strong>.</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The item number in a collection of matching items.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is <strong>"<em>true</em>"</strong>.</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the attribute, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="O:ZennoLab.CommandCenter.Tab.FindElementByAttribute">FindElementByAttribute</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by attribute
                HtmlElement he = tab.FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by attribute
                $he = $tab-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", 0);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.String)">
            <summary>Searches for an HTML element by the attribute, and returns the first occurrence using extended number selector.</summary>
            <overloads>Searches for an HTML element by the attribute, and returns the first occurrence.</overloads>
            <param name="tags">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tags for search the element. If the count of tags is more than one then they are through <strong>";"</strong>.</para>
            </param>
            <param name="attrName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute name.</para>
            </param>
            <param name="attrValue">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute value.</para>
            </param>
            <param name="searchKind">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>This parameter can take the following values​​: <strong>"text"</strong>, <strong>"notext"</strong> and <strong>"regexp"</strong>.</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The document address. This can be a number represented as a string or special expression for selection the desired number. The expression is constructed by
            the rules of the range of values. For example: <strong><em>random1(1,12-15,35-end)</em></strong>.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is <strong>"<em>true</em>"</strong>.</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the attribute, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="O:ZennoLab.CommandCenter.Tab.FindElementByAttribute">FindElementByAttribute</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by attribute
                HtmlElement he = tab.FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", "random");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by attribute
                $he = $tab-&gt;FindElementByAttribute("input:checkbox", "fulltag", "input:checkbox", "text", "random");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">
            <summary>Searches for all HTML elements by the attribute.</summary>
            <param name="tags">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tags for search the elements. If the number of tags is more than one then they are through ";".</para>
            </param>
            <param name="attrName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute name.</para>
            </param>
            <param name="attrValue">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The attribute value.</para>
            </param>
            <param name="searchKind">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>This parameter can take the following values​​: "text", "notext" and "regexp".</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the attribute, if found; otherwise, the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property is
            "0".</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by attribute
                HtmlElementCollection heCol = tab.FindElementsByAttribute("input:checkbox", "fulltag", "input:checkbox", "text");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by attribute
                $heCol = $tab-&gt;FindElementsByAttribute("input:checkbox", "fulltag", "input:checkbox", "text");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">
            <summary>Searches for an HTML element by the ID, and returns the first occurrence.</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The ID that defines search condition of HTML elements.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the ID, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by id
                HtmlElement he = tab.FindElementById("main");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by id
                $he = $tab-&gt;FindElementById("main");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">
            <summary>Searches for all HTML elements by the ID.</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The ID that defines search condition of HTML elements.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the ID, if found; otherwise, the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property is "0".</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by id
                HtmlElementCollection heCol = tab.FindElementsById("overview");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by id
                $heCol = $tab-&gt;FindElementsById("overview");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">
            <summary>Searches for an HTML element by the name, and returns the first occurrence.</summary>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name that defines search condition of HTML elements.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the name, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by name
                HtmlElement he = tab.FindElementByName("text");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab.-&gt;sNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by name
                $he = $tab-&gt;FindElementByName("text");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">
            <summary>Searches for all HTML elements by the name.</summary>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name that defines search condition of HTML elements.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the name, if found; otherwise, the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property is
            "0".</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by name
                HtmlElementCollection heCol = tab.FindElementsByName("text");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by name
                $heCol = $tab-&gt;FindElementsByName("text");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">
            <summary>Searches for an HTML element by the tag, and returns the first occurrence.</summary>
            <param name="tag">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tag for search the element.</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The item number in a collection of matching items.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the name, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by tag
                HtmlElement he = tab.FindElementByTag("input:radio", 0);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by tag
                $he = $tab-&gt;FindElementByTag("input:radio", 0);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">
            <summary>Searches for all HTML elements by the tags.</summary>
            <param name="tags">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Tags for search the elements. If the number of tags is more than one then they are through ";".</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the tags, if found; otherwise, the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property is
            "0".</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by tag
                HtmlElementCollection heCol1 = tab.FindElementsByTags("input:checkbox");
                
                // find elements by tags
                HtmlElementCollection heCol2 = tab.FindElementsByTags("input:checkbox;input:radio");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by tag
                $heCol1 = $tab-&gt;FindElementsByTags("input:checkbox");
                
                // find elements by tags
                $heCol2 = $tab-&gt;FindElementsByTags("input:checkbox;input:radio");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">
            <summary>Searches for an HTML element by the xpath, and returns the first occurrence.</summary>
            <param name="xpath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>XPath for search the element.</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The item number in a collection of matching items.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the name, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find element by xpath
                HtmlElement he = tab.FindElementByXPath("/html/body/div/div[@class]", 0);
                if (he.IsVoid) return -2;
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find element by xpath
                $he = $tab-&gt;FindElementByXPath("/html/body/div/div[@class]", 0);
                if ($he-&gt;IsVoid) return -2;
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">
            <summary>Searches for all HTML elements by the xpath.</summary>
            <param name="xpath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>XPath for search the elements.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the tags, if found; otherwise, the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property is
            "0".</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // find elements by xpath
                HtmlElementCollection heCol1 = tab.FindElementsByXPath("/html/body/div/div[@class]");
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // find elements by xpath
                $heCol1 = $tab-&gt;FindElementsByXPath("/html/body/div/div[@class]");
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">
            <summary>Searches for an HTML element by the css selector, and returns the first occurrence.</summary>
            <param name="selector">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Css selector for search the element.</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The item number in a collection of matching items. Default value is 0.</para>
            </param>
            <remarks>If html element was not found then this method returns the <see cref="T:ZennoLab.CommandCenter.HtmlElement">HtmlElement</see> object in which <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsVoid">IsVoid</see> or <see cref="P:ZennoLab.CommandCenter.HtmlElement.IsNull">IsNill</see>
            property is "<em>true</em>".</remarks>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the name, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">QuerySelectorAll Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag</see> method.
            <code title="Example" description="" lang="C#">
            // clear cookie
            instance.ClearCookie();
            
            // go to lessons.zennolab.com
            Tab tab = instance.MainTab;
            if ((tab.IsVoid) || (tab.IsNull)) return -1;
            if (tab.IsBusy) tab.WaitDownloading();
            tab.Navigate("lessons.zennolab.com", "");
            if (tab.IsBusy) tab.WaitDownloading();
            
            // find html element by css selector
            var he = tab.QuerySelector(".inputs", 1);
            if (he.IsVoid) return -2;
            he.Click();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.QuerySelectorAll(System.String)">
            <summary>Searches for all HTML elements by the css selector.</summary>
            <param name="selector">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Css selector for search the elements.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElementCollection">Zennolab.CommandCenter.HtmlElementCollection</see></para>
            	<para>The collection of elements that matches the conditions defined by the tags, if found; otherwise, the <see cref="P:ZennoLab.CommandCenter.HtmlElementCollection.Count">Count</see> property is
            "0".</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,string[])">GetHtmlElement Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.QuerySelector(System.String,System.Int32)">QuerySelector Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags</see> method.
            <code title="Example" description="" lang="C#">
            // clear cookies
            instance.ClearCookie();
            
            // go to lessons.zennolab.com
            Tab tab = instance.MainTab;
            if ((tab.IsVoid) || (tab.IsNull)) return -1;
            if (tab.IsBusy) tab.WaitDownloading();
            tab.Navigate("lessons.zennolab.com");
            if (tab.IsBusy) tab.WaitDownloading();
            
            // find elements by css selector
            var collection = tab.QuerySelectorAll(".inputs");
            return collection.Count;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.GetSourceText(System.String)">
            <summary>Returns the text of the page that the user sees.</summary>
            <param name="encoding">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The encoding type.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The text of a page that the user sees.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.SetSourceText(System.String)">SetSourceText Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.GetSourceText(System.String)">GetSourceText</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get source text
                string text = tab.GetSourceText("utf-8");
                
                // go to lessons.zennolab.com
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // set source text
                tab.SetSourceText(text);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get source text
                $text = $tab-&gt;GetSourceText("utf-8");
                
                // go to lessons.zennolab.com
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // set source text
                $tab-&gt;SetSourceText($text);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.SetSourceText(System.String)">
            <summary>Sets the text of the page that the user sees.</summary>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The new text of the page.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetSourceText(System.String)">GetSourceText Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.SetSourceText(System.String)">SetSourceText</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // get source text
                string text = tab.GetSourceText("utf-8");
                
                // go to lessons.zennolab.com
                tab.Navigate("lessons.zennolab.com");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // set source text
                tab.SetSourceText(text);
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // get source text
                $text = $tab-&gt;GetSourceText("utf-8");
                
                // go to lessons.zennolab.com
                $tab-&gt;Navigate("lessons.zennolab.com");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // set source text
                $tab-&gt;SetSourceText($text);
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.GetCharset">
            <summary>Gets the charset of the tab.</summary>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of charset of the tab.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.SetCharset(System.String)">
            <summary>Sets the charset to the tab.</summary>
            <param name="value">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Name of the charset. Empty string sets charset to default.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.Close">
            <summary>Closes the tab.</summary>
            <remarks>The <see cref="M:ZennoLab.CommandCenter.Tab.Close">Close</see> method closes the tab if it is not only one. In the instance window always exists at least one tab.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.Stop">Stop Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.Close">Close</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance, IZennoPosterProjectModel project)
            {
                // clear cookie
                instance.ClearCookie();
                
                // go to lessons.zennolab.com
                Tab tab = instance.ActiveTab;
                if ((tab.IsVoid) || (tab.IsNull)) return -1;
                if (tab.IsBusy) tab.WaitDownloading();
                tab.Navigate("lessons.zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // go to zennolab.com
                tab = instance.NewTab("New");
                tab.Navigate("zennolab.com", "");
                if (tab.IsBusy) tab.WaitDownloading();
                
                // close the tab
                tab.Close();
                
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance, $project)
            {
                // clear cookie
                $instance-&gt;ClearCookie();
                
                // go to lessons.zennolab.com
                $tab = $instance-&gt;ActiveTab;
                if (($tab-&gt;IsVoid) || ($tab-&gt;IsNull)) return -1;
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                $tab-&gt;Navigate("lessons.zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // go to zennolab.com
                $tab = $instance-&gt;NewTab("New");
                $tab-&gt;Navigate("zennolab.com", "");
                if ($tab-&gt;IsBusy) $tab-&gt;WaitDownloading();
                
                // close the tab
                $tab-&gt;Close();
                
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.GetNull">
            <summary> Возвращает пустой таб </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.GetHtmlElement(System.String,System.String,System.String,System.String[])">
            <summary> Searches the html element by specified parameters. </summary>
            <param name="doc">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.string.aspx">System.String</see></para>
            	<para>The document address.</para>
            </param>
            <param name="form">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.string.aspx">System.String</see></para>
            	<para>The form number.</para>
            </param>
            <param name="tag">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.string.aspx">System.String</see></para>
            	<para>The tag of the html element.</para>
            </param>
            <param name="parameters">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.string.aspx">System.String</see>[]</para>
            	<para>The search parameters.</para>
            </param>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The first element that matches the conditions defined by the parameters, if found; otherwise, the result is void.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByAttribute(System.String,System.String,System.String,System.String,System.Int32)">FindElementByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementById(System.String)">FindElementById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByName(System.String)">FindElementByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByTag(System.String,System.Int32)">FindElementByTag Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementByXPath(System.String,System.Int32)">FindElementByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByAttribute(System.String,System.String,System.String,System.String)">FindElementsByAttribute Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsById(System.String)">FindElementsById Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByName(System.String)">FindElementsByName Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByTags(System.String)">FindElementsByTags Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FindElementsByXPath(System.String)">FindElementsByXPath Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FindImage(System.String,System.Drawing.Rectangle[],System.Int32)">
            <summary> Searches the specified image in specified rectangle area. </summary>
            <param name="imageHash">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.string.aspx">System.String</see></para>
            	<para>The hash of the image. The image represented as a string.</para>
            </param>
            <param name="rectangles">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.drawing.rectangle.aspx">System.Drawing.Rectangle</see></para>
            	<para>The rectangular area of search.</para>
            </param>
            <param name="confidenceInterval">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.int32.aspx">System.Int32</see></para>
            	<para>The exact matches. This parameter defines percent of similarities for search of the necessary parts. It should be in range <em>from <strong>95</strong>
            to <strong>99</strong></em> including border.</para>
            </param>
            <remarks>The use of the method requires a fairly large amount of computer resources. Not recommended to use it to search for a larger image.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.string.aspx">System.String</see></para>
            	<para>The rectangular area in the coordinates of the page. The string has the follow format: <strong><em>"Left, Top, Width, Height"</em></strong>.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.RiseEvent(System.String,System.Drawing.Rectangle,System.String)">
            <summary>Rise specified event in the rectangular area.</summary>
            <param name="eventName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The event name.</para>
            </param>
            <param name="rectangle">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.drawing.rectangle.aspx">System.Drawing.Rectangle</see></para>
            	<para>The rectangular area.</para>
            </param>
            <param name="clickType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The mouse button type. It's can have a value "Left", "Right", "DoubleClick".</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetElementFromPoint(System.Int32,System.Int32)">GetElementFromPoint Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.RiseEvent(System.String,System.Drawing.Rectangle,System.String)">RiseEvent</see> method.
            <code title="Example" description="" lang="C#">
            // clear cookie
            instance.ClearCookie();
             
            // navigate to lessons.zennolab.com
            instance.ActiveTab.Navigate("lessons.zennolab.com", String.Empty);
             
            // wait downloading
            if (instance.ActiveTab.IsBusy) instance.ActiveTab.WaitDownloading();
             
            // create rectangular area
            Rectangle rec = new Rectangle(600, 95, 120, 25);
             
            // rise event
            instance.ActiveTab.RiseEvent("click", rec, "Left");
             
            // wait downloading
            instance.ActiveTab.WaitDownloading();</code><code title="Example2" description="" lang="PHP">
            // clear cookie
            $instance-&gt;ClearCookie();
             
            // navigate to lessons.zennolab.com
            $instance-&gt;ActiveTab-&gt;Navigate("lessons.zennolab.com", "");
             
            // wait downloading
            if ($instance-&gt;ActiveTab-&gt;IsBusy) $instance-&gt;ActiveTab-&gt;WaitDownloading();
             
            // create rectangular area
            $rec = new Rectangle(600, 95, 120, 25);
             
            // rise event
            $instance-&gt;ActiveTab-&gt;RiseEvent("click", rec, "Left");
             
            // wait downloading
            $instance-&gt;ActiveTab-&gt;WaitDownloading();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.DragDrop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Performs the drag and drop events inside tab.</summary>
            <param name="fromX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate inside tab's area for rise drag event.</para>
            </param>
            <param name="fromY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate inside tab's area for rise drag event.</para>
            </param>
            <param name="toX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate inside tab's area for rise drop event.</para>
            </param>
            <param name="toY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate inside tab's area for rise drop event.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.RiseEvent(System.String,System.Drawing.Rectangle,System.String)">RiseEvent Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseClick(System.Int32,System.Int32,System.String,System.String)">MouseClick Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseMove">MouseMove Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseWheel(System.Int32,System.Int32)">MouseWheel Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.DragDrop(System.Int32,System.Int32,System.Int32,System.Int32)">DragDrop</see> method.
            <code title="Example" description="" lang="C#">
            // rise drag and drop events in specific positions
            instance.ActiveTab.DragDrop(100, 100, 200, 200);</code><code title="Example2" description="" lang="PHP">
            // rise drag and drop events in specific positions
            $instance-&gt;ActiveTab-&gt;DragDrop(100, 100, 200, 200);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.MouseMove(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <overloads>Performs the mouse move event in specified coordinates.</overloads>
            <summary>Performs the mouse move event from point to point in specified coordinates inside the current tab.</summary>
            <param name="fromX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate of the start point inside tab's area for rise mouse move event.</para>
            </param>
            <param name="fromY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate of the start point inside tab's area for rise mouse move event.</para>
            </param>
            <param name="toX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate of the end point inside tab's area for rise mouse move event.</para>
            </param>
            <param name="toY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate of the end point inside tab's area for rise mouse move event.</para>
            </param>
            <param name="useClick">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if necessary performs the left mouse click in the end point: otherwise false. Default value is <strong>false</strong>.</para>
            </param>
            <param name="considerScroll">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if necessary to consider scroll position of the browser; otherwise false. Default value is <strong>false</strong>.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.DragDrop(System.Int32,System.Int32,System.Int32,System.Int32)">DragDrop Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseClick(System.Int32,System.Int32,System.String,System.String)">MouseClick Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseWheel(System.Int32,System.Int32)">MouseWheel Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="O:ZennoLab.CommandCenter.Tab.MouseMove">MouseMove</see> method.
            <code title="Example" description="" lang="C#">
            // performs the mouse moving from [200, 250] to [500, 250]
            instance.ActiveTab.MouseMove(200, 250, 500, 250, false, false);
            // and next
            // preforms the mouse moving from [500, 250] to [500, 125]
            // and rise left mouse click in the last location
            instance.ActiveTab.MouseMove(500, 250, 500, 125, true, false);</code><code title="Example2" description="" lang="PHP">
            // performs the mouse moving from [200, 250] to [500, 250]
            $instance-&gt;ActiveTab-&gt;MouseMove(200, 250, 500, 250, false, false);
            // and next
            // preforms the mouse moving from [500, 250] to [500, 125]
            // and rise left mouse click in the last location
            $instance-&gt;ActiveTab-&gt;MouseMove(500, 250, 500, 125, true, false);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.MouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <overloads>Performs the mouse move event in specified coordinates.</overloads>
            <summary>Performs the mouse move event in specified point inside the current tab.</summary>
            <param name="toX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate inside tab's area for rise mouse move event.</para>
            </param>
            <param name="toY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate inside tab's area for rise mouse move event.</para>
            </param>
            <param name="useClick">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if necessary performs the left mouse click in the end point: otherwise false. Default value is <strong>false</strong>.</para>
            </param>
            <param name="considerScroll">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if necessary to consider scroll position of the browser; otherwise false. Default value is <strong>false</strong>.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.DragDrop(System.Int32,System.Int32,System.Int32,System.Int32)">DragDrop Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseClick(System.Int32,System.Int32,System.String,System.String)">MouseClick Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseWheel(System.Int32,System.Int32)">MouseWheel Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="O:ZennoLab.CommandCenter.Tab.MouseMove">MouseMove</see> method.
            <code title="Example" description="" lang="C#">
            // performs the mouse moving to [500, 250]
            instance.ActiveTab.MouseMove(500, 250, false, false);
            // and next
            // preforms the mouse moving to [500, 125]
            // and rise left mouse click in this location
            instance.ActiveTab.MouseMove(500, 125, true, false);</code><code title="Example2" description="" lang="PHP">
            // performs the mouse moving to [500, 250]
            $instance-&gt;ActiveTab-&gt;MouseMove(500, 250, false, false);
            // and next
            // preforms the mouse moving to [500, 125]
            // and rise left mouse click in this location
            $instance-&gt;ActiveTab-&gt;MouseMove(500, 125, true, false);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.MouseMove(System.Drawing.Point[],System.Int32[],System.Boolean,System.Boolean)">
            <overloads>Performs the mouse move event in specified coordinates.</overloads>
            <summary>Performs the mouse move event in specified array of the coordinates with delay between all moving.</summary>
            <param name="useClick">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if necessary performs the left mouse click in the end point: otherwise false. Default value is <strong>false</strong>.</para>
            </param>
            <param name="points">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.drawing.point.aspx">System.Drawing.Point</see>[]</para>
            	<para>An array of the points where are performed the mouse move event.</para>
            </param>
            <param name="delay">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>[]</para>
            	<para>An array of the delay in milliseconds for each position.</para>
            </param>
            <param name="considerScroll">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if necessary to consider scroll position of the browser; otherwise false. Default value is <strong>false</strong>.</para>
            </param>
            <remarks>The parameter <em><strong>delay</strong></em> can be <strong><em>null</em></strong> or <strong><em>empty</em></strong>. In this case the method uses the
            default value of the delay. Also the length of <strong><em>delay</em></strong> and <strong><em>points</em></strong> can be different.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.DragDrop(System.Int32,System.Int32,System.Int32,System.Int32)">DragDrop Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseClick(System.Int32,System.Int32,System.String,System.String)">MouseClick Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseWheel(System.Int32,System.Int32)">MouseWheel Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="O:ZennoLab.CommandCenter.Tab.MouseMove">MouseMove</see> method.
            <code title="Example" description="" lang="C#">
            // create points
            Point[] points = new Point[10] 
            {
                new Point(100, 100),
                new Point(110, 110),
                new Point(120, 120),
                new Point(130, 130),
                new Point(140, 140),
                new Point(150, 150),
                new Point(160, 160),
                new Point(170, 170),
                new Point(180, 180),
                new Point(190, 190)
            };
             
            // create delay
            int[] delay = new int[10] { 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 };
             
            // perform the mouve move events
            instance.ActiveTab.MouseMove(points, delay, false, false);</code><code title="Example2" description="" lang="PHP">
            // create points
            $points = array( 
                new System\Drawing\Point(100, 100),
                new System\Drawing\Point(110, 110),
                new System\Drawing\Point(120, 120),
                new System\Drawing\Point(130, 130),
                new System\Drawing\Point(140, 140),
                new System\Drawing\Point(150, 150),
                new System\Drawing\Point(160, 160),
                new System\Drawing\Point(170, 170),
                new System\Drawing\Point(180, 180),
                new System\Drawing\Point(190, 190)
            );
             
            // create delay
            $delay = array(100, 100, 100, 100, 100, 100, 100, 100, 100, 100);
             
            // perform the mouve move events
            $instance-&gt;ActiveTab-&gt;MouseMove($points, $delay, false, false);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.MouseClick(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>Performs the mouse click event in specified point inside the current tab.</summary>
            <param name="x">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate inside tab's area for rise mouse click event.</para>
            </param>
            <param name="y">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate inside tab's area for rise mouse click event.</para>
            </param>
            <param name="button">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.Int32</see></para>
            	<para>The mouse button. It can be <strong><em>"left"</em></strong>, <strong><em>"right"</em></strong> or <em><strong>"middle"</strong></em>.</para>
            </param>
            <param name="mouseEvent">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.Int32</see></para>
            	<para>The mouse button event. It can be <strong><em>"click"</em></strong>, <strong><em>"down"</em></strong> or <em><strong>"up"</strong></em>.</para>
            </param>
            <param name="considerScroll">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if necessary to consider scroll position of the browser; otherwise false. Default value is <strong>false</strong>.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.DragDrop(System.Int32,System.Int32,System.Int32,System.Int32)">DragDrop Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseMove">MouseMove Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseWheel(System.Int32,System.Int32)">MouseWheel Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.MouseClick(System.Int32,System.Int32,System.String,System.String,System.Boolean)">MouseClick</see> method.
            <code title="Example" description="" lang="C#">
            // perform left mouse click in location [100,200]
            instance.ActiveTab.MouseClick(100, 200, "left", "click");
            // perform right mouse down in location [100,200]
            instance.ActiveTab.MouseClick(150, 300, "right", "down");</code><code title="Example2" description="" lang="PHP">
            // perform left mouse click in location [100,200]
            $instance-&gt;ActiveTab-&gt;MouseClick(100, 200, "left", "click");
            // perform right mouse down in location [100,200]
            $instance-&gt;ActiveTab-&gt;MouseClick(150, 300, "right", "down");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.MouseWheel(System.Int32,System.Int32,System.Double,System.Double,System.Boolean)">
            <summary>Performs the mouse wheel event in specified point inside the current tab.</summary>
            <param name="x">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate inside tab's area for rise mouse wheel event.</para>
            </param>
            <param name="y">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate inside tab's area for rise mouse wheel event.</para>
            </param>
            <param name="deltaX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The size of step in pixel along the x axis.</para>
            </param>
            <param name="deltaY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The size of step in pixel along the y axis.</para>
            </param>
            <param name="considerScroll">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if necessary to consider scroll position of the browser; otherwise false. Default value is <strong>false</strong>.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.DragDrop(System.Int32,System.Int32,System.Int32,System.Int32)">DragDrop Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseMove">MouseMove Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseClick(System.Int32,System.Int32,System.String,System.String)">MouseClick Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.MouseWheel(System.Int32,System.Int32,System.Double,System.Double,System.Boolean)">MouseWheel</see> method.
            <code title="Example" description="" lang="C#">
            // perform mouse wheel
            instance.ActiveTab.MouseWheel(100, 200, 0, 100, false);</code><code title="Example2" description="" lang="PHP">
            // perform mouse wheel
            $instance-&gt;ActiveTab-&gt;MouseWheel(100, 200, 0, 100, false);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseGetCopyOfOptions">
            <summary>Returns a copy of MouseEmulationParameters that are being used in the current tab of browser instance.
            Mind that this is only a copy, and changes to it will not affect anything unless you call SetTouchEmulationParameters</summary>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.FullEmulation.MouseEmulationParameters">ZennoLab.CommandCenter.FullEmulation.MouseEmulationParameters</see></para>
            	<para>A copy of MouseEmulationParameters that are being used in the current tab of browser instance.</para>
            </returns>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetOptions(ZennoLab.CommandCenter.FullEmulation.MouseEmulationParameters)">
            <summary>
            Sets touch emulation parameters of the current browser instance to the value passed in it.
            </summary>
            <param name="value">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters">ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters</see></para>
            	<para>TouchEmulationParameters that are to be used in the current browser instance.</para>
            </param>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetOptions(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>Configure full mouse emulation. 
            These parameters set to default value every navigate.     
            </summary>
            <param name="pause">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Pause in milliseconds between every mouse point generation.</para>
            </param>
            <param name="pauseVariance">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Pause variance (pause +- pauseVariance).</para>
            </param>
            <param name="pointDistanse">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The pitch in a straight line between points.</para>
            </param>
            <param name="rectangleBasePointPartWidth">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.single.aspx">System.Single</see></para>
                <para>Part of the rectangle for start point by the width</para>
            </param>
            <param name="rectangleBasePointPartHeight">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.single.aspx">System.Single</see></para>
                <para>Part of the rectangle for start point by the height</para>
            </param>
            <param name="rectangleEndPointPartWidth">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.single.aspx">System.Single</see></para>
                <para>Part of the rectangle for end point by the width</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetScrollBorder(int,int)">Configure border for scrolling</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMove(int,int)">Mouse move to coordinates method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveToHtmlElement(HtmlElement)">Mouse move to element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveAboveHtmlElement(HtmlElement)">Mouse move above element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(int,int)">Performs the mouse wheel event</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseClick(string,string)">Mouse click event method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(int,int,int,int)">Mouse drag and drop event for specified coordinates</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(HtmlElement,HtmlElement)">Mouse drag and drop event for specified elements</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseCurrentPosition">Current mouse position</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="o:FullEmulationMouseSetOptions">FullEmulationMouseSetOptions</see> method.
            <code title="Example" description="" lang="C#">
            instance.ActiveTab.FullEmulationMouseSetOptions(50);
            instance.ActiveTab.FullEmulationMouseMove(50,500);</code><code title="Example2" description="" lang="PHP">
            $instance-&gt;ActiveTab-&gt;FullEmulationMouseSetOptions(50, 5, 5);
            $instance-&gt;ActiveTab-&gt;FullEmulationMouseMove(500, 500);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetScrollBorder(System.Int32,System.Int32)">
            <summary>Configure border for scrolling. 
            These parameters set to default value every navigate.     
            </summary>
            <param name="scrollX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>X scroll border size.</para>
            </param>
            <param name="scrollY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Y scroll border size.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetOptions(int,int,int,float,float,float)">Set mouse full emulation options method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMove(int,int)">Mouse move to coordinates method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveToHtmlElement(HtmlElement)">Mouse move to element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveAboveHtmlElement(HtmlElement)">Mouse move above element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(int,int)">Performs the mouse wheel event</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseClick(string,string)">Mouse click event method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(int,int,int,int)">Mouse drag and drop event for specified coordinates</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(HtmlElement,HtmlElement)">Mouse drag and drop event for specified elements</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseCurrentPosition">Current mouse position</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="o:FullEmulationMouseSetOptions">FullEmulationMouseSetOptions</see> method.
            <code title="Example" description="" lang="C#">
            instance.ActiveTab.FullEmulationMouseSetScrollBorder(0, 0);
            instance.ActiveTab.FullEmulationMouseMove(50,500);</code><code title="Example2" description="" lang="PHP">
            $instance-&gt;ActiveTab-&gt;FullEmulationMouseSetScrollBorder(0, 0);
            $instance-&gt;ActiveTab-&gt;FullEmulationMouseMove(500, 500);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMove(System.Int32,System.Int32)">
            <summary>Performs the mouse move event to specified coordinates.</summary>
            <param name="toX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate inside tab's area for move mouse.</para>
            </param>
            <param name="toY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate inside tab's area for move mouse.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetOptions(int,int,int,float,float,float)">Set mouse full emulation options method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetScrollBorder(int,int)">Configure border for scrolling</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveToHtmlElement(HtmlElement)">Mouse move to element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveAboveHtmlElement(HtmlElement)">Mouse move above element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(int,int)">Performs the mouse wheel event</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseClick(string,string)">Mouse click event method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(int,int,int,int)">Mouse drag and drop event for specified coordinates</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(HtmlElement,HtmlElement)">Mouse drag and drop event for specified elements</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseCurrentPosition">Current mouse position</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMove(System.Int32,System.Int32)">FullEmulationMouseMove</see> method.
            <code title="Example" description="" lang="C#">
            instance.ActiveTab.FullEmulationMouseMove(500,500);
            instance.ActiveTab.FullEmulationMouseMove(50,500);
            instance.ActiveTab.FullEmulationMouseMove(250,200);</code><code title="Example2" description="" lang="PHP">
            $instance-&gt;ActiveTab-&gt;FullEmulationMouseMove(500, 500);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveToHtmlElement(ZennoLab.CommandCenter.HtmlElement)">
            <summary>Performs the mouse move event to specified element.</summary>
            <param name="he">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The HTMLElement for move mouse.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetOptions(int,int,int,float,float,float)">Set mouse full emulation options method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetScrollBorder(int,int)">Configure border for scrolling</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMove(int,int)">Mouse move to coordinates method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveAboveHtmlElement(HtmlElement)">Mouse move above element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(int,int)">Performs the mouse wheel event</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseClick(string,string)">Mouse click event method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(int,int,int,int)">Mouse drag and drop event for specified coordinates</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(HtmlElement,HtmlElement)">Mouse drag and drop event for specified elements</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseCurrentPosition">Current mouse position</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="o:FullEmulationMouseMoveToHtmlElement">FullEmulationMouseMoveToHtmlElement</see> method.
            <code title="Example" description="" lang="C#">
            HtmlElement he = instance.ActiveTab.GetDocumentByAddress("0").FindElementByAttribute("div", "class", "main", "regexp", 0);
            if (he.IsVoid) return -1;
            instance.ActiveTab.FullEmulationMouseMoveToHtmlElement(he);</code><code title="Example2" description="" lang="PHP">
            $he = $instance-&gt;ActiveTab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("div", "class", "main", "regexp", 0);
            if (!he-&gt;IsVoid) 
              $instance-&gt;ActiveTab-&gt;FullEmulationMouseMoveToHtmlElement(he);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveAboveHtmlElement(ZennoLab.CommandCenter.HtmlElement,System.Int32)">
            <summary>Performs the mouse move event above specified element.</summary>
            <param name="he">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The HTMLElement for move mouse.</para>
            </param>
            <param name="sizeOfType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The size of type.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetOptions(int,int,int,float,float,float)">Set mouse full emulation options method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetScrollBorder(int,int)">Configure border for scrolling</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMove(int,int)">Mouse move to coordinates method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveToHtmlElement(HtmlElement)">Mouse move to element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(int,int)">Performs the mouse wheel event</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseClick(string,string)">Mouse click event method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(int,int,int,int)">Mouse drag and drop event for specified coordinates</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(HtmlElement,HtmlElement)">Mouse drag and drop event for specified elements</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseCurrentPosition">Current mouse position</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="o:FullEmulationMouseMoveAboveHtmlElement">FullEmulationMouseMoveAboveHtmlElement</see> method.
            <code title="Example" description="" lang="C#">
            HtmlElement he = instance.ActiveTab.GetDocumentByAddress("0").FindElementByAttribute("div", "class", "main", "regexp", 0);
            if (he.IsVoid) return -1;
            instance.ActiveTab.FullEmulationMouseMoveAboveHtmlElement(he, 40);</code><code title="Example2" description="" lang="PHP">
            $he = $instance-&gt;ActiveTab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("div", "class", "main", "regexp", 0);
            if (!he-&gt;IsVoid) 
              $instance-&gt;ActiveTab-&gt;FullEmulationMouseMoveAboveHtmlElement(he, 40);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(System.Int32,System.Int32)">
            <summary>Performs the mouse wheel event.</summary>
            <param name="deltaX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The size of step in pixel along the x axis.</para>
            </param>
            <param name="deltaY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The size of step in pixel along the y axis.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetOptions(int,int,int,float,float,float)">Set mouse full emulation options method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetScrollBorder(int,int)">Configure border for scrolling</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMove(int,int)">Mouse move to coordinates method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveToHtmlElement(HtmlElement)">Mouse move to element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveAboveHtmlElement(HtmlElement)">Mouse move above element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseClick(string,string)">Mouse click event method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(int,int,int,int)">Mouse drag and drop event for specified coordinates</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(HtmlElement,HtmlElement)">Mouse drag and drop event for specified elements</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseCurrentPosition">Current mouse position</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(System.Int32,System.Int32)">FullEmulationMouseWheel</see> method.
            <code title="Example" description="" lang="C#">
            instance.ActiveTab.FullEmulationMouseWheel(0,100);</code><code title="Example2" description="" lang="PHP">
            $instance-&gt;ActiveTab-&gt;FullEmulationMouseWheel(0, 100);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(ZennoLab.CommandCenter.HtmlElement,System.Int32,System.Int32)">
             <summary>
             Scroll page to specified element. If element
             </summary>
             <param name="he">
             	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
             <para>Target HTML element</para>
             </param>
             <param name="topOffsetToElementCenter">
             	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
             <para>
             Target he`s middle point offset from top viewport border, % of viewport height
             </para>
             </param>
             <param name="leftOffsetToElementCenter">
             	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
             <para>Target he`s middle point offset from left viewport border, % of viewport width
             </para>
             </param>
              /// <example>
             The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(ZennoLab.CommandCenter.HtmlElement,System.Int32,System.Int32)">FullEmulationMouseWheel</see> method.
             <code title="Example" description="" lang="C#">
            HtmlElement he = instance.ActiveTab.QuerySelector("#target");
            instance.ActiveTab.FullEmulationMouseWheel(he,30); 
             </code>
             <code title="Example2" description="" lang="PHP">
             $he = instance-&gt;ActiveTab-&gt;QuerySelector("#target");
             $instance-&gt;ActiveTab-&gt;FullEmulationMouseWheel($he, 30);
             </code>
             </example>
             <requirements>
             	<para>
             		<strong>Target Platforms:</strong>
             		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
             </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseClick(System.String,System.String)">
            <summary>Performs the mouse click event in current point inside the current tab.</summary>
            <param name="button">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The mouse button. It can be <strong><em>"left"</em></strong>, <strong><em>"right"</em></strong> or <em><strong>"middle"</strong></em>.</para>
            </param>
            <param name="mouseEvent">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The mouse button event. It can be <strong><em>"click"</em></strong>, <strong><em>"down"</em></strong> or <em><strong>"up"</strong></em>.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetOptions(int,int,int,float,float,float)">Set mouse full emulation options method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetScrollBorder(int,int)">Configure border for scrolling</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMove(int,int)">Mouse move to coordinates method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveToHtmlElement(HtmlElement)">Mouse move to element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveAboveHtmlElement(HtmlElement)">Mouse move above element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(int,int)">Performs the mouse wheel event</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(int,int,int,int)">Mouse drag and drop event for specified coordinates</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(HtmlElement,HtmlElement)">Mouse drag and drop event for specified elements</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseCurrentPosition">Current mouse position</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseClick(System.String,System.String)">FullEmulationMouseClick</see> method.
            <code title="Example" description="" lang="C#">
            instance.ActiveTab.FullEmulationMouseMove(500,500);
            instance.ActiveTab.FullEmulationMouseClick("left", "click");</code><code title="Example2" description="" lang="PHP">
            $instance-&gt;ActiveTab-&gt;FullEmulationMouseMove(500,500);
            $instance-&gt;ActiveTab-&gt;MouseClick("left", "click");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Performs the mouse drag and drop event from specified coordinates to specified coordinates.</summary>
            <param name="fromX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate inside tab's area for start drag.</para>
            </param>
            <param name="fromY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate inside tab's area for start drag.</para>
            </param>
            <param name="toX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate inside tab's area for drop.</para>
            </param>
            <param name="toY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate inside tab's area for drop.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetOptions(int,int,int,float,float,float)">Set mouse full emulation options method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetScrollBorder(int,int)">Configure border for scrolling</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMove(int,int)">Mouse move to coordinates method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveToHtmlElement(HtmlElement)">Mouse move to element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveAboveHtmlElement(HtmlElement)">Mouse move above element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(int,int)">Performs the mouse wheel event</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseClick(string,string)">Mouse click event method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(HtmlElement,HtmlElement)">Mouse drag and drop event for specified elements</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseCurrentPosition">Current mouse position</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(System.Int32,System.Int32,System.Int32,System.Int32)">FullEmulationMouseDragAndDrop</see> method.
            <code title="Example" description="" lang="C#">
            instance.ActiveTab.FullEmulationMouseDragAndDrop(100,100, 500, 500);</code><code title="Example2" description="" lang="PHP">
            $instance-&gt;ActiveTab-&gt;FullEmulationMouseDragAndDrop(100,100, 500, 500);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(ZennoLab.CommandCenter.HtmlElement,ZennoLab.CommandCenter.HtmlElement)">
            <summary>Performs the mouse drag and drop from specified element to specified element.</summary>
            <param name="fromHe">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The HTMLElement for start drag.</para>
            </param>
            <param name="toHe">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.HtmlElement</see></para>
            	<para>The HTMLElement for drop.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetOptions(int,int,int,float,float,float)">Set mouse full emulation options method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetScrollBorder(int,int)">Configure border for scrolling</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMove(int,int)">Mouse move to coordinates method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveToHtmlElement(HtmlElement)">Mouse move to element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveAboveHtmlElement(HtmlElement)">Mouse move above element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(int,int)">Performs the mouse wheel event</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseClick(string,string)">Mouse click event method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(int,int,int,int)">Mouse drag and drop event for specified coordinates</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseCurrentPosition">Current mouse position</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(ZennoLab.CommandCenter.HtmlElement,ZennoLab.CommandCenter.HtmlElement)">FullEmulationMouseDragAndDrop</see> method.
            <code title="Example" description="" lang="C#">
            HtmlElement fromHe = instance.ActiveTab.GetDocumentByAddress("0").FindElementByAttribute("div", "class", "main", "regexp", 0); 
            if (fromHe.IsVoid) return -1;
            HtmlElement toHe = instance.ActiveTab.GetDocumentByAddress("0").FindElementByAttribute("div", "class", "main", "regexp", 1);
            if (to.IsVoid) return -1;
            instance.ActiveTab.FullEmulationMouseDragAndDrop(fromHe, toHe);</code><code title="Example2" description="" lang="PHP">
            $fromHe = $instance-&gt;ActiveTab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("div", "class", "main", "regexp", 0);
            if (fromHe-&gt;IsVoid) return;
            $toHe = $instance-&gt;ActiveTab-&gt;GetDocumentByAddress("0")-&gt;FindElementByAttribute("div", "class", "main", "regexp", 1);
            if ($toHe-&gt;IsVoid) return;
            $instance-&gt;ActiveTab-&gt;FullEmulationMouseDragAndDrop(fromHe, toHe);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.FullEmulationMouseCurrentPosition">
            <summary>Gets or sets the current full emulation mouse coordinates.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.drawing.point.aspx">System.Drawing.Point</see>[]</para>
            	<para>The coordinates of mouse.</para>
            </value>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetOptions(int,int,int,float,float,float)">Set mouse full emulation options method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetScrollBorder(int,int)">Configure border for scrolling</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMove(int,int)">Mouse move to coordinates method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveToHtmlElement(HtmlElement)">Mouse move to element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveAboveHtmlElement(HtmlElement)">Mouse move above element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(int,int)">Performs the mouse wheel event</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseClick(string,string)">Mouse click event method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(int,int,int,int)">Mouse drag and drop event for specified coordinates</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(HtmlElement,HtmlElement)">Mouse drag and drop event for specified elements</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.FullEmulationMouseCurrentPosition">FullEmulationMouseCurrentPosition</see> property.
            <code title="Example" description="" lang="C#">
            return instance.ActiveTab.FullEmulationMouseCurrentPosition;</code><code title="Example2" description="" lang="PHP">
            return instance-&gt;ActiveTab-&gt;FullEmulationMouseCurrentPosition;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.FullEmulationMouseTabPosition">
            <summary>Gets or sets the current full emulation mouse coordinates in the window.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.drawing.point.aspx">System.Drawing.Point</see>[]</para>
            	<para>The coordinates of mouse.</para>
            </value>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetOptions(int,int,int,float,float,float)">Set mouse full emulation options method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseSetScrollBorder(int,int)">Configure border for scrolling</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMove(int,int)">Mouse move to coordinates method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveToHtmlElement(HtmlElement)">Mouse move to element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseMoveAboveHtmlElement(HtmlElement)">Mouse move above element method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseWheel(int,int)">Performs the mouse wheel event</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseClick(string,string)">Mouse click event method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(int,int,int,int)">Mouse drag and drop event for specified coordinates</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.FullEmulationMouseDragAndDrop(HtmlElement,HtmlElement)">Mouse drag and drop event for specified elements</seealso>
            <example>
            The following code example uses the <see cref="P:ZennoLab.CommandCenter.Tab.FullEmulationMouseTabPosition">FullEmulationMouseTabPosition</see> property.
            <code title="Example" description="" lang="C#">
            return instance.ActiveTab.FullEmulationMouseTabPosition;</code><code title="Example2" description="" lang="PHP">
            return instance-&gt;ActiveTab-&gt;FullEmulationMouseTabPosition;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.KeyEvent(System.String,System.String,System.String)">
            <summary>Performs the key event inside the current tab.</summary>
            <param name="key">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The key for event. For addtional characters you can use enumeration members from https://msdn.microsoft.com/en-us/library/system.windows.input.key.aspx</para>
            </param>
            <param name="keyEvent">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of key event. It can be "<strong>down</strong>", "<strong>press</strong>" or "<strong>up</strong>".</para>
            </param>
            <param name="keyModifer">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The key modifier for key event. It can be "<strong>alt</strong>", "<strong>ctrl</strong>", "<strong>shift</strong>", or empty string (not use the
            key modifier).</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseClick(System.Int32,System.Int32,System.String,System.String)">MouseClick Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseMove">MouseMove Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.MouseWheel(System.Int32,System.Int32)">MouseWheel Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.KeyEvent(System.String,System.String,System.String)">KeyEvent</see> method.
            <code title="Example" description="" lang="C#">
            // performs the press key event with modifier
            instance.ActiveTab.KeyEvent("V", "press", "ctrl");
            instance.ActiveTab.KeyEvent("Tab", "press", "alt");
            instance.ActiveTab.KeyEvent("S", "press", "shift");
            instance.ActiveTab.KeyEvent("V", "down", ""); // push
            instance.ActiveTab.KeyEvent("V", "up", ""); // release</code><code title="Example2" description="" lang="PHP">
            // performs the press key event with modifier
            $instance-&gt;ActiveTab-&gt;KeyEvent("A", "press", "ctrl");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.SetActive">
            <summary>Sets the current tab as active.</summary>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.SetActive">SetActive</see> method.
            <code title="Example" description="" lang="C#">
            // set tab as active
            instance.ActiveTab.SetActive();</code><code title="Example2" description="" lang="PHP">
            // set tab as active
            $instance-&gt;ActiveTab-&gt;SetActive();</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.NavigateErrorDetected">
            <summary>Gets information about the error detected in the performance last navigation.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true if error detected in the performance last navigation; otherwise, false.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.GetPagePreview">
            <summary>Gets preview of page.</summary>
            <remarks>The preview size does not exceed 2000 * 2000 pixels.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The image as a string value.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Tab.GetSourceText(System.String)">GetSourceText Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.GetPagePreview">GetPagePreview</see> method
            <code title="Example" description="" lang="C#">
            // get page preview
            var preview = instance.ActiveTab.GetPagePreview();
            var ms = new System.IO.MemoryStream(Convert.FromBase64String(preview));
            var bmp = new Bitmap(ms);
            ms.Close();
            // save to image
            bmp.Save("example.jpg", System.Drawing.Imaging.ImageFormat.Jpeg);</code><code title="Example2" description="" lang="PHP">
            // get page preview
            $preview = $instance-&gt;ActiveTab-&gt;GetPagePreview();
            $ms = new System\IO\MemoryStream(System\Convert::FromBase64String($preview));
            $bmp = new System\Drawing\Bitmap($ms);
            $ms-&gt;Close();
            // save to image
            $bmp-&gt;Save("example.jpg", System\Drawing\Imaging\ImageFormat::Jpeg);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.DropFile(System.String,System.Int32,System.Int32)">
            <summary>Drop file to the page.</summary>
            <param name="filepath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to file.</para>
            </param>
            <param name="x">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The x coordinate of the drop point inside tab's area for rise dragdrop move event.</para>
            </param>
            <param name="y">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The y coordinate of the drop point inside tab's area for rise dragdrop move event.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.SubscribePageLoading(System.String,System.String,System.String,System.Boolean)">
            <summary>Subscribe javascript code to DOMContentLoaded event on page.</summary>
            <param name="script">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The javascipt code.</para>
            </param>
            <param name="loadType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Type of code usage (onetime, domain, alltime).</para>
            </param>
            <param name="domain">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The domain for subscribe if choosen loadType is "domain". Optioal field.</para>
            </param>
            <param name="useAllTabs">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if needs evaluate script in all tabs, works only for "domain" and "alltime" types; otherwise false. Default value is <strong>false</strong>.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.SubscribeWindowCreating(System.String,System.String,System.String,System.Boolean)">
            <summary>Subscribe javascript code to DOMWindowCreated event on page.</summary>
            <param name="script">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The javascipt code.</para>
            </param>
            <param name="loadType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Type of code usage (onetime, domain, alltime).</para>
            </param>
            <param name="domain">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The domain for subscribe if choosen loadType is "domain". Optioal field.</para>
            </param>
            <param name="useAllTabs">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if needs evaluate script in all tabs, works only for "domain" and "alltime" types; otherwise false. Default value is <strong>false</strong>.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.PageScale">
            <summary>Gets or sets a value in percent that indicates scale of page.</summary>
            <value>
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The scale value in percent.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.GetTraffic(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>Returns collection of requests for current tab.</summary>
            <param name="urlFilters">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of regexs to filter traffic by url contents. If traffic item match any of regexs, it will put to result.</para>
            </param>
            <param name="headerFilters">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of regexs to filter traffic by request or response header contents. If traffic item match any of regexs, it will put to result.</para>
            </param>
            <param name="bodyFilters">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of regexs to filter traffic by request or response body contents. If traffic item match any of regexs, it will put to result.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
            	<para>Collection of requests.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.GetTraffic(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">GetTraffic</see> method.
            <code title="Example" description="" lang="C#">
            instance.SetContentPolicy("BlockList", new []{ "mc.yandex.ru" }, null);
            instance.UseTrafficMonitoring = false;
            Tab tab = instance.ActiveTab;
            // navigate to url
            instance.ClearCache();
            instance.ClearCookie();
            tab.Navigate("http://lessons.zennolab.com");
            if (tab.IsBusy) tab.WaitDownloading();
            // get list of requests
            var traffic = instance.ActiveTab.GetTraffic();
            // print count of items, it will be more than 0
            project.SendInfoToLog("First count of traffic elements = " + traffic.Count());
            // get some data from items and log it
            foreach(var t in traffic)
                project.SendInfoToLog(string.Format("Url: {0}\r\n Method: {1}\r\n Result: {2}", t.Url, t.Method, t.ResultCode));
            // get list of request second time
            traffic = instance.ActiveTab.GetTraffic();
            // print count of items, it will be 0, because the previous method call removed the old items
            project.SendInfoToLog("Second count of traffic elements = " + traffic.Count());
                        
            // navigate to url
            instance.ClearCache();
            instance.ClearCookie();
            tab.Navigate("http://lessons.zennolab.com");
            if (tab.IsBusy) tab.WaitDownloading();
            // get reqest by urls filter collection
            traffic = instance.ActiveTab.GetTraffic(new [] {"http://lessons.zennolab.com/main.css"});
            project.SendInfoToLog("Request by urls filter:");
            foreach(var t in traffic)
                project.SendInfoToLog("Url: " + t.Url);
            // result collection must has one item
            if (traffic.Count(t => !t.IsBlocked) != 1)
                throw new Exception("Traffic collection count != 1");
            // this item must match the filter collection
            if (traffic.First().Url != "http://lessons.zennolab.com/main.css")
                throw new Exception("Traffic item url != http://lessons.zennolab.com/main.css");
            // RequestHeaders and other additional fields must be null while instance.UseTrafficMonitoring == false 
            if (!string.IsNullOrWhiteSpace(traffic.First().RequestHeaders))
                throw new Exception("Instance.UseTrafficMonitoring (false) is not working, value = " + instance.UseTrafficMonitoring);
            // get list of request second time, second result list must be empty
            traffic = instance.ActiveTab.GetTraffic().ToList();
            if (traffic.Count(t => !t.IsBlocked) != 0)
            	throw new Exception("Second traffic collection count != 0");
            
            // enable additional traffic monitoring
            instance.UseTrafficMonitoring = true;
                        
            // navigate to url
            instance.ClearCache();
            instance.ClearCookie();
            tab.Navigate("http://lessons.zennolab.com");
            if (tab.IsBusy) tab.WaitDownloading();
            // get list of requests by urls filter collection and headers filter collection
            traffic = instance.ActiveTab.GetTraffic(new [] {"http://lessons.zennolab.com/main.css"}, new [] { "image/png" });
            project.SendInfoToLog("Request by urls filter collection and headers filter collection:");
            foreach(var t in traffic)
                project.SendInfoToLog("Url: " + t.Url);
            // result collection must has two item, first match url regex, second match header regex
            if (traffic.Count(t => !t.IsBlocked) != 2)
                throw new Exception("Traffic collection count != 2");
            // all items must contains RequestHeaders and other fields, because instance.UseTrafficMonitoring == true 
            if (traffic.Any(t => string.IsNullOrWhiteSpace(t.RequestHeaders)))
                throw new Exception("Instance.UseTrafficMonitoring (true) is not working, value = " + instance.UseTrafficMonitoring);
            // get list of request second time, second result list must be empty
            traffic = instance.ActiveTab.GetTraffic().ToList();
            if (traffic.Count(t => !t.IsBlocked) != 0)
                throw new Exception("Second traffic collection count != 0");
            
            // navigate to url
            instance.ClearCache();
            instance.ClearCookie();
            tab.Navigate("http://lessons.zennolab.com");
            if (tab.IsBusy) tab.WaitDownloading();
            // get list of requests by urls, headers and body filter collection
            traffic = instance.ActiveTab.GetTraffic(new [] {"http://lessons.zennolab.com/main.css"}, new [] { "image/png" }, new [] { "DOCTYPE HTML PUBLIC" });
            project.SendInfoToLog("Request by urls filter collection and headers filter collection:");
            foreach(var t in traffic)
                project.SendInfoToLog("Url: " + t.Url);
            // result collection must has three item
            if (traffic.Count(t => !t.IsBlocked) != 3)
                throw new Exception("Traffic collection count != 3");
            // all items must contains RequestHeaders and other fields, because instance.UseTrafficMonitoring == true 
            if (traffic.Any(t => string.IsNullOrWhiteSpace(t.RequestHeaders)))
               throw new Exception("Instance.UseTrafficMonitoring (true) is not working, value = " + instance.UseTrafficMonitoring);
            // get list of request second time, second result list must be empty
            traffic = instance.ActiveTab.GetTraffic().ToList();
            if (traffic.Count(t => !t.IsBlocked) != 0)
                throw new Exception("Second traffic collection count != 0");
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.GetTraffic(ZennoLab.CommandCenter.Classes.GetTrafficSettings)">
             <summary>Returns collection of requests for current tab, accepting extended parameters..</summary>
             <param name="settings">
             	<para>Type: <see cref="T:ZennoLab.CommandCenter.Classes.GetTrafficSettings">ZennoLab.CommandCenter.Classes.GetTrafficSettings</see></para>
             	<para>Object with various settings for GetTraffic.</para>
             </param>
             <returns>
             	<para>Type: <see cref="!:https://msdn.microsoft.com/ru-ru/library/system.collections.ienumerable.aspx">System.Collections.IEnumerable</see></para>
             	<para>Collection of requests.</para>
             </returns>
             <seealso cref="M:ZennoLab.CommandCenter.Instance.UseTrafficMonitoring">UseTrafficMonitoring Method</seealso>
             <example>
             The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.Tab.GetTraffic(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">GetTraffic</see> method.
             <code title="Example" description="" lang="C#">
             instance.SetContentPolicy("BlockList", new[] { "mc.yandex.ru" }, null);
             instance.UseTrafficMonitoring = true;
             
             Tab tab = instance.ActiveTab;
             // navigate to url
             instance.ClearCache();
             instance.ClearCookie();
             tab.Navigate("https://lessons.zennolab.com");
             if (tab.IsBusy)
                 tab.WaitDownloading();
             ZennoLab.CommandCenter.Classes.GetTrafficSettings getTrafficSettings = new ZennoLab.CommandCenter.Classes.GetTrafficSettings();
             getTrafficSettings.UrlFilters = new[] { "https://lessons.zennolab.com/main.css" };
             getTrafficSettings.HeaderFilters = new[] { "image/png" };
             getTrafficSettings.BodyFilters = new[] { "DOCTYPE HTML PUBLIC" };
             getTrafficSettings.GatherAllTraffic = true;
             // get list of requests by urls, headers and body filter collection
             var traffic = instance.ActiveTab.GetTraffic(getTrafficSettings);
             project.SendInfoToLog("Request by urls filter collection and headers filter collection:");
            
             foreach (var t in traffic)
             	project.SendInfoToLog("Url: " + t.Url);                    
             // result collection must has three item
             if (traffic.Count(t => !t.IsBlocked) != 3)
             	throw new Exception("Traffic collection count != 3");
             // all items must contains RequestHeaders and other fields, because instance.UseTrafficMonitoring == true 
             if (traffic.Any(t => string.IsNullOrWhiteSpace(t.RequestHeaders)))
             	throw new Exception("Instance.UseTrafficMonitoring (true) is not working, value = " + instance.UseTrafficMonitoring);
            
             // get list of request second time, second call must not be empty
             traffic = instance.ActiveTab.GetTraffic(getTrafficSettings);
             if (traffic.Count() == 0)
             	throw new Exception("Second traffic collection count == 0");
            
             // set GatherAllTraffic is false
             getTrafficSettings.GatherAllTraffic = false;
             traffic = instance.ActiveTab.GetTraffic(getTrafficSettings);
             // get list of request third time, third call must be empty, because GatherAllTraffic = false
             if (traffic.Count() != 0)
             	throw new Exception("Third traffic collection count != 0");
             </code></example>
             <requirements>
             	<para>
             		<strong>Target Platforms:</strong>
             		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
             </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.Tab.Touch">
            <summary>
            Contains methods simulating work with touch screen
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.Tab.TouchSimulation">
            <summary>
            Contains methods simulating work with touch screen
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.TouchStart(ZennoLab.CommandCenter.TouchEvents.TouchData)">
            <summary>Indicates that the screen has been touched.</summary>
            <remarks>
            Touches begin with one TouchStart action
            followed by zero or more TouchMoved actions and finally one
            TouchEnded or TouchCancelled action. Events not respecting this
            order will be ignored.
            </remarks>
            <param name="touchData">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.TouchEvents.TouchData">ZennoLab.CommandCenter.TouchEvents.TouchData</see></para>
            	<para>Data about touch event.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.TouchEnd(ZennoLab.CommandCenter.TouchEvents.TouchData)">
            <summary>Indicates that the screen no longer is touched.</summary>
            <remarks>
            Touches begin with one TouchStart action
            followed by zero or more TouchMoved actions and finally one
            TouchEnded or TouchCancelled action. Events not respecting this
            order will be ignored.
            </remarks>
            <param name="touchData">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.TouchEvents.TouchData">ZennoLab.CommandCenter.TouchEvents.TouchData</see></para>
            	<para>Data about touch event.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.TouchMove(ZennoLab.CommandCenter.TouchEvents.TouchData)">
            <summary>Indicates the swipe.</summary>
            <remarks>
            Touches begin with one TouchStart action
            followed by zero or more TouchMoved actions and finally one
            TouchEnded or TouchCancelled action. Events not respecting this
            order will be ignored.
            </remarks>
            <param name="touchData">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.TouchEvents.TouchData">ZennoLab.CommandCenter.TouchEvents.TouchData</see></para>
            	<para>Data about touch event.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.TouchCancel(ZennoLab.CommandCenter.TouchEvents.TouchData)">
            <summary>Indicates that touch event must be cancelled.</summary>
            <remarks>
            Touches begin with one TouchStart action
            followed by zero or more TouchMoved actions and finally one
            TouchEnded or TouchCancelled action. Events not respecting this
            order will be ignored.
            </remarks>
            <param name="touchData">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.TouchEvents.TouchData">ZennoLab.CommandCenter.TouchEvents.TouchData</see></para>
            	<para>Data about touch event.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.LongTouch(ZennoLab.CommandCenter.HtmlElement)">
            <summary>Swipes into the view of the HtmlElement and long-touches it.</summary>
            <param name="he">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">ZennoLab.CommandCenter.HtmlElement</see></para>
            	<para>HtmlElement that is to be touched.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.LongTouch(System.Int32,System.Int32)">
            <summary>Long-touches the point that is already in the view.</summary>
            <param name="x">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>X coordinate of a point relative to the top side of the view.</para>
            </param>
            <param name="y">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Y coordinate of a point relative to the top side of the view.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.Touch(ZennoLab.CommandCenter.HtmlElement)">
            <summary>Swipes into the view of the HtmlElement and touches it.</summary>
            <param name="he">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">ZennoLab.CommandCenter.HtmlElement</see></para>
            	<para>HtmlElement that is to be touched.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.Touch(ZennoLab.CommandCenter.HtmlElement,System.Int32)">
            <summary>Swipes into the view of the HtmlElement and touches it.</summary>
            <param name="he">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">ZennoLab.CommandCenter.HtmlElement</see></para>
            	<para>HtmlElement that is to be touched.</para>
            </param>
            <param name="pauseMs">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Pause in milliseconds between TouchStart and TouchEnd. 0 means short touch and -1 means long touch (from TouchEmulationParameters).</para>
            </param>
            <seealso cref="T:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters"> TouchEmulationParameters</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.Touch(System.Int32,System.Int32)">
            <summary>Touches the point that is already in the view.</summary>
            <param name="x">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>X coordinate of a point relative to the top side of the view.</para>
            </param>
            <param name="y">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Y coordinate of a point relative to the top side of the view.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.Touch(System.Int32,System.Int32,System.Int32)">
            <summary>Touches the point that is already in the view.</summary>
            <param name="x">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>X coordinate of a point relative to the top side of the view.</para>
            </param>
            <param name="y">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Y coordinate of a point relative to the top side of the view.</para>
            </param>
            <param name="pauseMs">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Pause between TouchStart and TouchEnd. 0 means short touch and -1 means long touch (from TouchEmulationParameters).</para>
            </param>
            <seealso cref="T:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters"> TouchEmulationParameters</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.SwipeIntoView(ZennoLab.CommandCenter.HtmlElement)">
            <summary>Swipes into the view of the HtmlElement.</summary>
            <param name="he">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">ZennoLab.CommandCenter.HtmlElement</see></para>
            	<para>HtmlElement that needs to get displayed.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.SwipeIntoViewUsingAbsoluteCoords(System.Int32,System.Int32)">
            <summary>Swipes into the view of a point.
            Mind that coordinates for this method are relative to the top of a window.
            Do not call this method using coordinates, relative to the top of a view!
            </summary>
            <param name="x">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>X coordinate of a point relative to the top of a window</para>
            </param>
            <param name="y">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Y coordinate of a point relative to the top of a window.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.SwipeBetween(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Performs a swipe between two points. Both points must be in a view, and the coordinates must be relative to the top of a view.</summary>
            <param name="fromX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>X coordinate of a starting point relative to the top side of the view.</para>
            </param>
            <param name="fromY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Y coordinate of a starting point relative to the top side of the view.</para>
            </param>
            <param name="toX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>X coordinate of an ending point relative to the top side of the view.</para>
            </param>
            <param name="toY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Y coordinate of an ending point relative to the top side of the view.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.SwipeBetween(System.Int32,System.Int32,ZennoLab.CommandCenter.HtmlElement)">
            <summary>Performs a swipe from a point to the HtmlElement.
            Both of them must be in a view, and the coordinates of a point must be relative to the top of a view.</summary>
            <param name="fromX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>X coordinate of a starting point relative to the top side of the view.</para>
            </param>
            <param name="fromY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Y coordinate of a starting point relative to the top side of the view.</para>
            </param>
            <param name="heTo">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">ZennoLab.CommandCenter.HtmlElement</see></para>
            	<para>HtmlElement that works as a ending point for the swipe.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.SwipeBetween(ZennoLab.CommandCenter.HtmlElement,System.Int32,System.Int32)">
            <summary>Performs a swipe from the HtmlElement to the point.
            Both of them must be in a view, and the coordinates of a point must be relative to the top of a view.</summary>
            <param name="heFrom">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">ZennoLab.CommandCenter.HtmlElement</see></para>
            	<para>HtmlElement that works as a starting point for the swipe.</para>
            </param>
            <param name="toX">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>X coordinate of a final point relative to the top side of the view.</para>
            </param>
            <param name="toY">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Y coordinate of a final point relative to the top side of the view.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.SwipeSimple(ZennoLab.CommandCenter.TouchEvents.SwipeDirection)">
            <summary>Performs a simple swipe in one of four predefined directions.</summary>
            <param name="swipeDirection">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.TouchEvents.SwipeDirection">ZennoLab.CommandCenter.TouchEvents.SwipeDirection</see></para>
            	<para>Direction of a swipe</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.GetCopyOfTouchEmulationParameters">
            <summary>Returns a copy of TouchEmulationParameters that are being used in the current browser instance.
            Mind that this is only a copy, and changes to it will not affect anything unless you call SetTouchEmulationParameters</summary>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters">ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters</see></para>
            	<para>A copy of TouchEmulationParameters that are being used in the current browser instance.</para>
            </returns>
        </member>
        <member name="M:ZennoLab.CommandCenter.Tab.TouchSimulation.SetTouchEmulationParameters(ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters)">
            <summary>
            Sets touch emulation parameters of the current browser instance to the value passed in it.
            </summary>
            <param name="value">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters">ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters</see></para>
            	<para>TouchEmulationParameters that are to be used in the current browser instance.</para>
            </param>
        </member>
        <member name="T:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters">
            <summary>
            Parameters for touch emulations (curvature, speed, pauses, randomization).
            Touches are performed using Bezier Curve. https://en.wikipedia.org/wiki/Bezier_curve
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.MinCurvature">
            <summary>
            Minimum curvature of swipes. Acceptable range: [0, 1]. Must be less than or equal to MaxCurvature.
            Actual curvature of each swipe will be a random number between MinCurvature and MaxCurvature
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.MaxCurvature">
            <summary>
            Maximum curvature of swipes. Acceptable range: [0, 1]. Must be greater than or equal to MinCurvature.
            Actual curvature of each swipe will be a random number between MinCurvature and MaxCurvature
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.MinCurvePeakShift">
            <summary>
            First boundary for curve peak of swipe. Acceptable range: [0, 1]. Must be less than or equal to MaxCurvePeakShift.
            Actual peak shift for each swipe will be a random number between MinCurvePeakShift and MaxCurvePeakShift
            Actual peak shift works as follows:
            0 means that peak will be near starting point;
            1 means that peak will be near ending point;
            0.5f means that peak will be directly in the middle of starting and ending points;
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.MaxCurvePeakShift">
            <summary>
            Second boundary for curve peak of swipe. Acceptable range: [0, 1]. Must be greater than or equal to MinCurvePeakShift.
            Actual peak shift for each swipe will be a random number between MinCurvePeakShift and MaxCurvePeakShift
            Actual peak shift works as follows:
            0 means that peak will be near starting point;
            1 means that peak will be near ending point;
            0.5f means that peak will be directly in the middle of starting and ending points;
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.MinStep">
            <summary>
            Minimum distance for steps while following Bezier curve. Acceptable range: [1, 60]. Must be less than or equal to MaxStep.
            Distance of steps is directly proportional to the speed of swipes.
            Actual distance for steps of each swipe will start at MinStep. It will get multiplied by Acceleration each step, but will not exceed MaxStep
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.MaxStep">
            <summary>
            Minimum distance for steps while following Bezier curve. Acceptable range: [1, 60]. Must be greater than or equal to MinStep.
            Distance of steps is directly proportional to the speed of swipes.
            Actual distance for steps of each swipe will start at MinStep. It will get multiplied by Acceleration each step, but will not exceed MaxStep
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.Acceleration">
            <summary>
            Acceleration for the speed of swipe. Acceptable range: [1, 2].
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.PauseBetweenStepsMs">
            <summary>
            Pause between steps while following Bezier curve in milliseconds. Acceptable range: [1, 200].
            Should correspond to the refresh rate of a touch-screen of an emulated device.
            Value is inversely proportional to the speed of swipes.
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.PauseBetweenSwipesMs">
            <summary>
            Pause at the end of each swipe in milliseconds. Acceptable range: [200, 2000].
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.SwipeFractionX">
            <summary>
            Fraction of a screen width that is used for swipe-scrolls. Acceptable range: [0.2, 0.8].
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.SwipeFractionY">
            <summary>
            Fraction of a screen height that is used for swipe-scrolls. Acceptable range: [0.2, 0.8].
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.SwipeDeviationX">
            <summary>
            Fraction of a screen width that is used for randomizing starting and final positions for swipe-scrolls. Acceptable range: [0, 0.2]
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.SwipeDeviationY">
            <summary>
            Fraction of a screen height that is used for randomizing starting and final positions for swipe-scrolls. Acceptable range: [0, 0.2]
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.RightThumbProbability">
            <summary>
            Probability that the curve will look like it was created by right thumb (and not the left one). Acceptable range: [0, 1]
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.RectangleBasePointPartH">
            <summary>
            Fraction of HtmlElement's height that is used when generating touch-event. Acceptable range: [0, 1]
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.RectangleBasePointPartW">
            <summary>
            Fraction of HtmlElement's width that is used when generating touch-event. Acceptable range: [0, 1]
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.TouchLengthMs">
            <summary>
            Default touch length in milliseconds. Acceptable range: [16, 3000]
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.LongTouchLengthMs">
            <summary>
            Default long touch length in milliseconds. Acceptable range: [160, 5000]
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.PauseAfterTouchMs">
            <summary>
            Pause after touch in milliseconds. Acceptable range: [50, 2000]
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.MinSwipeShiftTowardsThumb">
            <summary>
            After the starting and the final point of swipe-curve are computed, they are also shifted in the direction of a thumb that performs the swipe.
            This value controls the minimum fraction of a screen for such shift.
            Acceptable range: [0, 0.4]. Must be less than or equal to MaxSwipeShiftTowardsThumb.
            Actual shift of each swipe will be a random number between MinSwipeShiftTowardsThumb and MaxSwipeShiftTowardsThumb
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.TouchEmulationParameters.MaxSwipeShiftTowardsThumb">
            <summary>
            After the starting and the final point of swipe-curve are computed, they are also shifted in the direction of a thumb that performs the swipe.
            This value controls the maximum fraction of a screen for such shift.
            Acceptable range: [0, 0.4]. Must be greater than or equal to MinSwipeShiftTowardsThumb.
            Actual shift of each swipe will be a random number between MinSwipeShiftTowardsThumb and MaxSwipeShiftTowardsThumb
            </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.TouchEvents.TouchData">
            <summary>
            Representation of a single touch event.
            Touches begin with one TouchStart action
            followed by zero or more TouchMoved actions and finally one
            TouchEnded or TouchCancelled action. Events not respecting this
            order will be ignored.
            </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.TouchEvents.TouchData.#ctor">
            <summary>
            Default constructor for NewtonsoftJson. DO NOT DELETE
            </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.TouchEvents.TouchData.#ctor(System.Single,System.Single,System.Int32,System.Single,System.Single,System.Single,System.Single,ZennoLab.CommandCenter.TouchEvents.EventFlags,ZennoLab.CommandCenter.TouchEvents.PointerType)">
            <summary>
            TouchData constructor
            </summary>
            <param name="x">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.single.aspx">System.Single</see></para>
            	<para>X coordinate relative to the left side of the view.</para>
            </param>
            <param name="y">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.single.aspx">System.Single</see></para>
            	<para>Y coordinate relative to the top side of the view.</para>
            </param>
            <param name="id">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Id of a touch point. Must be unique per touch, can be any number except -1. Note that a maximum of 16 concurrent touches will be tracked; touches beyond that will be ignored.</para>
            </param>
            <param name="radiusX">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.single.aspx">System.Single</see></para>
            	<para>X radius in pixels. Set to 0 if not applicable.</para>
            </param>
            <param name="radiusY">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.single.aspx">System.Single</see></para>
            	<para>Y radius in pixels. Set to 0 if not applicable.</para>
            </param>
            <param name="rotationAngle">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.single.aspx">System.Single</see></para>
            	<para>Rotation angle in radians. Set to 0 if not applicable.</para>
            </param>
            <param name="force">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.single.aspx">System.Single</see></para>
            	<para>The normalized pressure of the pointer input in the range of [0,1]. Set to 0 if not applicable.</para>
            </param>
            <param name="modifiers">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.TouchEvents.EventFlags">ZennoLab.CommandCenter.TouchEvents.EventFlags</see></para>
            	<para>Bit flags describing any pressed modifier keys. Use "bitwise or" operator when more than one modifier is pressed.</para>
            </param>
            <param name="pointerType">
            	<para>Type: <see cref="P:ZennoLab.CommandCenter.TouchEvents.TouchData.PointerType">ZennoLab.CommandCenter.TouchEvents.PointerType</see></para>
            	<para>The device type that caused the event.</para>
            </param>
        </member>
        <member name="M:ZennoLab.CommandCenter.TouchEvents.TouchData.#ctor(System.Single,System.Single)">
            <summary>
            TouchData constructor
            </summary>
            <param name="x">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.single.aspx">System.Single</see></para>
            	<para>X coordinate relative to the left side of the view.</para>
            </param>
            <param name="y">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.single.aspx">System.Single</see></para>
            	<para>Y coordinate relative to the left side of the view.</para>
            </param>
        </member>
        <member name="P:ZennoLab.CommandCenter.TouchEvents.TouchData.X">
            <summary>
            X coordinate
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.TouchEvents.TouchData.Y">
            <summary>
            Y coordinate
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.TouchEvents.TouchData.RadiusX">
            <summary>
            Radius of touch by X axis
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.TouchEvents.TouchData.RadiusY">
            <summary>
            Radius of touch by Y axis
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.TouchEvents.TouchData.RotationAngle">
            <summary>
            Rotation angle of touch
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.TouchEvents.TouchData.Force">
            <summary>
            Force of touch
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.TouchEvents.TouchData.Id">
            <summary>
            Id of touch
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.TouchEvents.TouchData.Modifiers">
            <summary>
            Bit flags describing any pressed modifier keys. Use "bitwise or" operator when more than one modifier is pressed.
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.TouchEvents.TouchData.PointerType">
            <summary>
            The device type that caused the event.
            </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.TouchEvents.EventFlags">
            <summary>Bit flags describing any pressed modifier keys. Use "bitwise or" operator when more than one modifier is pressed.</summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.TouchEvents.EventFlags.CommandDown">
            <summary>Mac OS-X command key.</summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.TouchEvents.PointerType">
            <summary>The device type that caused the event.</summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.TouchEvents.SwipeDirection">
            <summary>
            Direction of swipe for SwipeSimple method
            </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.CommandTransfer">
            <summary>           
            
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.CommandTransfer._connectionDiagnosticThread">
            <summary> Поток проверки состояния инстанса </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.CommandTransfer._failsMaxScore">
            <summary> Максимальное количество попыток (секунд, т.к. одна попытка в одну секунду) для проталкивания задания через пайп </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.CommandTransfer._instanceMaxScore">
            <summary> Максимальное количество попыток (секунд * 5, т.к. одна попытка в пять секунд для постера) для события о том, что инстанс поломался </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.CommandTransfer.IsProjectMakerInstnaceInitialized">
            <summary>
            Флаг указывающий что ProjectMaker закрыл инстанс
            Костыль, чтобы нормально работал перезапуск инстанса в PM
            TODO написать красивое взаимодействие DebugInstance с CommandTransfer
            </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.CommandTransfer.Start">
            <summary>
            Метод запуска потока проверки инстанса
            вынес его из статического конструктора, потому что в PM он срабатывал раньше чем появлялся инстанс, т.е. запускать его нужно после запуска инстанса
            Так же добавил свойство IsProjectMakerInstnaceInitialized, как костыль для перезапуска инстанса в PM.
            TODO подумать где лучше вызывать метод
            </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.CommandTransfer.#ctor(System.Int32)">
            <summary> </summary>
            <param name="port"></param>
        </member>
        <member name="M:ZennoLab.CommandCenter.CommandTransfer.CreateMessage(System.String,System.String,System.String[],System.String[])">
            <summary> </summary>
            <param name="address"></param>
            <param name="commandName"></param>
            <param name="simplParameters"></param>
            <param name="vectorParameter"></param>
            <returns></returns>             
        </member>
        <member name="M:ZennoLab.CommandCenter.CommandTransfer.CreateMessage(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="address"></param>
            <param name="commandName"></param>
            <param name="singlParameterName"></param>
            <param name="singlParameter"></param>
            <returns></returns>
        </member>
        <member name="M:ZennoLab.CommandCenter.CommandTransfer.CreateMessage(System.String,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="address"></param>
            <param name="commandName"></param>
            <param name="singlParameters"></param>
            <returns></returns>
        </member>
        <member name="M:ZennoLab.CommandCenter.CommandTransfer.SendMessageWait(System.String,System.Boolean@)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="errorDetected"></param>
            <returns></returns> 
        </member>
        <member name="M:ZennoLab.CommandCenter.CommandTransfer.SendMessageLongWait(System.String,System.Int32,System.Boolean@,System.String@)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="timeOut"></param>
            <param name="errorDetected"></param>
            <param name="errorMessages"></param>
            <returns></returns>
        </member>
        <member name="M:ZennoLab.CommandCenter.CommandTransfer.SendMessageLongWait2(System.String,System.Int32,System.Guid,System.Boolean@)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="timeOut"></param>
            <param name="id"></param>
            <param name="errorDetected"></param>
            <returns></returns>
        </member>
        <member name="T:ZennoLab.CommandCenter.CommandTransferEvent">
            <summary>
            Событие CommandTransfer
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.CommandTransferEvent.Message">
            <summary>
            Сообщение
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.CommandTransferEvent.ErrorMessage">
            <summary> 
            Сообщение ошибки
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.CommandTransferEvent.Timeout">
            <summary>
            Таймаут операции
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.CommandTransferEvent.WaitTickCount">
            <summary>
            Таймаут OperationTimeout разделеный на 15мс
            </summary>
        </member>
        <member name="P:ZennoLab.CommandCenter.CommandTransferEvent.Result">
            <summary>
            Результат
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.CommandTransferEvent.ErrorDetected">
            <summary>
            Ошибка выполнения
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.CommandTransferEvent.Handled">
            <summary>
            Обработано ли событие
            </summary>
        </member>
        <member name="F:ZennoLab.CommandCenter.Transfer.MemoryObjectParams._tasks">
            <summary> Список выполняемых заданий (для которых не вызывался Performed)</summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.TransferParams.Performed(System.String,System.Int32,System.Guid)">
            <summary>
            
            </summary>
            <param name="result"></param>
            <param name="port"></param>
            <param name="id"></param>
        </member>
        <member name="M:ZennoLab.CommandCenter.TransferParams.ResponseTasksIds(System.Collections.Generic.IList{System.Guid},System.Int32)">
            <summary>
            
            </summary>
            <param name="ids"></param>
            <param name="port"></param>
        </member>
        <member name="M:ZennoLab.CommandCenter.WcfPipeParams.ZennoLab#CommunicationInterfaces#IDuplexMessageServiceCallback#Performed(System.String,System.Int32,System.Guid)">
            <summary>
            
            </summary>
            <param name="result"></param>
            <param name="port"></param>
            <param name="id"></param>
        </member>
        <member name="M:ZennoLab.CommandCenter.WcfPipeParams.ZennoLab#CommunicationInterfaces#IDuplexMessageServiceCallback#ResponseTasksIds(System.Collections.Generic.IList{System.Guid},System.Int32)">
            <summary>
            
            </summary>
            <param name="ids"></param>
            <param name="port"></param>
        </member>
        <member name="T:ZennoLab.CommandCenter.ZennoPoster">
            <summary>Represents a set methods to recognize captcha, working with mail, instances, etc.</summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.ZennoPoster.HTTP">
            <summary>
            HTTP class provides several methods to make HyperText Transfer protocol requests 
            </summary>
        </member>
        <member name="T:ZennoLab.CommandCenter.ZennoPoster.HTTP.RequestAbortedException">
            <summary>
            The exception represents the situation when the request was aborted by timeout but the answer might contain incomplete data.
            The data was stored in an object of the exception. You can try to get it.
            </summary>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.HTTP.RequestAbortedException.TryGetStringData(System.String@)">
            <summary>
            Tries to get data as a string, if the original request must return the string.
            </summary>
            <param name="data">The variable for storing a result.</param>
            <returns>true - if the data exists</returns>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.HTTP.RequestAbortedException.TryGetByteData(System.Byte[]@)">
            <summary>
            Tries to get data as a byte array, if the original request must return the byte array.
            </summary>
            <param name="data">The variable for storing a result.</param>
            <returns>true - if the data exists</returns>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.HTTP.Request(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod,System.String,System.String,System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean,System.Boolean,ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer,System.Boolean)">
            <summary>Executes http request of given method</summary>
            <param name="method">
                <para>
                    Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod">ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod</see>
                </para>
            	<para>HTTP Method to execute (can take values GET, POST, PUT, HEAD, DELETE, OPTIONS, TRACE, PATCH)</para>
            </param>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Target address of request.</para>
            </param>
            <param name="content">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Specifies the content of POST, PUT or PATCH request.</para>
                <para>For other methods empty string can be used. </para>
            </param>
            <param name="contentPostingType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
                <para>MIME type for</para>
            	<para>Value will be set to "Content-Type" header for POST, PUT and PATCH methods.</para>
                <para>Default value is "application/x-www-form-urlencoded"</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string (for example: "socks5://login:pass@8.5.6.7:8080").</para>
            </param>
            <param name="Encoding">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Specifies the encoding to use.</para>
                <para>Default value is "UTF-8"</para>
            </param>
            <param name="respType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType">ZennoLab.InterfacesLibrary.Enums.Http.ResponceType</see></para>
            	<para>Specifies what parts of response should be returned (can take values: BodyOnly, HeaderOnly, HeaderAndBody,File,FileAndHeaders).</para>
            </param>
            <param name="Timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Request timeout in milliseconds.</para>
                <para>Default values is 30000 (30 seconds).</para>
            </param>
            <param name="Cookies">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Cookies for request.</para>
            </param>
            <param name="UserAgent">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Specifies value for "User-Agent" header.</para>
                <para></para>
            </param>
            <param name="UseRedirect">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if redirects should be followed.</para>
                <para>Default value is true</para>
            </param>
            <param name="MaxRedirectCount">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Maximum count of redirects.</para>
                <para>Default values is 5</para>
            </param>
            <param name="AdditionalHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>[]</para>
            	<para>Array of additional headers and values that will be added to request.</para>
                <para>Default value is null</para>
            </param>
            <param name="DownloadPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Download path for file.</para>
                <para>Default value is null</para>
            </param>
            <param name="UseOriginalUrl">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use original url; otherwise, false.</para>
            </param>
            <param name="throwExceptionOnError">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
                <para>Throw exception if error occurs</para>
            </param>
            <param name="cookieContainer">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer">ZennoLab.InterfacesLibrary.ProjectModel.Collections.ICookieContainer</see></para>
            	<para>The object of cookie container. Use a common collection of cookies between browser and http requests.</para>
            </param>
            <param name="removeDefaultHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
                <para>true if remove default request headers; otherwise, false.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result of request.</para>
            </returns>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.HTTP.Request(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod,System.String,System.String,System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean,System.Boolean,ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer,System.Boolean)">Http</see> method.
            <code title="Example" description="" lang="C#">
            var response = ZennoPoster.HTTP.Request(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://httpbin.org/get?a=b", respType:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType.HeaderAndBody);
            </code>
            <code title="Example2" description="" lang="C#">
            var response = ZennoPoster.HTTP.Request(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod.POST, "https://httpbin.org/post", "Name=Jonathan+Doe&amp;Age=25",  respType:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType.HeaderAndBody);
            </code>
            <code title="Example3" description="" lang="C#">
            // Post file using multipart/form-data as string
            var sb = new StringBuilder();
            var boundary = string.Format("-----------------------------{0}", Macros.TextProcessing.RandomText(14, "s", "0123456789"));
            
            sb.AppendLine(boundary);
            sb.AppendLine("Content-Disposition: form-data; name=\"file\"; filename=\"cat.jpg\"");
            sb.AppendLine("Content-Type: image/jpeg");
            sb.AppendLine();
            sb.AppendLine(Path.Combine(project.Path, "cat.jpg"));
            sb.Append(boundary);
            sb.Append("--");
            
            string postSite = ZennoPoster.HTTP.Request(
                InterfacesLibrary.Enums.Http.HttpMethod.POST,
                @"http://httpbin.org/post",
                content: sb.ToString(),
                contentPostingType: "multipart/form-data; boundary="+boundary,
                proxy: "",
                Encoding: "UTF-8",
                UserAgent: project.Profile.UserAgent,
                respType: ZennoLab.InterfacesLibrary.Enums.Http.ResponceType.BodyOnly,
                Timeout: 30000,
                UseRedirect: true,
                MaxRedirectCount: 5,
                cookieContainer: project.Profile.CookieContainer
            );
            
            return postSite;
            </code>
            <code title="Example4" description="" lang="C#">
            // Post file using multipart/form-data as byte[]
            var bytes = new byte[0];
            var boundary = string.Format("-----------------------------{0}", Macros.TextProcessing.RandomText(14, "s", "0123456789"));
            using (var ms = new MemoryStream())
            {
                using(var bw = new BinaryWriter(ms, Encoding.UTF8, false))
                {
                    bw.Write(boundary + "\r\n");
                    bw.Write("Content-Disposition: form-data; name=\"file\"; filename=\"cat.jpg\"" + "\r\n");
                    bw.Write("Content-Type: image/jpeg" + "\r\n\r\n");
                    bw.Write(File.ReadAllBytes(project.Path+"cat.jpg"));
                    bw.Write("\r\n");
                    bw.Write(boundary + "--");		
                }
                bytes = ms.ToArray();
            }
            
            string postSite = ZennoPoster.HTTP.Request(
                InterfacesLibrary.Enums.Http.HttpMethod.POST,
                @"http://httpbin.org/post",
                content: bytes,
                contentPostingType: "multipart/form-data; boundary="+boundary,
                proxy: "",
                Encoding: "UTF-8",
                UserAgent: project.Profile.UserAgent,
                respType: ZennoLab.InterfacesLibrary.Enums.Http.ResponceType.BodyOnly,
                Timeout: 30000,
                UseRedirect: true,
                MaxRedirectCount: 5,
                cookieContainer: project.Profile.CookieContainer
            );
            
            return postSite;
            </code>
            <code title="Example5" description="" lang="PHP">
                $response = \ZennoLab\CommandCenter\ZennoPoster\HTTP::Request(\ZennoLab\InterfacesLibrary\Enums\Http\HttpMethod::GET,"https://www.google.ru/", "","application/x-www-form-urlencoded","", "UTF-8", ZennoLab\InterfacesLibrary\Enums\Http\ResponceType::HeaderAndBody, 30000,"","",FALSE,5,array(),NULL,FALSE,TRUE);
            </code>
            </example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.
                </para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.HTTP.Request(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod,System.String,System.Byte[],System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean,System.Boolean,ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer,System.Boolean)">
            <summary>Executes http request of given method</summary>
            <param name="method">
                <para>
                    Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod">ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod</see>
                </para>
            	<para>HTTP Method to execute (can take values GET, POST, PUT, HEAD, DELETE, OPTIONS, TRACE, PATCH)</para>
            </param>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Target address of request.</para>
            </param>
            <param name="content">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte[]</see></para>
            	<para>Specifies the content of POST, PUT or PATCH request.</para>
                <para>For other methods use empty array. Null value will cause a compile error, due to type conflict (string and byte[]).</para>
            </param>
            <param name="contentPostingType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
                <para>MIME type for</para>
            	<para>Value will be set to "Content-Type" header for POST, PUT and PATCH methods.</para>
                <para>Default value is "application/x-www-form-urlencoded"</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string (for example: "socks5://login:pass@8.5.6.7:8080").</para>
            </param>
            <param name="Encoding">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Specifies the encoding to use.</para>
                <para>Default value is "UTF-8"</para>
            
            </param>
            <param name="respType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType">ZennoLab.InterfacesLibrary.Enums.Http.ResponceType</see></para>
            	<para>Specifies what parts of response should be returned (can take values: BodyOnly, HeaderOnly, HeaderAndBody,File,FileAndHeaders).</para>
            </param>
            <param name="Timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Request timeout in milliseconds.</para>
                <para>Default values is 30000 (30 seconds).</para>
            </param>
            <param name="Cookies">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Cookies for request.</para>
            </param>
            <param name="UserAgent">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Specifies value for "User-Agent" header.</para>
                <para></para>
            </param>
            <param name="UseRedirect">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if redirects should be followed.</para>
                <para>Default value is true</para>
            </param>
            <param name="MaxRedirectCount">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Maximum count of redirects.</para>
                <para>Default values is 5</para>
            </param>
            <param name="AdditionalHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>[]</para>
            	<para>Array of additional headers and values that will be added to request.</para>
                <para>Default value is null</para>
            </param>
            <param name="DownloadPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Download path for file.</para>
                <para>Default value is null</para>
            </param>
            <param name="UseOriginalUrl">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use original url; otherwise, false.</para>
            </param>
            <param name="throwExceptionOnError">
                <para>Throw exception if error occurs</para>
            </param>
            <param name="cookieContainer">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer">ZennoLab.InterfacesLibrary.ProjectModel.Collections.ICookieContainer</see></para>
            	<para>The object of cookie container. Use a common collection of cookies between browser and http requests.</para>
            </param>
            <param name="removeDefaultHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
                <para>true if remove default request headers; otherwise, false.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result of request.</para>
            </returns>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.HTTP.Request(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod,System.String,System.Byte[],System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean,System.Boolean,ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer,System.Boolean)">Http</see> method.
            <code title="Example" description="" lang="C#">
            var response = ZennoPoster.HTTP.Request(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://httpbin.org/get?a=b", new byte[0],respType:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType.HeaderAndBody);
            </code>
            <code title="Example2" description="" lang="C#">
            var response = ZennoPoster.HTTP.Request(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod.POST, "https://httpbin.org/post", Encoding.UTF8.GetBytes("Name=Jonathan+Doe&amp;Age=25"), respType:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType.HeaderAndBody);
            </code>
            <code title="Example3" description="" lang="PHP">
            $response = \ZennoLab\CommandCenter\ZennoPoster\HTTP::Request(\ZennoLab\InterfacesLibrary\Enums\Http\HttpMethod::GET,"https://www.google.ru/", array(),"application/x-www-form-urlencoded","", "UTF-8", ZennoLab\InterfacesLibrary\Enums\Http\ResponceType::HeaderAndBody, 30000,"","",FALSE,5,array(),NULL,FALSE,TRUE);
            </code>
            </example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.
                </para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.HTTP.RequestBytes(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod,System.String,System.String,System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean,System.Boolean,ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer,System.Boolean)">
            <summary>Executes http request of given method and returns response as byte array</summary>
            <param name="method">
                <para>
                    Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod">ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod</see>
                </para>
            	<para>HTTP Method to execute (can take values GET, POST, PUT, HEAD, DELETE, OPTIONS, TRACE, PATCH)</para>
            </param>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Target address of request.</para>
            </param>
            <param name="content">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Specifies the content of POST, PUT or PATCH request.</para>
                <para>For other methods empty string can be used. </para>
            </param>
            <param name="contentPostingType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
                <para>MIME type for</para>
            	<para>Value will be set to "Content-Type" header for POST, PUT and PATCH methods.</para>
                <para>Default value is "application/x-www-form-urlencoded"</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string (for example: "socks5://login:pass@8.5.6.7:8080").</para>
            </param>
            <param name="Encoding">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Specifies the encoding to use.</para>
                <para>Default value is "UTF-8"</para>
            
            </param>
            <param name="respType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType">ZennoLab.InterfacesLibrary.Enums.Http.ResponceType</see></para>
            	<para>Specifies what parts of response should be returned (can take values: BodyOnly, HeaderOnly, HeaderAndBody,File,FileAndHeaders).</para>
            </param>
            <param name="Timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Request timeout in milliseconds.</para>
                <para>Default values is 30000 (30 seconds).</para>
            </param>
            <param name="Cookies">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Cookies for request.</para>
            </param>
            <param name="UserAgent">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Specifies value for "User-Agent" header.</para>
                <para></para>
            </param>
            <param name="UseRedirect">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if redirects should be followed.</para>
                <para>Default value is true</para>
            </param>
            <param name="MaxRedirectCount">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Maximum count of redirects.</para>
                <para>Default values is 5</para>
            </param>
            <param name="AdditionalHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>[]</para>
            	<para>Array of additional headers and values that will be added to request.</para>
                <para>Default value is null</para>
            </param>
            <param name="DownloadPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Download path for file.</para>
                <para>Default value is null</para>
            </param>
            <param name="UseOriginalUrl">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use original url; otherwise, false.</para>
            </param>
            <param name="throwExceptionOnError">
                <para>Throw exception if error occurs</para>
            </param>
            <param name="cookieContainer">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer">ZennoLab.InterfacesLibrary.ProjectModel.Collections.ICookieContainer</see></para>
            	<para>The object of cookie container. Use a common collection of cookies between browser and http requests.</para>
            </param>
            <param name="removeDefaultHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
                <para>true if remove default request headers; otherwise, false.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result of request.</para>
            </returns>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.HTTP.RequestBytes(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod,System.String,System.String,System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean,System.Boolean,ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer,System.Boolean)">Http</see> method.
            <code title="Example" description="" lang="C#">
            var response = ZennoPoster.HTTP.RequestBytes(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://httpbin.org/get?a=b", "",respType:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType.HeaderAndBody);
            </code>
            <code title="Example2" description="" lang="C#">
            var response = ZennoPoster.HTTP.RequestBytes(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod.POST, "https://httpbin.org/post", "Name=Jonathan+Doe&amp;Age=25",respType:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType.HeaderAndBody);
            </code>
            <code title="Example3" description="" lang="PHP">
            $response = \ZennoLab\CommandCenter\ZennoPoster\HTTP::RequestBytes(\ZennoLab\InterfacesLibrary\Enums\Http\HttpMethod::GET,"https://www.google.ru/", "","application/x-www-form-urlencoded","", "UTF-8", ZennoLab\InterfacesLibrary\Enums\Http\ResponceType::HeaderAndBody, 30000,"","",FALSE,5,array(),NULL,FALSE,TRUE);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.
                </para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.HTTP.RequestBytes(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod,System.String,System.Byte[],System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean,System.Boolean,ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer,System.Boolean)">
            <summary>Executes http request of given method and returns response as byte array</summary>
            <param name="method">
                <para>
                    Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod">ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod</see>
                </para>
            	<para>HTTP Method to execute (can take values GET, POST, PUT, HEAD, DELETE, OPTIONS, TRACE, PATCH)</para>
            </param>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Target address of request.</para>
            </param>
            <param name="content">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte[]</see></para>
            	<para>Specifies the content of POST, PUT or PATCH request.</para>
                <para>For other methods use empty array. <i>null</i> value will cause a compile error, due to type conflict (string and byte[]).</para>
            </param>
            <param name="contentPostingType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
                <para>MIME type for</para>
            	<para>Value will be set to "Content-Type" header for POST, PUT and PATCH methods.</para>
                <para>Default value is "application/x-www-form-urlencoded"</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string (for example: "socks5://login:pass@8.5.6.7:8080").</para>
            </param>
            <param name="Encoding">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Specifies the encoding to use.</para>
                <para>Default value is "UTF-8"</para>
            </param>
            <param name="respType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType">ZennoLab.InterfacesLibrary.Enums.Http.ResponceType</see></para>
            	<para>Specifies what parts of response should be returned (can take values: BodyOnly, HeaderOnly, HeaderAndBody,File,FileAndHeaders).</para>
            </param>
            <param name="Timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Request timeout in milliseconds.</para>
                <para>Default values is 30000 (30 seconds).</para>
            </param>
            <param name="Cookies">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Cookies for request.</para>
            </param>
            <param name="UserAgent">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Specifies value for "User-Agent" header.</para>
                <para></para>
            </param>
            <param name="UseRedirect">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if redirects should be followed.</para>
                <para>Default value is true</para>
            </param>
            <param name="MaxRedirectCount">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Maximum count of redirects.</para>
                <para>Default values is 5</para>
            </param>
            <param name="AdditionalHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>[]</para>
            	<para>Array of additional headers and values that will be added to request.</para>
                <para>Default value is null</para>
            </param>
            <param name="DownloadPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Download path for file.</para>
                <para>Default value is null</para>
            </param>
            <param name="UseOriginalUrl">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use original url; otherwise, false.</para>
            </param>
            <param name="throwExceptionOnError">
                <para>Throw exception if error occurs</para>
            </param>
            <param name="cookieContainer">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer">ZennoLab.InterfacesLibrary.ProjectModel.Collections.ICookieContainer</see></para>
            	<para>The object of cookie container. Use a common collection of cookies between browser and http requests.</para>
            </param>
            <param name="removeDefaultHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
                <para>true if remove default request headers; otherwise, false.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result of request.</para>
            </returns>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.HTTP.RequestBytes(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod,System.String,System.Byte[],System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean,System.Boolean,ZennoLab.InterfacesLibrary.ProjectModel.ICookieContainer,System.Boolean)">Http</see> method.
            <code title="Example" description="" lang="C#">
            var response = ZennoPoster.HTTP.RequestBytes(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod.GET, "https://httpbin.org/get?a=b", new byte[0],respType:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType.HeaderAndBody);
            </code>
            <code title="Example2" description="" lang="C#">
            var response = ZennoPoster.HTTP.RequestBytes(ZennoLab.InterfacesLibrary.Enums.Http.HttpMethod.POST, "https://httpbin.org/post", "Name=Jonathan+Doe&amp;Age=25", respType:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType.HeaderAndBody);
            </code>
            <code title="Example3" description="" lang="PHP">
            $response = \ZennoLab\CommandCenter\ZennoPoster\HTTP::RequestBytes(\ZennoLab\InterfacesLibrary\Enums\Http\HttpMethod::GET,"https://www.google.ru/", array(),"application/x-www-form-urlencoded","", "UTF-8", ZennoLab\InterfacesLibrary\Enums\Http\ResponceType::HeaderAndBody, 30000,"","",FALSE,5,array(),NULL,FALSE,TRUE);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.
                </para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.ZennoPoster.Db">
            <summary>Represents a set of methods to access database.</summary>
            <seealso cref="T:ZennoLab.CommandCenter.ZennoPoster">ZennoPoster Class</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteNonQuery(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String,System.Boolean)">
            <summary>Executes a SQL statement against the connection and returns the number of rows affected.</summary>
            <param name="query">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>SQL query.</para>
            </param>
            <param name="param">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.collections.specialized.orderedDictionary.aspx">System.Collections.Specialized</see></para>
            	<para>Query parameters.</para>
            </param>
            <param name="provider">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Db.DbProvider">ZennoLab.InterfacesLibrary.Enums.Db.DbProvider</see></para>
            	<para>Data provider type.</para>
            </param>
            <param name="connectionString">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Connection string.</para>
            </param>
            <param name="throwExceptions">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
                <para>If true, exceptions will not be supressed. Default is false.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The number of rows affected.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteQuery">ExecuteQuery Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteScalar(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String)">ExecuteScalar Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteNonQuery(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String,System.Boolean)">ExecuteNonQuery</see> method.
            <code title="Example" description="" lang="C#">
            var rowCount = ZennoPoster.Db.ExecuteNonQuery("DELETE FROM User WHERE Id = 2", null,
                ZennoLab.InterfacesLibrary.Enums.Db.DbProvider.SqlClient,
                "Data Source=SQLSERVER;Initial Catalog=TestDb;Integrated Security=True;max pool size=500");</code><code title="Example2" description="" lang="PHP">
            $rowCount = ZennoLab\CommandCenter\ZennoPoster::Db::ExecuteNonQuery("DELETE FROM User WHERE Id = 2", null,
                ZennoLab\InterfacesLibrary\Enums\Db\DbProvider::SqlClient,
                "Data Source=SQLSERVER;Initial Catalog=TestDb;Integrated Security=True;max pool size=500",False);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteScalar(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String,System.Boolean)">
            <summary>Executes the query, and returns the first column of the first row in the result set returned by the query.Additional columns or rows are ignored.</summary>
            <param name="query">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>SQL query.</para>
            </param>
            <param name="param">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.collections.specialized.orderedDictionary.aspx">System.Collections.Specialized</see></para>
            	<para>Query parameters .</para>
            </param>
            <param name="provider">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Db.DbProvider">ZennoLab.InterfacesLibrary.Enums.Db.DbProvider</see></para>
            	<para>Data provider type.</para>
            </param>
            <param name="connectionString">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Connection string.</para>
            </param>
            <param name="throwExceptions">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
                <para>If true, exceptions will not be supressed. Default is false.</para>
            </param> 
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The first column of the first row in the result set or empty string</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteNonQuery(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String)">ExecuteNonQuery Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteQuery">ExecuteQuery Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteScalar(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String,System.Boolean)">ExecuteScalar</see> method.
            <code title="Example" description="" lang="C#">
            var count = ZennoPoster.Db.ExecuteScalar("SELECT COUNT(*) FROM User", null,
                ZennoLab.InterfacesLibrary.Enums.Db.DbProvider.SqlClient, 
                "Data Source=SQLSERVER;Initial Catalog=TestDb;Integrated Security=True;max pool size=500");</code><code title="Example2" description="" lang="PHP">
            $count = ZennoLab\CommandCenter\ZennoPoster::Db::ExecuteScalar("SELECT COUNT(*) FROM User", null,
                ZennoLab\InterfacesLibrary\Enums\Db\DbProvider::SqlClient,
                "Data Source=SQLSERVER;Initial Catalog=TestDb;Integrated Security=True;max pool size=500",False);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteQuery(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String,ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable@,System.Boolean)">
            <summary>Execute SQL query and fill table.</summary>
            <overloads>
            	<span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); FONT: 13px 'Segoe UI', Verdana, Arial; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
            Execute SQL query.</span>
            </overloads>
            <param name="query">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>SQL query.</para>
            </param>
            <param name="param">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.collections.specialized.orderedDictionary.aspx">System.Collections.Specialized</see></para>
            	<para>Query parameters.</para>
            </param>
            <param name="provider">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Db.DbProvider">ZennoLab.InterfacesLibrary.Enums.Db.DbProvider</see></para>
            	<para>Data provider type.</para>
            </param>
            <param name="connectionString">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Connection string.</para>
            </param>
            <param name="table">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable</see></para>
            	<para>Table for result data.</para>
            </param>
            <param name="throwExceptions">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
                <para>If true, exceptions will not be supressed. Default is false.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The number of rows affected.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteNonQuery(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String)">ExecuteNonQuery Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteScalar(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String)">ExecuteScalar Method</seealso>
            <example>
            The following example shows call the <see cref="o:ExecuteQuery">ExecuteQuery</see> method.
            <code title="Example" description="" lang="C#">
            var table = project.Tables["Table 1"];
            var rowCount = ZennoPoster.Db.ExecuteQuery("SELECT * FROM User", null,
                ZennoLab.InterfacesLibrary.Enums.Db.DbProvider.SqlClient,
                "Data Source=SQLSERVER;Initial Catalog=TestDb;Integrated Security=True;max pool size=500",
                ref table);</code><code title="Example2" description="" lang="PHP">
            $table = $project.Tables["Table 1"];
            $rowcount = ZennoLab\CommandCenter\ZennoPoster::Db::ExecuteQuery("SELECT * FROM User", null,
                ZennoLab\InterfacesLibrary\Enums\Db\DbProvider::SqlClient,
                "Data Source=SQLSERVER;Initial Catalog=TestDb;Integrated Security=True;max pool size=500",
                $table,False);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteQuery(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String,ZennoLab.InterfacesLibrary.ProjectModel.IZennoList@,System.String,System.Boolean)">
            <summary>Execute SQL query and fill list.</summary>
            <overloads>
            	<span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); FONT: 13px 'Segoe UI', Verdana, Arial; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
            Execute SQL query.</span>
            </overloads>
            <param name="query">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>SQL query.</para>
            </param>
            <param name="param">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.collections.specialized.orderedDictionary.aspx">System.Collections.Specialized</see></para>
            	<para>Query parameters .</para>
            </param>
            <param name="provider">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Db.DbProvider">ZennoLab.InterfacesLibrary.Enums.Db.DbProvider</see></para>
            	<para>Data provider type.</para>
            </param>
            <param name="connectionString">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Connection string.</para>
            </param>
            <param name="list">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">ZennoLab.InterfacesLibrary.ProjectModel.IZennoList</see></para>
            	<para>List for result data.</para>
            </param>
            <param name="separator">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Field separator.</para>
            </param>
            <param name="throwExceptions">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
                <para>If true, exceptions will not be supressed. Default is false.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The number of rows affected.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteNonQuery(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String)">ExecuteNonQuery Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteScalar(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String)">ExecuteScalar Method</seealso>
            <example>
            The following example shows call the <see cref="o:ExecuteQuery">ExecuteQuery</see> method.
            <code title="Example" description="" lang="C#">
            var list = project.Lists["List 1"];
            var rowCount = ZennoPoster.Db.ExecuteQuery("SELECT * FROM User", null,
                ZennoLab.InterfacesLibrary.Enums.Db.DbProvider.SqlClient,
                "Data Source=SQLSERVER;Initial Catalog=TestDb;Integrated Security=True;max pool size=500",
                ref list, " | ");</code><code title="Example2" description="" lang="PHP">
            $list = $project.Lists["Table 1"];
            $rowcount = ZennoLab\CommandCenter\ZennoPoster::Db::ExecuteQuery("SELECT * FROM User", null,
                ZennoLab\InterfacesLibrary\Enums\Db\DbProvider::SqlClient,
                "Data Source=SQLSERVER;Initial Catalog=TestDb;Integrated Security=True;max pool size=500",
                $list, " | ",False);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteQuery(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String,System.String,System.String,System.Boolean)">
            <summary>Execute SQL query and return result as string.</summary>
            <overloads>
            	<span style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); FONT: 13px 'Segoe UI', Verdana, Arial; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
            Execute SQL query.</span>
            </overloads>
            <param name="query">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>SQL query.</para>
            </param>
            <param name="param">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.collections.specialized.orderedDictionary.aspx">System.Collections.Specialized</see></para>
            	<para>Query parameters .</para>
            </param>
            <param name="provider">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Db.DbProvider">ZennoLab.InterfacesLibrary.Enums.Db.DbProvider</see></para>
            	<para>Data provider type.</para>
            </param>
            <param name="connectionString">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Connection string.</para>
            </param>
            <param name="fieldSeparator">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Field separator.</para>
            </param>
            <param name="rowSeparator">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Row separator. If null - System.Environment.NewLine.</para>
            </param>
            <param name="throwExceptions">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
                <para>If true, exceptions will not be supressed. Default is false.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Result string.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteNonQuery(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String)">ExecuteNonQuery Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Db.ExecuteScalar(System.String,System.Collections.Specialized.OrderedDictionary,ZennoLab.InterfacesLibrary.Enums.Db.DbProvider,System.String)">ExecuteScalar Method</seealso>
            <example>
            The following example shows call the <see cref="o:ExecuteQuery">ExecuteQuery</see> method.
            <code title="Example" description="" lang="C#">
            var result = ZennoPoster.Db.ExecuteQuery("SELECT * FROM User", null,
                ZennoLab.InterfacesLibrary.Enums.Db.DbProvider.SqlClient, 
                "Data Source=SQLSERVER;Initial Catalog=TestDb;Integrated Security=True;max pool size=500", " | ");</code><code title="Example2" description="" lang="PHP">
            $result = ZennoLab\CommandCenter\ZennoPoster::Db::ExecuteQuery("SELECT * FROM User", null,
                ZennoLab\InterfacesLibrary\Enums\Db\DbProvider::SqlClient, 
                "Data Source=SQLSERVER;Initial Catalog=TestDb;Integrated Security=True;max pool size=500", " | ",False);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.ZennoPoster.Parser">
            <summary>Represents a set of the helper methods to parse page.</summary>
            <seealso cref="T:ZennoLab.CommandCenter.ZennoPoster">ZennoPoster Class</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.Parser.ParseByXpath(ZennoLab.CommandCenter.Tab,ZennoLab.InterfacesLibrary.Enums.Parser.SourceType,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>Parse page by XPath.</summary>
            <param name="tab">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Tab">Zennolab.CommandCenter.Tab</see></para>
            	<para> The tab to parse.</para>
            </param>
            <param name="sourceType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Parser.SourceType">ZennoLab.InterfacesLibrary.Enums.Parser.SourceType</see></para>
            	<para> Source type. Parse as DOM or Html.</para>
            </param>
            <param name="xpath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> XPath.</para>
            </param>
            <param name="attribute">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> The attribute to take.</para>
            </param>
            <param name="onlyVisible">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para> True if parse only visible elements; otherwise, false. Default value is true.</para>
            </param>
            <param name="searchInFrames">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para> True if search inside all frames; otherwise, false. Default value is false.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1">System.Collections.Generic.IEnumerable</see></para>
            	<para> The result of parsing data. Returns list of attributes.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Parser.ParseByCssSelector(Tab, SourceType, string, string, bool)">Parse by CSS-selector method.</seealso>
            <example>
            The following example shows call the <see cref="o:ParseByXpath">ParseByXpath</see> method.
            <code title="Example" description="" lang="C#">
            var resultParseByXpath = ZennoPoster.Parser.ParseByXpath(instance.ActiveTab, ZennoLab.InterfacesLibrary.Enums.Parser.SourceType.Dom, "//body", "innerText");
            </code>
            <code title="Example2" description="" lang="PHP">
            $resultParseByXpath = ZennoPoster\Parser::ParseByXpath(instance.ActiveTab, ZennoLab\InterfacesLibrary\Enums\Parser\SourceType::Dom, "//body", "innerText");
            </code>
            </example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.Parser.ParseByCssSelector(ZennoLab.CommandCenter.Tab,ZennoLab.InterfacesLibrary.Enums.Parser.SourceType,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>Parse page by CSS-selector.</summary>
            <param name="tab">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.Tab">Zennolab.CommandCenter.Tab</see></para>
            	<para> The tab to parse.</para>
            </param>
            <param name="sourceType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Parser.SourceType">ZennoLab.InterfacesLibrary.Enums.Parser.SourceType</see></para>
            	<para> Source type. Parse as DOM or Html.</para>
            </param>
            <param name="cssSelector">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> CSS-selector.</para>
            </param>
            <param name="attribute">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> The attribute to take.</para>
            </param>
            <param name="onlyVisible">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para> True if parse only visible elements; otherwise, false. Default value is true.</para>
            </param>
            <param name="searchInFrames">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para> True if search inside all frames; otherwise, false. Default value is false.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1">System.Collections.Generic.IEnumerable</see></para>
            	<para> The result of parsing data. Returns list of attributes.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Parser.ParseByXpath(Tab, SourceType, string, string, bool)">Parse by XPath method.</seealso>
            <example>
            The following example shows call the <see cref="o:ParseByCssSelector">ParseByCssSelector</see> method.
            <code title="Example" description="" lang="C#">
            var resultParseByCssSelector = ZennoPoster.Parser.ParseByCssSelector(instance.ActiveTab, ZennoLab.InterfacesLibrary.Enums.Parser.SourceType.Dom, "body", "innerText");
            </code>
            <code title="Example2" description="" lang="PHP">
            $resultParseByCssSelector = ZennoPoster\Parser::ParseByCssSelector(instance.ActiveTab, ZennoLab\InterfacesLibrary\Enums\Parser\SourceType::Dom, "body", "innerText");
            </code>
            </example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.Parser.ParseByXpath(System.String,System.String,System.String)">
            <summary>Parse page by XPath.</summary>
            <param name="source">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> Html document.</para>
            </param>
            <param name="xpath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> XPath.</para>
            </param>
            <param name="attribute">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> The attribute to take.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1">System.Collections.Generic.IEnumerable</see></para>
            	<para> The result of parsing data. Returns list of attributes.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Parser.ParseByCssSelector(string, string, string)">Parse by CSS-selector method.</seealso>
            <example>
            The following example shows call the <see cref="o:ParseByXpath">ParseByXpath</see> method.
            <code title="Example" description="" lang="C#">
            var resultParseByXpath = ZennoPoster.Parser.ParseByXpath("<html><head></head><body>Example</body></html>", "//body", "innerText");
            </code>
            <code title="Example2" description="" lang="PHP">
            $resultParseByXpath = ZennoPoster\Parser::ParseByXpath("<html><head></head><body>Example</body></html>", "//body", "innerText");
            </code>
            </example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.Parser.ParseByCssSelector(System.String,System.String,System.String)">
            <summary>Parse page by CSS-selector.</summary>
            <param name="source">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> Html document.</para>
            </param>
            <param name="cssSelector">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> CSS-selector.</para>
            </param>
            <param name="attribute">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para> The attribute to take.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1">System.Collections.Generic.IEnumerable</see></para>
            	<para> The result of parsing data. Returns list of attributes.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Parser.ParseByXpath(string, string, string)">Parse by XPath method.</seealso>
            <example>
            The following example shows call the <see cref="o:ParseByCssSelector">ParseByCssSelector</see> method.
            <code title="Example" description="" lang="C#">
            var resultParseByCssSelector = ZennoPoster.Parser.ParseByCssSelector("<html><head></head><body>Example</body></html>", "body", "innerText");
            </code>
            <code title="Example2" description="" lang="PHP">
            $resultParseByCssSelector = ZennoPoster\Parser::ParseByCssSelector("<html><head></head><body>Example</body></html>", "body", "innerText");
            </code>
            </example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ZennoPoster.RealInstanceManagerService">
            <summary> Service for internal use only </summary>
            <buildflag>Exclude from Online</buildflag>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ZennoPoster.RealTaskManagerService">
            <summary> Service for internal use only </summary>
            <buildflag>Exclude from Online</buildflag>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ConnectToTaskManagerService(Global.WcfHelpers.WcfKeeper{ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService}@)">
            <summary>
            Подключиться к wcf сервису для работы с заданиями
            </summary>
            <param name="service">сервис</param>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ConnectToInstanceManagerService(Global.WcfHelpers.WcfKeeper{ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService}@,System.Boolean)">
            <summary> Подключиться к wcf сервису для работы с инстансами </summary>
            <param name="service">сервис</param>
            <param name="getProcesses">брать процессы или нет</param>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.CloseConnectionWithInstanceManager(Global.WcfHelpers.WcfKeeper{ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService},System.Boolean)">
            <summary> Отключиться от wcf сервиса для работы с инстансами </summary>
            <param name="service"></param>
            <param name="shouldClose"></param>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.CloseConnectionWithTaskManager(Global.WcfHelpers.WcfKeeper{ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService},System.Boolean)">
            <summary> Отключиться от wcf сервиса для работы с заданиями </summary>
            <param name="service">пайп</param>
            <param name="shouldClose">закрывать сервис или нет</param>
        </member>
        <member name="P:ZennoLab.CommandCenter.ZennoPoster.AllInstances">
            <summary>Gets array of all instances ports.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.array.aspx">System.Array</see></para>
            	<para>The array of ports of all instances.</para>
            </value>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.HttpGet(System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean)">
            <summary>Executes get request</summary>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Target address of request.</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string (for example: socks5://llogin:pass@8.5.6.7:8080).</para>
            </param>
            <param name="Encoding">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Encoding format.</para>
            </param>
            <param name="respType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType">ZennoLab.InterfacesLibrary.Enums.Http.ResponceType</see></para>
            	<para>Response type (cane take values: BodyOnly, HeaderOnly, HeaderAndBody, File).</para>
            </param>
            <param name="Timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Timeout in milliseconds of request.</para>
            </param>
            <param name="Cookies">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Cookies for request.</para>
            </param>
            <param name="UserAgent">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>UserAgent for request.</para>
            </param>
            <param name="UseRedirect">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use redirect; otherwise, false.</para>
            </param>
            <param name="MaxRedirectCount">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Maximum count of redirects.</para>
            </param>
            <param name="AdditionalHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>[]</para>
            	<para>An array of captures an array of additional headers.</para>
            </param>
            <param name="DownloadPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Download path for file.</para>
            </param>
            <param name="UseOriginalUrl">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use original url; otherwise, false.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result of request.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.HttpPost(System.String,System.String,System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,string[])">HttpPost Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.HttpGet(System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean)">HttpGet</see> method.
            <code title="Example" description="" lang="C#">
            var resultHttpGet = ZennoPoster.HttpGet("https://www.google.ru/", "", "UTF-8",respType:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType.HeaderAndBody);</code><code title="Example2" description="" lang="PHP">
            $resultHttpGet = ZennoLab\CommandCenter\ZennoPoster::HttpGet("https://www.google.ru/", "", "UTF-8", ZennoLab\InterfacesLibrary\Enums\Http\ResponceType::HeaderAndBody);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.HttpGetBytes(System.String,System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.Boolean)">
            <summary>Executes get request</summary>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Target address of request.</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string (for example: socks5://llogin:pass@8.5.6.7:8080).</para>
            </param>
            <param name="Encoding">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Encoding format.</para>
            </param>
            <param name="Timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Timeout in milliseconds of request.</para>
            </param>
            <param name="Cookies">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Cookies for request.</para>
            </param>
            <param name="UserAgent">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>UserAgent for request.</para>
            </param>
            <param name="UseRedirect">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use redirect; otherwise, false.</para>
            </param>
            <param name="MaxRedirectCount">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Maximum count of redirects.</para>
            </param>
            <param name="AdditionalHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>[]</para>
            	<para>An array of captures an array of additional headers.</para>
            </param>
            <param name="UseOriginalUrl">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use original url; otherwise, false.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result byte array of request.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.HttpPost(System.String,System.String,System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,string[])">HttpPost Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.HttpGet(System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean)">HttpGet</see> method.
            <code title="Example" description="" lang="C#">
            var resultHttpGetBytes = ZennoPoster.HttpGet("https://www.google.ru/", "", "UTF-8");</code><code title="Example2" description="" lang="PHP">
            $resultHttpGetBytes = ZennoPoster::HttpGet("https://www.google.ru/", "", "UTF-8");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.HttpPost(System.String,System.String,System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean)">
            <summary>Executes post request</summary>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Target address of request.</para>
            </param>
            <param name="content">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The content of post request.</para>
            </param>
            <param name="contentPostingType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of content.</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string (for example: socks5://llogin:pass@8.5.6.7:8080).</para>
            </param>
            <param name="Encoding">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Encoding format.</para>
            </param>
            <param name="respType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType">ZennoLab.InterfacesLibrary.Enums.Http.ResponceType</see></para>
            	<para>Response type (cane take values: BodyOnly, HeaderOnly, HeaderAndBody, File).</para>
            </param>
            <param name="Timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Timeout in milliseconds of request.</para>
            </param>
            <param name="Cookies">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Cookies for request.</para>
            </param>
            <param name="UserAgent">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>UserAgent for request.</para>
            </param>
            <param name="UseRedirect">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use redirect; otherwise, false.</para>
            </param>
            <param name="MaxRedirectCount">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Maximum count of redirects.</para>
            </param>
            <param name="AdditionalHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>[]</para>
            	<para>An array of captures an array of additional headers.</para>
            </param>
            <param name="DownloadPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Download path for file.</para>
            </param>
            <param name="UseOriginalUrl">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use original url; otherwise, false.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result of request.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.HttpGet(System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,string[])">HttpGet Method</seealso>
            <example>
            The following example shows call the <see cref="o:HttpPost">HttpPost</see> method.
            <code title="Example" description="" lang="C#">
            var resultHttpPost = ZennoPoster.HttpPost("http://www.cs.tut.fi/cgi-bin/run/~jkorpela/echo.cgi", 
                "Comments=This+is%0D%0Asome+text%0D%0Ain+several+lines.&amp;box=yes&amp;hidden+field=something", 
                "application/x-www-form-urlencoded", "", "iso-8859-1",respType:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType.HeaderAndBody);</code><code title="Example2" description="" lang="PHP">
            $resultHttpPost = ZennoLab\CommandCenter\ZennoPoster::HttpPost("http://www.cs.tut.fi/cgi-bin/run/~jkorpela/echo.cgi", 
                "Comments=This+is%0D%0Asome+text%0D%0Ain+several+lines.&amp;box=yes&amp;hidden+field=something", 
                "application/x-www-form-urlencoded", "", "iso-8859-1", ZennoLab\InterfacesLibrary\Enums\Http\ResponceType::HeaderAndBody);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.HttpPost(System.String,System.Byte[],System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String,System.Boolean)">
            <summary>Executes post request</summary>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Target address of request.</para>
            </param>
            <param name="content">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.byte.aspx">System.Byte</see>[]</para>
            	<para>The content of post request.</para>
            </param>
            <param name="contentPostingType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of content.</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string (for example: socks5://llogin:pass@8.5.6.7:8080).</para>
            </param>
            <param name="Encoding">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Encoding format.</para>
            </param>
            <param name="respType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Http.ResponceType">ZennoLab.InterfacesLibrary.Enums.Http.ResponceType</see></para>
            	<para>Response type (cane take values: BodyOnly, HeaderOnly, HeaderAndBody, File).</para>
            </param>
            <param name="Timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Timeout in milliseconds of request.</para>
            </param>
            <param name="Cookies">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Cookies for request.</para>
            </param>
            <param name="UserAgent">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>UserAgent for request.</para>
            </param>
            <param name="UseRedirect">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use redirect; otherwise, false.</para>
            </param>
            <param name="MaxRedirectCount">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Maximum count of redirects.</para>
            </param>
            <param name="AdditionalHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>[]</para>
            	<para>An array of captures an array of additional headers.</para>
            </param>
            <param name="DownloadPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Download path for file.</para>
            </param>
            <param name="UseOriginalUrl">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use original url; otherwise, false.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result of request.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.HttpGet(System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,string[])">HttpGet Method</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.HttpPostBytes(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.Boolean)">
            <summary>Executes post request</summary>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Target address of request.</para>
            </param>
            <param name="content">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The content of post request.</para>
            </param>
            <param name="contentPostingType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of content.</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string (for example: socks5://llogin:pass@8.5.6.7:8080).</para>
            </param>
            <param name="Encoding">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Encoding format.</para>
            </param>
            <param name="Timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Timeout in milliseconds of request.</para>
            </param>
            <param name="Cookies">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Cookies for request.</para>
            </param>
            <param name="UserAgent">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>UserAgent for request.</para>
            </param>
            <param name="UseRedirect">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use redirect; otherwise, false.</para>
            </param>
            <param name="MaxRedirectCount">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Maximum count of redirects.</para>
            </param>
            <param name="AdditionalHeaders">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>[]</para>
            	<para>An array of captures an array of additional headers.</para>
            </param>
            <param name="UseOriginalUrl">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use original url; otherwise, false.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result byte array of request.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.HttpGet(System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,string[])">HttpGet Method</seealso>
            <example>
            The following example shows call the <see cref="o:HttpPost">HttpPost</see> method.
            <code title="Example" description="" lang="C#">
            var resultHttpPostBytes = ZennoPoster.HttpPost("http://www.cs.tut.fi/cgi-bin/run/~jkorpela/echo.cgi", 
                "Comments=This+is%0D%0Asome+text%0D%0Ain+several+lines.&amp;box=yes&amp;hidden+field=something", 
                "application/x-www-form-urlencoded", "", "iso-8859-1");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.GetNewInstance(System.String@,System.Int32@,System.String@,ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType,System.String)">
            <summary>Get the instance</summary>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Pipe host of instance (127.0.0.1).</para>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Instance port.</para>
            </param>
            <param name="address">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Instance work mode.</para>
            </param>
            <param name="browserType">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType">ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType</see></para>
            	<para>The browser type. The default value is BrowserType.Firefox45.</para>
            </param>
            <param name="browserArgs">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The command line arguments for starting browser.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.GetNewInstance(System.String@,System.Int32@,System.String@,ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType,System.String)">GetNewInstance</see> method.
            <code title="Example" description="" lang="C#">
            var url = "";
            var port = 0;
            var address = "";
            // Gets parameters of instance
            ZennoPoster.GetNewInstance(out url, out port, out address);
            // Create new instance
            var instance = new Instance(url, port, address);</code><code title="Example2" description="" lang="PHP">
            $url = "";
            $port = 0;
            $address = "";
            // Gets parameters of instance
            ZennoPoster::GetNewInstance($url, $port, $address);
            // Create new instance
            $instance = new Instance($url, $port, $address);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ShowInstance(System.String,System.Int32,System.String)">
            <summary>Show the instance</summary>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Pipe host of instance (127.0.0.1).</para>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Instance port.</para>
            </param>
            <param name="address">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Instance work mode.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.GetNewInstance(System.String@,System.Int32@,System.String@,ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType,System.String)">ShowInstance</see> method.
            <code title="Example" description="" lang="C#">
            var url = "";
            var port = 0;
            var address = "";
            // Gets parameters of instance
            ZennoPoster.GetNewInstance(out url, out port, out address);
            // Show the instance
            ZennoPoster.ShowInstance(url, port, address);</code><code title="Example2" description="" lang="PHP">
            $url = "";
            $port = 0;
            $address = "";
            // Gets parameters of instance
            ZennoPoster::GetNewInstance($url, $port, $address);
            // Show the instance
            ZennoPoster::ShowInstance($url, $port, $address);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.HideInstance(System.String,System.Int32,System.String)">
            <summary>Hide the instance</summary>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Pipe host of instance (127.0.0.1).</para>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Instance port.</para>
            </param>
            <param name="address">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Instance work mode.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.GetNewInstance(System.String@,System.Int32@,System.String@,ZennoLab.InterfacesLibrary.Enums.Browser.BrowserType,System.String)">ShowInstance</see> method.
            <code title="Example" description="" lang="C#">
            var url = "";
            var port = 0;
            var address = "";
            // Gets parameters of instance
            ZennoPoster.GetNewInstance(out url, out port, out address);
            // Hide the instance
            ZennoPoster.HideInstance(url, port, address);</code><code title="Example2" description="" lang="PHP">
            $url = "";
            $port = 0;
            $address = "";
            // Gets parameters of instance
            ZennoPoster::GetNewInstance($url, $port, $address);
            // Hide the instance
            ZennoPoster.HideInstance($url, $port, $address);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ReleaseInstance(System.String,System.Int32,System.String)">
            <summary>Release the instance</summary>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Pipe host of instance (127.0.0.1).</para>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Instance port.</para>
            </param>
            <param name="address">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Instance work mode.</para>
            </param>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ReleaseInstance(System.String,System.Int32,System.String)">ReleaseInstance</see> method.
            <code title="Example" description="" lang="C#">
            // Release the instance on the known port
            ZennoPoster.ReleaseInstance("127.0.0.1", port, "server");</code><code title="Example2" description="" lang="PHP">
            // Release the instance on the known port
            ZennoPoster::ReleaseInstance("127.0.0.1", $port, "server");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.CaptchaSpecialRecognition(System.String,ZennoLab.CommandCenter.Instance,System.Boolean)">
            <summary>Recognizes the special captcha through the specified DLL library.</summary>
            <param name="dllName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to DLL library.</para>
            </param>
            <param name="instance">
            	<para>Type: <see cref="T:ZennoLab.CommandCenter.HtmlElement">Zennolab.CommandCenter.Instance</see></para>
            	<para>The instance with captcha for recognition.</para>
            </param>
            <param name="asyncRecognize">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if need async way to recognize; otherwise and default, false.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The recognition result or id of async task.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.CaptchaRecognition">CaptchaRecognition Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.WaitCaptchaRecognition(System.String)">WaitCaptchaRecognition Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.CaptchaSpecialRecognition(System.String,ZennoLab.CommandCenter.Instance,System.Boolean)">CaptchaSpecialRecognition</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance)
            {
                instance.ClearCookie();
             
                Tab tb = instance.MainTab;
                if ((tb.IsVoid) || (tb.IsNull)) return -1;
                if (tb.IsBusy) tb.WaitDownloading();
                tb.Navigate("http://lessons.zennolab.com/ru/advanced");
                if (tb.IsBusy) tb.WaitDownloading();
             
                ZennoPoster.CaptchaSpecialRecognition("KeyCaptcha.dll", instance);
                         
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance)
            {
                $instance-&gt;ClearCookie();
             
                $tb = $instance-&gt;MainTab;
                if (($tb-&gt;IsVoid) || ($tb-&gt;IsNull)) return -1;
                if ($tb-&gt;IsBusy) $tb-&gt;WaitDownloading();
                $tb-&gt;Navigate("http://lessons.zennolab.com/ru/advanced");
                if ($tb-&gt;IsBusy) $tb-&gt;WaitDownloading();
                
                ZennoPoster::CaptchaRecognition("KeyCaptcha.dll", $instance);
                 
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.CaptchaRecognition(System.String,System.String,System.String,System.Boolean)">
            <summary>Recognizes the captcha through the specified DLL library.</summary>
            <overloads>Recognizes the captcha through the specified DLL library.</overloads>
            <param name="dllName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to DLL library.</para>
            </param>
            <param name="captcha">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The captcha for recognition.</para>
            </param>
            <param name="parameters">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The recognition parameters.</para>
            </param>
            <param name="asyncRecognize">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if need async way to recognize; otherwise and default, false.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The recognition result or id of async task.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.CaptchaSpecialRecognition(System.String,ZennoLab.CommandCenter.Instance)">CaptchaSpecialRecognition Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.WaitCaptchaRecognition(System.String)">WaitCaptchaRecognition Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="o:CaptchaRecognition">CaptchaRecognition</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance)
            {
                instance.ClearCookie();
             
                Tab tb = instance.MainTab;
                if ((tb.IsVoid) || (tb.IsNull)) return -1;
                if (tb.IsBusy) tb.WaitDownloading();
                tb.Navigate("http://lessons.zennolab.com/ru/advanced");
                if (tb.IsBusy) tb.WaitDownloading();
             
                HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByTag("form", 0).FindChildByAttribute("img", "fulltag", "img", "text", 0);
             
                string res = ZennoPoster.CaptchaRecognition("MonkeyEnter.dll", he.DrawToBitmap(true), "");
             
                he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByTag("form", 0).FindChildByName("recaptcha_response_field");
                he.SetValue(res, "Middle", false);
                        
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance)
            {
                $instance-&gt;ClearCookie();
             
                $tb = $instance-&gt;MainTab;
                if (($tb-&gt;IsVoid) || ($tb-&gt;IsNull)) return -1;
                if ($tb-&gt;IsBusy) $tb-&gt;WaitDownloading();
                $tb-&gt;Navigate("http://lessons.zennolab.com/ru/advanced");
                if ($tb-&gt;IsBusy) $tb-&gt;WaitDownloading();
             
                $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByTag("form", 0)-&gt;FindChildByAttribute("img", "fulltag", "img", "text", 0);
             
                $res = ZennoPoster::CaptchaRecognition("MonkeyEnter.dll", $he-&gt;DrawToBitmap(true), "");
             
                $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByTag("form", 0)-&gt;FindChildByName("recaptcha_response_field");
                $he-&gt;SetValue($res, "Middle", false);
                        
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.CaptchaRecognition(System.String,System.String,System.String,System.Boolean,System.String@)">
             <summary>Recognizes the captcha through the specified DLL library.</summary>
             <overloads>Recognizes the captcha through the specified DLL library.</overloads>
             <param name="dllName">
             	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
             	<para>The path to DLL library.</para>
             </param>
             <param name="captcha">
             	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
             	<para>The captcha for recognition.</para>
             </param>
             <param name="parameters">
             	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
             	<para>The recognition parameters.</para>
             </param>
             <param name="asyncRecognize">
             	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
             	<para>true if need async way to recognize; otherwise and default, false.</para>
             </param>
             <param name="confidence">
             	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
             	<para>The result confidence.</para>
             </param>
             <returns>
             	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
             	<para>The recognition result or id of async task.</para>
             </returns>
             <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.CaptchaSpecialRecognition(System.String,ZennoLab.CommandCenter.Instance)">CaptchaSpecialRecognition Method</seealso>
             <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.WaitCaptchaRecognition(System.String)">WaitCaptchaRecognition Method</seealso>
             <example>
             The following code example demonstrates uses of the <see cref="o:CaptchaRecognition">CaptchaRecognition</see> method.
             <code title="Example" description="" lang="C#">
             public static int Execute(Instance instance)
             {
                 instance.ClearCookie();
              
                 Tab tb = instance.MainTab;
                 if ((tb.IsVoid) || (tb.IsNull)) return -1;
                 if (tb.IsBusy) tb.WaitDownloading();
                 tb.Navigate("http://lessons.zennolab.com/ru/advanced");
                 if (tb.IsBusy) tb.WaitDownloading();
              
                 HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByTag("form", 0).FindChildByAttribute("img", "fulltag", "img", "text", 0);
            
                 string confidence;
                 string res = ZennoPoster.CaptchaRecognition("MonkeyEnter.dll", he.DrawToBitmap(true), "", false, out confidence);
              
                 he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByTag("form", 0).FindChildByName("recaptcha_response_field");
                 he.SetValue(res, "Middle", false);
                         
                 return 0;
             }</code></example>
             <requirements>
             	<para>
             		<strong>Target Platforms:</strong>
             		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
             </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ContextRecognition(System.String,System.String,System.Int32,System.Int32)">
            <summary>Recognizes the themes for the specified text.</summary>
            <param name="text">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The text for recognize.</para>
            </param>
            <param name="themesType">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The themes type. It can be <strong><em>general</em></strong> or <strong><em>detailed</em></strong>. The <strong><em>detailed</em></strong> is not support
            now.</para>
            </param>
            <param name="maxThemes">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The maximum count of the themes.</para>
            </param>
            <param name="relevance">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The minimum relevance for the themes.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The string which contains the all suitable themes written via separator.</para>
            </returns>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.CaptchaRecognition(System.String,System.String[],System.String,System.Boolean)">
            <summary>Recognizes the captcha through the specified DLL library.</summary>
            <overloads>Recognizes the captcha through the specified DLL library.</overloads>
            <param name="dllName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to DLL library.</para>
            </param>
            <param name="parameters">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The recognition parameters.</para>
            </param>
            <param name="captchas64Str">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>[]</para>
            	<para>An array of captures an array of strings.</para>
            </param>
            <param name="asyncRecognize">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if need async way to recognize; otherwise and default, false.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The recognition result or id of async task.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.CaptchaSpecialRecognition(System.String,ZennoLab.CommandCenter.Instance)">CaptchaSpecialRecognition Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.WaitCaptchaRecognition(System.String)">WaitCaptchaRecognition Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="o:CaptchaRecognition">CaptchaRecognition</see> method.
            <code title="" description="" lang="neutral"></code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.WaitCaptchaRecognition(System.String)">
            <summary>Wait the reconition task with specified id.</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The id of async revognition task.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The recognition result.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.CaptchaSpecialRecognition(System.String,ZennoLab.CommandCenter.Instance)">CaptchaSpecialRecognition Method</seealso>
            <example>
            The following code example demonstrates uses of the <see cref="o:CaptchaRecognition">CaptchaRecognition</see> method.
            <code title="Example" description="" lang="C#">
            public static int Execute(Instance instance)
            {
                instance.ClearCookie();
             
                Tab tb = instance.MainTab;
                if ((tb.IsVoid) || (tb.IsNull)) return -1;
                if (tb.IsBusy) tb.WaitDownloading();
                tb.Navigate("http://lessons.zennolab.com/ru/advanced");
                if (tb.IsBusy) tb.WaitDownloading();
             
                HtmlElement he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByTag("form", 0).FindChildByAttribute("img", "fulltag", "img", "text", 0);
             
                string id = ZennoPoster.CaptchaRecognition("MonkeyEnter.dll", he.DrawToBitmap(true), "", true);
             
                // some more action
                string res = ZennoPoster.WaitCaptchaRecognition(id);
                he = instance.GetTabByAddress("page").GetDocumentByAddress("0").FindElementByTag("form", 0).FindChildByName("recaptcha_response_field");
                he.SetValue(res, "Middle", false);
                        
                return 0;
            }</code><code title="Example2" description="" lang="PHP">
            public static function Execute($instance)
            {
                $instance-&gt;ClearCookie();
             
                $tb = $instance-&gt;MainTab;
                if (($tb-&gt;IsVoid) || ($tb-&gt;IsNull)) return -1;
                if ($tb-&gt;IsBusy) $tb-&gt;WaitDownloading();
                $tb-&gt;Navigate("http://lessons.zennolab.com/ru/advanced");
                if ($tb-&gt;IsBusy) $tb-&gt;WaitDownloading();
             
                $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByTag("form", 0)-&gt;FindChildByAttribute("img", "fulltag", "img", "text", 0);
             
                $id = ZennoPoster::CaptchaRecognition("MonkeyEnter.dll", $he-&gt;DrawToBitmap(true), "", true);
             
                // some more action
                $res = ZennoPoster::WaitCaptchaRecognition($id);
                $he = $instance-&gt;GetTabByAddress("page")-&gt;GetDocumentByAddress("0")-&gt;FindElementByTag("form", 0)-&gt;FindChildByName("recaptcha_response_field");
                $he-&gt;SetValue($res, "Middle", false);
                        
                return 0;
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.GetProxy(System.String,System.Boolean)">
            <summary>Returns the proxy with the removal.</summary>
            <param name="filterName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of the filter.</para>
            </param>
            <param name="canonical">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if need to get canonical format of address; otherwise and default, false.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>If <em>"canonical"</em> is false returns a string of the format "ip:port:isSocks"; otherwise returns a string of the format
            "protocol://login:password@ip:port". Default value of <em>"canonical"</em> is "false".</para>
            </returns>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.GetProxy(System.String,System.Boolean)">GetProxy</see> method.
            <code title="Example" description="" lang="C#">
            var proxy = ZennoPoster.GetProxy("filterName");</code><code title="Example2" description="" lang="PHP">
            $proxy = ZennoPoster::GetProxy("filterName");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.GetProxyWithOutDelete(System.String,System.Boolean)">
            <summary>Returns the a proxy without removing it.</summary>
            <param name="filterName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The name of the filter.</para>
            </param>
            <param name="canonical">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if need to get canonical format of address; otherwise and default, false.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>If <em>"canonical"</em> is false returns a string of the format "ip:port:isSocks"; otherwise returns a string of the format
            "protocol://login:password@ip:port". Default value of <em>"canonical"</em> is "false".</para>
            </returns>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.GetProxyWithOutDelete(System.String,System.Boolean)">GetProxyWithOutDelete</see> method.
            <code title="Example" description="" lang="CS">
            var proxy = ZennoPoster.GetProxyWithOutDelete("filterName");</code><code title="Example2" description="" lang="PHP">
            $proxy = ZennoPoster::GetProxyWithOutDelete("filterName");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.MailConfirm(System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.String[],System.String,System.Int32)">
            <summary>Returns the text the resulting after handling mail.</summary>
            <param name="timeoutSec">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Timeout specified in seconds. Three in a row above the number recorded by ";".</para>
            </param>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login for mail.</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password for mail.</para>
            </param>
            <param name="server">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The mail server.</para>
            </param>
            <param name="identityRegExp">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The regular expression to identify email.</para>
            </param>
            <param name="parserRegExp">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The regular expression for select the contents of email.</para>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The server port.</para>
            </param>
            <param name="useSSL">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use SSL; otherwise, false.</para>
            </param>
            <param name="useHTML">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if parse HTML; otherwise, false.</para>
            </param>
            <param name="useIMAP">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use IMAP; otherwise, false.</para>
            </param>
            <param name="removeMessages">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if remove messages; otherwise, false.</para>
            </param>
            <param name="machNum">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Number of match.</para>
            </param>
            <param name="throwsException">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if need to throw exceptions; otherwise and default, false. Standart types of exeption contains in CommandCenter.Exceptions.Mail namespace.</para>
            </param>
            <param name="imapFolderNames">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>[]</para>
            	<para>An array of names of imap folders.</para>
            </param>
            <param name="proxyString">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string in format: login:pass@ip:port OR ip:port.</para>
            </param>
            <param name="messageCountForLoad">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Maximum number of messages for loading from every selected folder for every time.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The result of processing emails.</para>
            </returns>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.MailConfirm(System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.Boolean,System.String[],System.String,System.Int32)">MailConfirm</see> method.
            <code title="Example" description="" lang="C#">
            try
            {
                var res = ZennoPoster.MailConfirm("15;30;60", {email}, {password}, {server}, {port}, true, true, true, false, {identityRexExp}, {parseRegExp}, 0, true);
            }
            catch(CommandCenter.Exceptions.Mail.ConnectionException ex)
            {
                // do something when connection to server failed
            }
            catch(CommandCenter.Exceptions.Mail.InvalidEmailCredentialException ex)
            {
                // do something when login/password was wrong
            }
            catch(CommandCenter.Exceptions.Mail.EmailNotFoundException ex)
            {
                // do something when email has not been found
            }
            catch(Exception ex)
            {
                // other exceptions
            }</code><code title="Example2" description="" lang="PHP">
            $res = ZennoPoster::MailConfirm("15;30;60", {email}, {password}, {server}, {port}, true, true, true, false, {identityRexExp}, {parseRegExp}, 0);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ValidateEmail(System.String,System.String,System.String)">
            <summary>Validate Email address using login and password.</summary>
            <overloads> Validate Email address.</overloads>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login for mail.</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password for mail.</para>
            </param>
            <param name="proxyString">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string in format: login:pass@ip:port OR ip:port.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.MailConfirm(System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32)">MailConfirm Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ValidateEmail(System.String,System.String,System.String)">ValidateEmail</see> method.
            <code title="Example" description="" lang="C#">
            try 
            {
                ZennoPoster.ValidateEmail({email}, {password});
            }
            catch
            {
                // Email not valid!
            }</code><code title="Example2" description="" lang="PHP">
            try 
            {
                $res = ZennoPoster::ValidateEmail({email}, {password});
            }
            catch(Exception $e) 
            { 
                // email not valid 
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ValidateEmail(System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>Validate Email address using extended parameters.</summary>
            <overloads> Validate Email address.</overloads>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login for mail.</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password for mail.</para>
            </param>
            <param name="server">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The mail server.</para>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The server port.</para>
            </param>
            <param name="useSSL">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use SSL; otherwise, false.</para>
            </param>
            <param name="useIMAP">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use IMAP; otherwise, false.</para>
            </param>
            <param name="proxyString">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string in format: login:pass@ip:port OR ip:port.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.MailConfirm(System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32)">MailConfirm Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ValidateEmail(System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String)">ValidateEmail</see> method.
            <code title="Example" description="" lang="C#">
            try 
            {
                ZennoPoster.ValidateEmail({email}, {password}, {server}, {port}, true, true);
            }
            catch
            {
                // Email not valid!
            }</code><code title="Example2" description="" lang="PHP">
            try 
            {
                $res = ZennoPoster::ValidateEmail({email}, {password}, {server}, {port}, true, true);
            }
            catch(Exception $e)
            { 
                // email not valid 
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.BulkMailDownload(System.String,System.String,System.String,System.Int32,System.Boolean,ZennoLab.InterfacesLibrary.Enums.Email.EmailProtocol,System.Int32,System.Int32,System.Boolean,System.String,System.Boolean)">
            <summary>Downloads the messages from the specified account.</summary>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login for mail (usualy your email address).</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password for mail.</para>
            </param>
            <param name="server">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The mail server. Default value is blank, ZennoPoster will try to determine your the settings.</para>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The server port. Default value is 143</para>
            </param>
            <param name="useSSL">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if use SSL; otherwise, false. Default value is true</para>
            </param>
            <param name="protocol">
            	<para>Type: ZennoLab.InterfacesLibrary.Enums.Email.EmailProtocol</para>
            	<para>IMAP or POP3. Default value is IMAP.</para>
            </param>
            <param name="lastHours">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>If message older than specified amount of hours will not be returned. Default value is 2 hours</para>
            </param>
            <param name="maxCount">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Max count of messages. Default value is 100.</para>
            </param>
            <param name="deleteMessages">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if remove messages; otherwise, false. Default value is false.</para>
            </param>
            <param name="proxyString">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string in format: login:pass@ip:port OR ip:port.</para>
            </param>
            <param name="throwException">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>true if have to throw the error exception; otherwise, false. The default value is false.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.tuple.aspx">System.Tuple</see></para>
            	<para>tuple.Item1 - sibject, tuple.Item2 - from, tuple.Item3 - html message with headers, tuple.Item4 - text message with headers</para>
            </returns>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.BulkMailDownload(System.String,System.String,System.String,System.Int32,System.Boolean,ZennoLab.InterfacesLibrary.Enums.Email.EmailProtocol,System.Int32,System.Int32,System.Boolean,System.String,System.Boolean)">BulkMailDownload</see> method.
            <code title="Example" description="" lang="C#">
            // download all messages from gmail via IMAP
            Tuple&lt;string, string, string, string&gt;[] allMails;
            allMails = ZennoPoster.BulkMailDownload("micosesus1979@gmail.com", 
                   "ххххххх", "imap.gmail.com", 993, true,
                   ZennoLab.InterfacesLibrary.Enums.Email.EmailProtocol.IMAP, 
                   24*100, 20, false);
             
            // loop fo all messages
            foreach(Tuple&lt;string, string, string, string&gt; tuple in allMails)
            {
                // TODO Something useful with messages
                // tuple.Item1 - sibject, tuple.Item2 - from, tuple.Item3 - html message, tuple.Item4 - text message
            }</code><code title="Example2" description="" lang="CS">
            // download all messages from gmail with auto settings detection for last 100 days.
            Tuple&lt;string, string, string, string&gt;[] allMails;
            allMails = ZennoPoster.BulkMailDownload("superuser@gmail.com", "хххххххххх", lastHours: 24*100);
             
            // loop fo all messages
            foreach(Tuple&lt;string, string, string, string&gt; tuple in allMails)
            {
                // TODO Something useful with messages
                // tuple.Item1 - sibject, tuple.Item2 - from, tuple.Item3 - html message, tuple.Item4 - text message
            }</code><code title="Example3" description="" lang="CS">
            // download all messages from yandex via POP3 and add results to the table
            Tuple&lt;string, string, string, string&gt;[] allMails;
            allMails = ZennoPoster.BulkMailDownload("superuser@yandex.ru", 
                   "ххххххххххх", "pop.yandex.ru", 995, true,
                   ZennoLab.InterfacesLibrary.Enums.Email.EmailProtocol.POP3, 
                   24*100, 20, false);
             
            // loop fo all messages
            foreach(Tuple&lt;string, string, string, string&gt; tuple in allMails)
            {
                // adding messages to the table called Tabl1
                // tuple.Item1 - sibject, tuple.Item2 - from, tuple.Item3 - html message, tuple.Item4 - text message
                  List&lt;string&gt; tmp = new List&lt;string&gt;();
                   tmp.Add(tuple.Item1);
                   tmp.Add(tuple.Item2);
                   tmp.Add(tuple.Item3);
                   tmp.Add(tuple.Item4);
                   project.Tables["Tabl1"].AddRow(tmp);
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.FtpDownload(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Download the file</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<span id="result_box" lang="en" class="short_text" xml:lang="en">
            		<span class="hps">Address of the</span>
            		<span class="hps">FTP</span>
            		<span class="hps">server.</span>
            	</span>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>
            		<span id="result_box" lang="en" class="short_text" xml:lang="en">
            			<span class="hps">Port of the</span>
            			<span class="hps">FTP</span>
            			<span class="hps">server.</span>
            		</span>
            	</para>
            </param>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Login of the FTP server</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Password of the FTP server</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Proxy string in format: login:pass@ip:port OR ip:port</para>
            </param>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>File name.</para>
            </param>
            <param name="localPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Destination path.</para>
            </param>
            <param name="protocol">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The FTP protocol. It can be "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTP</em></strong>", "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>sFTP</em></strong>", or "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTPs</em></strong>".</font></font></font></font></font></font></para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpChmode(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpChmode Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpCreateDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpCreateDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpGetList(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpGetList Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpUploadDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpUploadFile Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDownload(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpDownload</see> method.
            <code title="Example" description="" lang="C#">
            var list = new System.Collections.Generic.List&lt;string&gt;(ZennoPoster.FtpGetList({host}, {port}, {login}, {password}, {proxy}, "", false, false));
            foreach(var item in list)
                ZennoPoster.FtpDownload({host}, {port}, {protocol}, {login}, {password}, {proxy}, item, {directoryToSavePath});</code><code title="Example2" description="" lang="PHP">
            $list = new System::Collections::Generic::List&lt;string&gt;(ZennoPoster::FtpGetList({host}, {port}, {login}, {password}, {proxy}, "", false, false));
            foreach($item as $list)
                ZennoLab\CommandCenter\ZennoPoster::FtpDownload({host}, {port}, {protocol}, {login}, {password}, {proxy}, $item, {directoryToSavePath});</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Uploads the specified file.</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<span id="result_box" lang="en" class="short_text" xml:lang="en">
            		<span class="hps">The address of the</span>
            		<span class="hps">FTP</span>
            		<span class="hps">server.</span>
            	</span>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>
            		<span id="result_box" lang="en" class="short_text" xml:lang="en">
            			<span class="hps">The port of the</span>
            			<span class="hps">FTP</span>
            			<span class="hps">server.</span>
            		</span>
            	</para>
            </param>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login of the FTP server.</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password of the FTP server.</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The proxy string in format: login:pass@ip:port OR ip:port.</para>
            </param>
            <param name="serverPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The destination path.</para>
            </param>
            <param name="localPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to the file.</para>
            </param>
            <param name="protocol">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The FTP protocol. It can be "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTP</em></strong>", "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>sFTP</em></strong>", or "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTPs</em></strong>".</font></font></font></font></font></font></para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpChmode(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpChmode Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpCreateDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpCreateDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDownload(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpDownload Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpGetList(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpGetList Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpUploadDirectory Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpUploadFile</see> method.
            <code title="Example" description="" lang="C#">
            ZennoPoster.FtpUploadFile({host}, {port}, {protocol}, {login}, {password}, {proxy}, {directoryToUploadPath}, {filePath});</code><code title="Example2" description="" lang="PHP">
            ZennoLab\CommandCenter\ZennoPoster::FtpUploadFile({host}, {port}, {protocol}, {login}, {password}, {proxy}, {directoryToUploadPath}, {filePath});</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>Uploads the specified directory.</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<span id="result_box" lang="en" class="short_text" xml:lang="en">
            		<span class="hps">The address of the</span>
            		<span class="hps">FTP</span>
            		<span class="hps">server.</span>
            	</span>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>
            		<span id="result_box" lang="en" class="short_text" xml:lang="en">
            			<span class="hps">The port of the</span>
            			<span class="hps">FTP</span>
            			<span class="hps">server.</span>
            		</span>
            	</para>
            </param>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login of the FTP server.</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password of the FTP server.</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The proxy string in format: login:pass@ip:port OR ip:port.</para>
            </param>
            <param name="serverPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The destination path.</para>
            </param>
            <param name="localPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path to the file.</para>
            </param>
            <param name="recursive">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true for uploading all subdirectories, and files in <strong>localPath</strong>; otherwise, false.</para>
            </param>
            <param name="uncludeRootName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>The true for include root directory name; otherwise, false.</para>
            </param>
            <param name="protocol">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The FTP protocol. It can be "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTP</em></strong>", "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>sFTP</em></strong>", or "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTPs</em></strong>".</font></font></font></font></font></font></para>
            </param>
            <remarks>This method uploads directory and overwrite all exit items.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpChmode(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpChmode Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpCreateDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpCreateDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDownload(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpDownload Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpGetList(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpGetList Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpUploadFile Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpUploadDirectory</see> method.
            <code title="Example" description="" lang="C#">
            // upload all items from local directory to the directory with same name on ftp server
            ZennoPoster.FtpUploadDirectory("host_name", {port}, "protocol", "login", "password", "proxy", "ftp_path", "local_path", true, true);
             
            // upload all items from local directory to the with path "ftp_path"
            ZennoPoster.FtpUploadDirectory("host_name", {port}, "protocol", "login", "password", "proxy", "ftp_path", "local_path", true, false);</code><code title="Example2" description="" lang="PHP">
            // upload all items from local directory to the directory with same name on ftp server
            ZennoLab\CommandCenter\ZennoPoster::FtpUploadDirectory("host_name", {port}, "protocol", "login", "password", "proxy", "ftp_path", "local_path", true, true);
             
            // upload all items from local directory to the with path "ftp_path"
            ZennoLab\CommandCenter\ZennoPoster::FtpUploadDirectory("host_name", {port}, "protocol", "login", "password", "proxy", "ftp_path", "local_path", true, false);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>Delete the file.</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<span id="result_box" lang="en" class="short_text" xml:lang="en">
            		<span class="hps">The address of the</span>
            		<span class="hps">FTP</span>
            		<span class="hps">server.</span>
            	</span>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>
            		<span id="result_box" lang="en" class="short_text" xml:lang="en">
            			<span class="hps">The port of the</span>
            			<span class="hps">FTP</span>
            			<span class="hps">server.</span>
            		</span>
            	</para>
            </param>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login of the FTP server.</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password of the FTP server.</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The proxy string in format: login:pass@ip:port OR ip:port.</para>
            </param>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The file name.</para>
            </param>
            <param name="protocol">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The FTP protocol. It can be "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTP</em></strong>", "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>sFTP</em></strong>", or "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTPs</em></strong>".</font></font></font></font></font></font></para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpChmode(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpChmode Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpCreateDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpCreateDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDownload(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpDownload Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpGetList(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpGetList Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpUploadDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpUploadFile Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteFile</see> method.
            <code title="Example" description="" lang="C#">
            ZennoPoster.FtpDeleteFile({host}, {port}, {protocol}, {login}, {password}, {proxy}, {filePath});</code><code title="Example2" description="" lang="PHP">
            ZennoLab\CommandCenter\ZennoPoster::FtpDeleteFile({host}, {port}, {protocol}, {login}, {password}, {proxy}, {filePath});</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>Delete the directory.</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<span id="result_box" lang="en" class="short_text" xml:lang="en">
            		<span class="hps">The address of the</span>
            		<span class="hps">FTP</span>
            		<span class="hps">server.</span>
            	</span>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>
            		<span id="result_box" lang="en" class="short_text" xml:lang="en">
            			<span class="hps">The port of the</span>
            			<span class="hps">FTP</span>
            			<span class="hps">server.</span>
            		</span>
            	</para>
            </param>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login of the FTP server.</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password of the FTP server.</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The proxy string in format: login:pass@ip:port OR ip:port.</para>
            </param>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The directory name.</para>
            </param>
            <param name="protocol">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The FTP protocol. It can be "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTP</em></strong>", "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>sFTP</em></strong>", or "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTPs</em></strong>".</font></font></font></font></font></font></para>
            </param>
            <remarks>This method delete the directory even if specified directory contains others directories or files.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpChmode(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpChmode Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpCreateDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpCreateDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDownload(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpDownload Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpGetList(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpGetList Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpUploadDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpUploadFile Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteDirectory</see> method.
            <code title="Example" description="" lang="C#">
            ZennoPoster.FtpDeleteDirectory({host}, {port}, {protocol}, {login}, {password}, {proxy}, {directoryName});</code><code title="Example2" description="" lang="PHP">
            ZennoLab\CommandCenter\ZennoPoster::FtpDeleteDirectory({host}, {port}, {protocol}, {login}, {password}, {proxy}, {directoryName});</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.FtpCreateDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>Create a directory with the specified name.</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<span id="result_box" lang="en" class="short_text" xml:lang="en">
            		<span class="hps">The address of the</span>
            		<span class="hps">FTP</span>
            		<span class="hps">server.</span>
            	</span>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>
            		<span id="result_box" lang="en" class="short_text" xml:lang="en">
            			<span class="hps">The port of the</span>
            			<span class="hps">FTP</span>
            			<span class="hps">server.</span>
            		</span>
            	</para>
            </param>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login of the FTP server.</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password of the FTP server.</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The proxy string in format: login:pass@ip:port OR ip:port.</para>
            </param>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The directory name.</para>
            </param>
            <param name="protocol">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The FTP protocol. It can be "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTP</em></strong>", "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>sFTP</em></strong>", or "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTPs</em></strong>".</font></font></font></font></font></font></para>
            </param>
            <remarks>The parameter "name" can be directory name (for example: Folder) or directory path (for example: Folder\SubFolder). There are two ways specify the
            directory path. See example.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpChmode(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpChmode Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDownload(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpDownload Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpGetList(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpGetList Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpUploadDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpUploadFile Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpCreateDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpCreateDirectory</see> method.
            <code title="Example" description="" lang="C#">
            // create a new directory with name "newDirectory" on "host_name"
            ZennoPoster.FtpCreateDirectory("host_name", {port}, "protocol", "login", "password", "proxy", "newDirectory");
            // create a new directory with name "NewDirectory\newDirectory" on "host_name"
            ZennoPoster.FtpCreateDirectory("host_name", {port}, "protocol", "login", "password", "proxy", "NewDirectory\\newDirectory");
            // or this way
            ZennoPoster.FtpCreateDirectory("host_name", {port}, "protocol", "login", "password", "proxy", "NewDirectory/newDirectory");</code><code title="Example2" description="" lang="PHP">
            // create a new directory with name "newDirectory" on "host_name"
            ZennoLab\CommandCenter\ZennoPoster::FtpCreateDirectory("host_name", {port}, "protocol", "login", "password", "proxy", "newDirectory");
            // create a new directory with name "NewDirectory\newDirectory" on "host_name"
            ZennoLab\CommandCenter\ZennoPoster::FtpCreateDirectory("host_name", {port}, "protocol", "login", "password", "proxy", "NewDirectory\\newDirectory");
            // or this way
            ZennoLab\CommandCenter\ZennoPoster::FtpCreateDirectory("host_name", {port}, "protocol", "login", "password", "proxy", "NewDirectory/newDirectory");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.FtpChmode(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Changes the access mode of specified ftp item.</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<span id="result_box" lang="en" class="short_text" xml:lang="en">
            		<span class="hps">The address of the</span>
            		<span class="hps">FTP</span>
            		<span class="hps">server.</span>
            	</span>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>
            		<span lang="en" id="result_box" class="short_text" xml:lang="en">
            			<span class="hps">The port of the</span>
            			<span class="hps">FTP</span>
            			<span class="hps">server.</span>
            		</span>
            	</para>
            </param>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login of the FTP server.</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password of the FTP server.</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The proxy string in format: login:pass@ip:port OR ip:port.</para>
            </param>
            <param name="serverPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The path of ftp item.</para>
            </param>
            <param name="mode">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The mode for specified item. This a string value can be empty, in this case the mode of item will be <strong>"000"</strong>.</para>
            </param>
            <param name="protocol">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The FTP protocol. It can be "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTP</em></strong>", "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>sFTP</em></strong>", or "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTPs</em></strong>".</font></font></font></font></font></font></para>
            </param>
            <remarks>
            	<para>For changing mode on ftp server you should make sure that current server support the <strong>"SITE CHMOD"</strong> command otherwise, this operation can not
            be performed.</para>
            	<para>The specified item can be file or directory. In case if specified item is the directory, the mode will be changed only for this ftp item, all internal files
            and subdirectories will not change the mode.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpCreateDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpCreateDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDownload(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpDownload Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpGetList(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpGetList Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpUploadDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpUploadFile Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpChmode(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpChmode</see> method.
            <code title="Example" description="" lang="C#">
            // change mode for file located on path MyFolder\MyTXTFile.txt
            ZennoPoster.FtpChmode("your_host_name", 21, "protocol", "login", "password", "proxy", @"MyFolder\MyTXTFile.txt", "774");
            // change mode for directory located on path MyFolder\MySubFolder
            ZennoPoster.FtpChmode("your_host_name", 21, "protocol", "login", "password", "proxy", @"MyFolder\MySubFolder", "755");</code><code title="Example2" description="" lang="PHP">
            // change mode for file located on path MyFolder\MyTXTFile.txt
            ZennoLab\CommandCenter\ZennoPoster.FtpChmode("your_host_name", 21, "protocol", "login", "password", "proxy", "MyFolder\\MyTXTFile.txt", "774");
            // change mode for directory located on path MyFolder\MySubFolder
            ZennoLab\CommandCenter\ZennoPoster.FtpChmode("your_host_name", 21, "protocol", "login", "password", "proxy", "MyFolder\\MySubFolder", "755");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.FtpGetList(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>Returns all files in the directory.</summary>
            <param name="host">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<span id="result_box" lang="en" class="short_text" xml:lang="en">
            		<span class="hps">The address of the</span>
            		<span class="hps">FTP</span>
            		<span class="hps">server.</span>
            	</span>
            </param>
            <param name="port">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>
            		<span id="result_box" lang="en" class="short_text" xml:lang="en">
            			<span class="hps">The port of the</span>
            			<span class="hps">FTP</span>
            			<span class="hps">server.</span>
            		</span>
            	</para>
            </param>
            <param name="login">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The login of the FTP server.</para>
            </param>
            <param name="pass">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The password of the FTP server.</para>
            </param>
            <param name="proxy">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The proxy string in format: login:pass@ip:port OR ip:port.</para>
            </param>
            <param name="directoryName">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The directory name.</para>
            </param>
            <param name="recursive">
            	<para>Type: http://msdn.microsoft.com/en-us/library/system.boolean.aspx%</para>
            	<para>The true if use <span id="result_box" lang="en" class="short_text" xml:lang="en"><span class="hps">recursion</span></span>; otherwise, false.</para>
            </param>
            <param name="includeDirectory">
            	<para>Type: http://msdn.microsoft.com/en-us/library/system.boolean.aspx%</para>
            	<para>The true if use <span id="result_box" lang="en" class="short_text" xml:lang="en"><span class="hps">subdirectories</span></span>; otherwise, false.</para>
            </param>
            <param name="protocol">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The FTP protocol. It can be "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTP</em></strong>", "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>sFTP</em></strong>", or "<font size="2" face="Consolas"><font size="2" face="Consolas"><strong><em>FTPs</em></strong>".</font></font></font></font></font></font></para>
            </param>
            <returns>
            	<para>Type: IEnumerable&lt;string&gt;</para>
            	<para>The list of all files and directories represented by collection of the IEnumerable interface.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpChmode(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpChmode Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpCreateDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpCreateDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDeleteFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">FtpDeleteFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpDownload(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpDownload Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpUploadDirectory Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpUploadFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">FtpUploadFile Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.FtpGetList(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">FtpGetList</see> method.
            <code title="Example" description="" lang="C#">
            var list = new System.Collections.Generic.List&lt;string&gt;(ZennoPoster.FtpGetList({host}, {port}, {protocol}, {login}, {password}, {proxy}, "", false, false));</code><code title="Example2" description="" lang="PHP">
            $list = new System::Collections::Generic::List&lt;string&gt;(ZennoLab\CommandCenter\ZennoPoster::FtpGetList({host}, {port}, {protocol}, {login}, {password}, {proxy}, "", false, false));</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">
            <summary>Untreated image from screenshot.</summary>
            <param name="path">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="instancePort">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port of the instance.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.Port">Instance.Port Property</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot</see> method.
            <code title="" description="" lang="neutral"></code><code title="Example" description="" lang="C#">
            // image without processing 
            ZennoPoster.ImageProcessingUntreatedFromScreenshot(instance.Port, "C:\\ResultImage.jpeg");</code><code title="Example2" description="" lang="PHP">
            // image without processing 
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingUntreatedFromScreenshot($instance-&gt;Port, "C:\\ResultImage.jpeg");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">
            <summary>Untreated image from url.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The url of the image.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl</see> method.
            <code title="" description="" lang="neutral"></code><code title="Example" description="" lang="C#">
            // image without processing 
            ZennoPoster.ImageProcessingUntreatedFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg");</code><code title="Example2" description="" lang="PHP">
            // image without processing 
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingUntreatedFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">
            <summary>Untreated image from file.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="filePath">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The file path of the image for processing.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile</see> method.
            <code title="" description="" lang="neutral"></code><code title="Example" description="" lang="C#">
            // image without processing 
            ZennoPoster.ImageProcessingUntreatedFromFile("C:\\ImageForResize.jpeg", "C:\\ResultImage.jpeg");</code><code title="Example2" description="" lang="PHP">
            // image without processing 
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingUntreatedFromFile("C:\\ImageForResize.jpeg", "C:\\ResultImage.jpeg");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">
            <summary>Performs resizing of the image from screenshot.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="instancePort">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port of the instance.</para>
            </param>
            <param name="width">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>A new width of the image.</para>
            </param>
            <param name="height">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>A new height of the image.</para>
            </param>
            <param name="keep">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.String</see></para>
            	<para>If need to keep the aspect ratio then <strong><em>"true"</em></strong>; otherwise <strong><em>"false"</em></strong>.</para>
            </param>
            <param name="units">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Units of dimension of the parameters. It can be <strong><em>"pixel"</em></strong> or <strong><em>"percent"</em></strong>.</para>
            </param>
            <param name="notIncImage">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.String</see></para>
            	<para>If not increase size of the image then <strong><em>"true"</em></strong>; otherwise <strong><em>"false"</em></strong>.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The default value of the <strong><em>units</em></strong> parameter is <em><strong>"pixel"</strong></em>.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.Port">Instance.Port Property</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot</see> method.
            <code title="Example" description="" lang="C#">
            // resize image from screenshot, the width and height in pixel
            ZennoPoster.ImageProcessingResizeFromScreenshot(instance.Port, "C:\\ResultImage.jpeg", 100, 120, "pixel", true, false);
             
            // resize image from screenshot, the width and height in percentage
            ZennoPoster.ImageProcessingResizeFromScreenshot(instance.Port, "C:\\ResultImage.jpeg", 200, 200, "percent", true, false);</code><code title="Example2" description="" lang="PHP">
            // resize image from screenshot, the width and height in pixel
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingResizeFromScreenshot($instance-&gt;Port, "C:\\ResultImage.jpeg", 100, 120, "pixel", true, false);
             
            // resize image from screenshot, the width and height in percentage
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingResizeFromScreenshot($instance-&gt;Port, "C:\\ResultImage.jpeg", 200, 200, "percent", true, false);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">
            <summary>Performs resizing of the image from url.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The url of the image.</para>
            </param>
            <param name="width">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>A new width of the image.</para>
            </param>
            <param name="height">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>A new height of the image.</para>
            </param>
            <param name="units">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Units of dimension of the parameters. It can be <strong><em>"pixel"</em></strong> or <strong><em>"percent"</em></strong>.</para>
            </param>
            <param name="keep">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.String</see></para>
            	<para>If need to keep the aspect ratio then <strong><em>"true"</em></strong>; otherwise <strong><em>"false"</em></strong>.</para>
            </param>
            <param name="notIncImage">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.String</see></para>
            	<para>If not increase size of the image then <strong><em>"true"</em></strong>; otherwise <strong><em>"false"</em></strong>.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The default value of the <strong><em>units</em></strong> parameter is <em><strong>"pixel"</strong></em>.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl</see> method.
            <code title="Example" description="" lang="C#">
            // resize image from url, the width and height in pixel
            ZennoPoster.ImageProcessingResizeFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", 100, 120, "pixel", true, false);
             
            // resize image from url, the width and height in percentage
            ZennoPoster.ImageProcessingResizeFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", 200, 200, "percent", true, false);</code><code title="Example2" description="" lang="PHP">
            // resize image from url, the width and height in pixel
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingResizeFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", 100, 120, "pixel", true, false);
             
            // resize image from url, the width and height in percentage
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingResizeFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", 200, 200, "percent", true, false);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">
            <summary>Performs resizing of the image from file.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="filePath">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The file path of the image for processing.</para>
            </param>
            <param name="width">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>A new width of the image.</para>
            </param>
            <param name="height">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>A new height of the image.</para>
            </param>
            <param name="units">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Units of dimension of the parameters. It can be <strong><em>"pixel"</em></strong> or <strong><em>"percent"</em></strong>.</para>
            </param>
            <param name="keep">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.String</see></para>
            	<para>If need to keep the aspect ratio then <strong><em>"true"</em></strong>; otherwise <strong><em>"false"</em></strong>.</para>
            </param>
            <param name="notIncImage">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.String</see></para>
            	<para>If not increase size of the image then <strong><em>"true"</em></strong>; otherwise <strong><em>"false"</em></strong>.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The default value of the <strong><em>units</em></strong> parameter is <em><strong>"pixel"</strong></em>.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile</see> method.
            <code title="Example" description="" lang="C#">
            // resize image from file, the width and height in pixel
            ZennoPoster.ImageProcessingResizeFromFile("C:\\ImageForResize.jpeg", "C:\\ResultImage.jpeg", 100, 120, "pixel", true, false);
             
            // resize image from file, the width and height in percentage
            ZennoPoster.ImageProcessingResizeFromFile("C:\\ImageForResize.jpeg", "C:\\ResultImage.jpeg", 200, 200, "percent", true, false);</code><code title="Example2" description="" lang="PHP">
            // resize image from file, the width and height in pixel
            ZennoLab\CommandCenter\ZennoPoster.ImageProcessingResizeFromFile("C:\\ImageForResize.jpeg", "C:\\ResultImage.jpeg", 100, 120, "pixel", true, false);
             
            // resize image from file, the width and height in percentage
            ZennoLab\CommandCenter\ZennoPoster.ImageProcessingResizeFromFile("C:\\ImageForResize.jpeg", "C:\\ResultImage.jpeg", 200, 200, "percent", true, false);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">
            <summary>Performs cropping of the image from screenshot.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="leftBorder">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The indent from left border of the image.</para>
            </param>
            <param name="topBorder">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The indent from top border of the image.</para>
            </param>
            <param name="cropWidth">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The width for cropping.</para>
            </param>
            <param name="cropHeight">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The height for cropping.</para>
            </param>
            <param name="units">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Units of dimension of the parameters. It can be <strong><em>"pixel"</em></strong> or <strong><em>"percent"</em></strong>.</para>
            </param>
            <param name="instancePort">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port of the instance.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The default value of the <strong><em>units</em></strong> parameter is <em><strong>"pixel"</strong></em>.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.Port">Instance.Port Property</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot</see> method.
            <code title="Example" description="" lang="C#">
            // cropping image from screenshot, the width and height in pixel
            ZennoPoster.ImageProcessingCropFromScreenshot(instance.Port, "C:\\ResultImage.jpeg", 10, 10, 150, 250, "pixel");
             
            // cropping image from screenshot, the width and height in percentage
            ZennoPoster.ImageProcessingCropFromScreenshot(instance.Port, "C:\\ResultImage.jpeg", 10, 10, 150, 250, "percent");</code><code title="Example2" description="" lang="PHP">
            // cropping image from screenshot, the width and height in pixel
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingCropFromScreenshot($instance-&gt;Port, "C:\\ResultImage.jpeg", 10, 10, 150, 250, "pixel");
             
            // cropping image from screenshot, the width and height in percentage
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingCropFromScreenshot(#instance-&gt;Port, "C:\\ResultImage.jpeg", 10, 10, 150, 250, "percent");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">
            <summary>Performs cropping of the image from url.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="leftBorder">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The indent from left border of the image.</para>
            </param>
            <param name="topBorder">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The indent from top border of the image.</para>
            </param>
            <param name="cropWidth">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The width for cropping.</para>
            </param>
            <param name="cropHeight">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The height for cropping.</para>
            </param>
            <param name="units">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Units of dimension of the parameters. It can be <strong><em>"pixel"</em></strong> or <strong><em>"percent"</em></strong>.</para>
            </param>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The url of the image.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The default value of the <strong><em>units</em></strong> parameter is <strong><em>"pixel"</em></strong>.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl</see> method.
            <code title="Example" description="" lang="C#">
            // cropping image from url, the width and height in pixel
            ZennoPoster.ImageProcessingCropFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", 10, 10, 150, 250, "pixel");
             
            // cropping image from url, the width and height in percentage
            ZennoPoster.ImageProcessingCropFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", 10, 10, 150, 250, "percent");</code><code title="Example2" description="" lang="PHP">
            // cropping image from url, the width and height in pixel
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingCropFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", 10, 10, 150, 250, "pixel");
             
            // cropping image from url, the width and height in percentage
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingCropFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", 10, 10, 150, 250, "percent");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">
            <summary>Performs cropping of the image from file.</summary>
            <param name="filePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The file path of the image for processing.</para>
            </param>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="leftBorder">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The indent from left border of the image.</para>
            </param>
            <param name="topBorder">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The indent from top border of the image.</para>
            </param>
            <param name="cropWidth">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The width for cropping.</para>
            </param>
            <param name="cropHeight">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The height for cropping.</para>
            </param>
            <param name="units">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Units of dimension of the parameters. It can be <strong><em>"pixel"</em></strong> or <strong><em>"percent"</em></strong>.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The default value of the <strong><em>units</em></strong> parameter is <em><strong>"pixel"</strong></em>.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile</see> method.
            <code title="" description="" lang="neutral"></code><code title="Example" description="" lang="C#">
            // cropping image from file, the width and height in pixel
            ZennoPoster.ImageProcessingCropFromFile("C:\\ImageForCrop.jpeg", "C:\\ResultImage.jpeg", 10, 10, 150, 250, "pixel");
             
            // cropping image from file, the width and height in percentage
            ZennoPoster.ImageProcessingCropFromFile("C:\\ImageForCrop.jpeg", "C:\\ResultImage.jpeg", 10, 10, 75, 75, "percent");</code><code title="Example2" description="" lang="PHP">
            // cropping image from file, the width and height in pixel
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingCropFromFile("C:\\ImageForCrop.jpeg", "C:\\ResultImage.jpeg", 10, 10, 150, 250, "pixel");
             
            // cropping image from file, the width and height in percentage
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingCropFromFile("C:\\ImageForCrop.jpeg", "C:\\ResultImage.jpeg", 10, 10, 75, 75, "percent");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">
            <summary>Performs rotation of the image from screenshot.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="instancePort">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port of the instance.</para>
            </param>
            <param name="angle">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>An angle of the rotation.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The <strong><em>angle</em></strong> is specified in degrees.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.Port">Instance.Port Property</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot</see> method.
            <code title="Example" description="" lang="C#">
            // the rotation of image at 45 degrees
            ZennoPoster.ImageProcessingRotateFromScreenshot(instance.Port, "C:\\ResultImage.jpeg", 45);</code><code title="Example2" description="" lang="PHP">
            // the rotation of image at 45 degrees
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingRotateFromScreenshot($instance-&gt;Port, "C:\\ResultImage.jpeg", 45);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>Performs rotation of the image from url.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The url of the image.</para>
            </param>
            <param name="angle">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>An angle of the rotation.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The <strong><em>angle</em></strong> is specified in degrees.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl</see> method.
            <code title="Example" description="" lang="C#">
            // the rotation of image at 45 degrees
            ZennoPoster.ImageProcessingRotateFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", 45);</code><code title="Example2" description="" lang="PHP">
            // the rotation of image at 45 degrees
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingRotateFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", 45);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>Performs rotation of the image from file.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="filePath">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The file path of the image for processing.</para>
            </param>
            <param name="angle">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>An angle of the rotation.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The <strong><em>angle</em></strong> is specified in degrees.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile</see> method.
            <code title="Example" description="" lang="C#">
            // the rotation of image at 45 degrees
            ZennoPoster.ImageProcessingRotateFromFile("C:\\ImageForResize.jpeg", "C:\\ResultImage.jpeg", 45);</code><code title="Example2" description="" lang="PHP">
            // the rotation of image at 45 degrees
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingRotateFromFile("C:\\ImageForResize.jpeg", "C:\\ResultImage.jpeg", 45);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Adds the water mark fom text to image from screenshot.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="transparency">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The transparency of the water mark. The value from <strong>0</strong> to <strong>100</strong>.</para>
            </param>
            <param name="imposition">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the imposition. It can be <strong><em>"horizontally"</em></strong> or <strong><em>"diagonally"</em></strong>.</para>
            </param>
            <param name="instancePort">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port of the instance.</para>
            </param>
            <param name="location">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the location. It can be <strong><em>"center"</em></strong>, <strong><em>"leftbottom"</em></strong>, <strong><em>"lefttop"</em></strong>,
            <strong><em>"rightbottom"</em></strong> or <em><strong>"righttop"</strong></em>.</para>
            </param>
            <param name="text">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The text of the water mark.</para>
            </param>
            <param name="style">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The string of the style in format: <strong>[Font], [Size]pt, [TextSyle], ... , [TextSyle], [Color_alfa, Color_red, Color_green, Color_blue]</strong></para>
            </param>
            <param name="offsetLeft">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The offset from left. Default value is <strong>0</strong>.</para>
            </param>
            <param name="offsetTop">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The offset from top. Default value is <strong>0</strong>.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The default value of the <strong><em><i>imposition</i></em></strong> parameter is
            <strong><em>"</em></strong><strong><em>horizontally</em></strong><strong><em>"</em></strong>. The default value of the <strong><em>location</em></strong> is
            <em><strong>"center"</strong></em>.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.Port">Instance.Port Property</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot</see> method.
            <code title="Example" description="" lang="C#">
            // add water mark text to image from sceenshot
            ZennoPoster.ImageProcessingWaterMarkTextFromFile(instance.Port, "C:\\ResultImage.jpeg", "horizontally", "center", "water mark text", 50, "Tahoma, 24pt, Bold, Italic, Underline, [255;0;0;0]", 10, 10);</code><code title="Example2" description="" lang="PHP">
            // add water mark text to image from sceenshot
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingWaterMarkTextFromFile($instance-&gt;Port, "C:\\ResultImage.jpeg", "horizontally", "center", "water mark text", 50, "Tahoma, 24pt, Bold, Italic, Underline, [255;0;0;0]", 10, 10);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Adds the water mark fom text to image from url.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The url of the image.</para>
            </param>
            <param name="transparency">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The transparency of the water mark. The value from <strong>0</strong> to <strong>100</strong>.</para>
            </param>
            <param name="imposition">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the imposition. It can be <strong><em>"horizontally"</em></strong> or <strong><em>"diagonally"</em></strong>.</para>
            </param>
            <param name="location">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the location. It can be <strong><em>"center"</em></strong>, <strong><em>"leftbottom"</em></strong>, <strong><em>"lefttop"</em></strong>,
            <strong><em>"rightbottom"</em></strong> or <em><strong>"righttop"</strong></em>.</para>
            </param>
            <param name="text">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The text of the water mark.</para>
            </param>
            <param name="style">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The string of the style in format: <strong>[Font], [Size]pt, [TextSyle], ... , [TextSyle], [Color_alfa, Color_red, Color_green, Color_blue]</strong></para>
            </param>
            <param name="offsetLeft">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The offset from left. Default value is <strong>0</strong>.</para>
            </param>
            <param name="offsetTop">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The offset from top. Default value is <strong>0</strong>.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The default value of the <strong><em><i>imposition</i></em></strong> parameter is
            <strong><em>"</em></strong><strong><em>horizontally</em></strong><strong><em>"</em></strong>. The default value of the <strong><em>location</em></strong> is
            <em><strong>"center"</strong></em>.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl</see> method.
            <code title="Example" description="" lang="C#">
            // add water mark text to image from url
            ZennoPoster.ImageProcessingWaterMarkTextFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", "horizontally", "center", "water mark text", 50, "Tahoma, 24pt, Bold, Italic, Underline, [255;0;0;0]", 10, 10);</code><code title="Example2" description="" lang="PHP">
            // add water mark text to image from url
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingWaterMarkTextFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", "horizontally", "center", "water mark text", 50, "Tahoma, 24pt, Bold, Italic, Underline, [255;0;0;0]", 10, 10);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Adds the water mark fom text to image from file.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="filePath">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The file path of the image for processing.</para>
            </param>
            <param name="transparency">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The transparency of the water mark. The value from <strong>0</strong> to <strong>100</strong>.</para>
            </param>
            <param name="imposition">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the imposition. It can be <strong><em>"horizontally"</em></strong> or <strong><em>"diagonally"</em></strong>.</para>
            </param>
            <param name="location">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the location. It can be <strong><em>"center"</em></strong>, <strong><em>"leftbottom"</em></strong>, <strong><em>"lefttop"</em></strong>,
            <strong><em>"rightbottom"</em></strong> or <em><strong>"righttop"</strong></em>.</para>
            </param>
            <param name="text">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The text of the water mark.</para>
            </param>
            <param name="style">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The string of the style in format: <strong>[Font], [Size]pt, [TextSyle], ... , [TextSyle], [Color_alfa, Color_red, Color_green, Color_blue]</strong></para>
            </param>
            <param name="offsetLeft">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The offset from left. Default value is <strong>0</strong>.</para>
            </param>
            <param name="offsetTop">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The offset from top. Default value is <strong>0</strong>.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The default value of the <strong><em><i>imposition</i></em></strong> parameter is
            <strong><em>"</em></strong><strong><em>horizontally</em></strong><strong><em>"</em></strong>. The default value of the <strong><em>location</em></strong> is
            <em><strong>"center"</strong></em>.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile</see> method.
            <code title="Example" description="" lang="C#">
            // add water mark text to image from file
            ZennoPoster.ImageProcessingWaterMarkTextFromFile("C:\\ImageForWaterMark.jpeg", "C:\\ResultImage.jpeg", "horizontally", "center", "water mark text", 50, "Tahoma, 24pt, Bold, Italic, Underline, [255;0;0;0]", 10, 10);</code><code title="Example2" description="" lang="PHP">
            // add water mark text to image from file
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingWaterMarkTextFromFile("C:\\ImageForWaterMark.jpeg", "C:\\ResultImage.jpeg", "horizontally", "center", "water mark text", 50, "Tahoma, 24pt, Bold, Italic, Underline, [255;0;0;0]", 10, 10);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Adds the water mark from image to image from screenshot.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="instancePort">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port of the instance.</para>
            </param>
            <param name="imposition">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the imposition. It can be <strong><em>"horizontally"</em></strong> or <strong><em>"diagonally"</em></strong>.</para>
            </param>
            <param name="location">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the location. It can be <strong><em>"center"</em></strong>, <strong><em>"leftbottom"</em></strong>, <strong><em>"lefttop"</em></strong>,
            <strong><em>"rightbottom"</em></strong> or <em><strong>"righttop"</strong></em>.</para>
            </param>
            <param name="path">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The file path of the image which will be a water mark.</para>
            </param>
            <param name="transparency">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The transparency of the water mark. The value from <strong>0</strong> to <strong>100</strong>.</para>
            </param>
            <param name="offsetLeft">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The offset from left. Default value is <strong>0</strong>.</para>
            </param>
            <param name="offsetTop">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The offset from top. Default value is <strong>0</strong>.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The default value of the <strong><em><i>imposition</i></em></strong> parameter is
            <strong><em>"</em></strong><strong><em>horizontally</em></strong><strong><em>"</em></strong>. The default value of the <strong><em>location</em></strong> is
            <em><strong>"center"</strong></em>.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.Port">Instance.Port Property</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot</see> method.
            <code title="Example" description="" lang="C#">
            // add water mark to image from screenshot
            ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(instance.Port, "C:\\ResultImage.jpeg", "horizontally", "center", "C:\\WaterMarkImage.jpeg", 50, 10, 10);</code><code title="Example2" description="" lang="PHP">
            // add water mark to image from screenshot
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingWaterMarkImageFromScreenshot($instance-&gt;Port, "C:\\ResultImage.jpeg", "horizontally", "center", "C:\\WaterMarkImage.jpeg", 50, 10, 10);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Adds the water mark from image to image from url.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The url of the image.</para>
            </param>
            <param name="transparency">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The transparency of the water mark. The value from <strong>0</strong> to <strong>100</strong>.</para>
            </param>
            <param name="imposition">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the imposition. It can be <strong><em>"horizontally"</em></strong> or <strong><em>"diagonally"</em></strong>.</para>
            </param>
            <param name="location">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the location. It can be <strong><em>"center"</em></strong>, <strong><em>"leftbottom"</em></strong>, <strong><em>"lefttop"</em></strong>,
            <strong><em>"rightbottom"</em></strong> or <em><strong>"righttop"</strong></em>.</para>
            </param>
            <param name="path">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The file path of the image which will be a water mark.</para>
            </param>
            <param name="offsetLeft">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The offset from left. Default value is <strong>0</strong>.</para>
            </param>
            <param name="offsetTop">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The offset from top. Default value is <strong>0</strong>.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The default value of the <strong><em><i>imposition</i></em></strong> parameter is
            <strong><em>"</em></strong><strong><em>horizontally</em></strong><strong><em>"</em></strong>. The default value of the <strong><em>location</em></strong> is
            <em><strong>"center"</strong></em>.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl</see> method.
            <code title="Example" description="" lang="C#">
            // add water mark to image from url
            ZennoPoster.ImageProcessingWaterMarkImageFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", "horizontally", "center", "C:\\WaterMarkImage.jpeg", 50, 10, 10);</code><code title="Example2" description="" lang="PHP">
            // add water mark to image from url
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingWaterMarkImageFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", "horizontally", "center", "C:\\WaterMarkImage.jpeg", 50, 10, 10);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Adds the water mark from image to image from file.</summary>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="filePath">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The file path of the image for processing.</para>
            </param>
            <param name="imposition">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the imposition. It can be <strong><em>"horizontally"</em></strong> or <strong><em>"diagonally"</em></strong>.</para>
            </param>
            <param name="location">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the location. It can be <strong><em>"center"</em></strong>, <strong><em>"leftbottom"</em></strong>, <strong><em>"lefttop"</em></strong>,
            <strong><em>"rightbottom"</em></strong> or <em><strong>"righttop"</strong></em>.</para>
            </param>
            <param name="path">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The file path of the image which will be a water mark.</para>
            </param>
            <param name="transparency">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The transparency of the water mark. The value from <strong>0</strong> to <strong>100</strong>.</para>
            </param>
            <param name="offsetLeft">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The offset from left. Default value is <strong>0</strong>.</para>
            </param>
            <param name="offsetTop">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The offset from top. Default value is <strong>0</strong>.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>The default value of the <strong><em><i>imposition</i></em></strong> parameter is
            <strong><em>"</em></strong><strong><em>horizontally</em></strong><strong><em>"</em></strong>. The default value of the <strong><em>location</em></strong> is
            <em><strong>"center"</strong></em>.</para>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile</see> method.
            <code title="Example" description="" lang="C#">
            // add water mark to image from file
            ZennoPoster.ImageProcessingWaterMarkImageFromFile("C:\\ImageForWaterMark.jpeg", "C:\\ResultImage.jpeg", "horizontally", "center", "C:\\WaterMarkImage.jpeg", 50, 10, 10);</code><code title="Example2" description="" lang="PHP">
            // add water mark to image from file
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingWaterMarkImageFromFile("C:\\ImageForWaterMark.jpeg", "C:\\ResultImage.jpeg", "horizontally", "center", "C:\\WaterMarkImage.jpeg", 50, 10, 10);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>Performs the mirror reflection of the image from screenshot.</summary>
            <param name="mirror">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the mirror reflection. It can be <strong><em>"Horizontal"</em></strong>, <strong><em>"Vertical"</em></strong>,
            <strong><em>"HorizontalVertical"</em></strong>. This parameter is not case-sensitive.</para>
            </param>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="instancePort">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port of the instance.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.Port">Instance.Port Property</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot</see> method.
            <code title="Example" description="" lang="C#">
            // performs the horizontal mirror reflection of screenshot and save it to newImage.jpg
            ZennoPoster.ImageProcessingMirrorFromScreenshot(instance.Port, "C:\\newImage.jpg", "Horizontal");
            // performs the vertical mirror reflection of screenshot and save it to newImage.jpg
            ZennoPoster.ImageProcessingMirrorFromScreenshot(instance.Port, "C:\\newImage.jpg", "Vertical");
            // performs the horizontal and vertical mirror reflection of screenshot and save it to newImage.jpg
            ZennoPoster.ImageProcessingMirrorFromScreenshot(instance.Port, "C:\\newImage.jpg", "HorizontalVertical");</code><code title="Example2" description="" lang="PHP">
            // performs the horizontal mirror reflection of screenshot and save it to newImage.jpg
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingMirrorFromScreenshot(instance.Port, "C:\\newImage.jpg", "Horizontal");
            // performs the vertical mirror reflection of screenshot and save it to newImage.jpg
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingMirrorFromScreenshot(instance.Port, "C:\\newImage.jpg", "Vertical");
            // performs the horizontal and vertical mirror reflection of screenshot and save it to newImage.jpg
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingMirrorFromScreenshot(instance.Port, "C:\\newImage.jpg", "HorizontalVertical");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>Performs the mirror reflection of the image from url.</summary>
            <param name="mirror">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the mirror reflection. It can be <strong><em>"Horizontal"</em></strong>, <strong><em>"Vertical"</em></strong>,
            <strong><em>"HorizontalVertical"</em></strong>. This parameter is not case-sensitive.</para>
            </param>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The url of the image.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl</see> method.
            <code title="Example" description="" lang="C#">
            // performs the horizontal mirror reflection of image from url and save it to newImage.jpg
            ZennoPoster.ImageProcessingMirrorFromUrl("someurl.com/image.php", "C:\\newImage.jpg", "Horizontal");
            // performs the vertical mirror reflection of image from url and save it to newImage.jpg
            ZennoPoster.ImageProcessingMirrorFromUrl("someurl.com/image.php", "C:\\newImage.jpg", "Vertical");
            // performs the horizontal and vertical mirror reflection of image from url and save it to newImage.jpg
            ZennoPoster.ImageProcessingMirrorFromUrl("someurl.com/image.php", "C:\\newImage.jpg", "HorizontalVertical");</code><code title="Example2" description="" lang="PHP">
            // performs the horizontal mirror reflection of image from url and save it to newImage.jpg
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingMirrorFromUrl("someurl.com/image.php", "C:\\newImage.jpg", "Horizontal");
            // performs the vertical mirror reflection of image from url and save it to newImage.jpg
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingMirrorFromUrl("someurl.com/image.php", "C:\\newImage.jpg", "Vertical");
            // performs the horizontal and vertical mirror reflection of image from url and save it to newImage.jpg
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingMirrorFromUrl("someurl.com/image.php", "C:\\newImage.jpg", "HorizontalVertical");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>Performs the mirror reflection of image from file.</summary>
            <param name="filePath">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The file path of the image for processing.</para>
            </param>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="mirror">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The type of the mirror reflection. It can be <strong><em>"Horizontal"</em></strong>, <strong><em>"Vertical"</em></strong>,
            <strong><em>"HorizontalVertical"</em></strong>. This parameter is not case-sensitive.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="exif">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The <em>Exif</em> Tags for metadata of image. Default value is <strong>empty string</strong>. Each tag must be written from a new line. The format of data
            is follow: <em><strong>{TagName}|{TagValue}</strong></em>.</para>
            </param>
            <remarks>
            	<para>If parameter of <em><strong>quality</strong></em> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</para>
            </remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile</see> method.
            <code title="Example" description="" lang="C#">
            // performs the horizontal mirror reflection of oldImage.jpg and saves it to newImage.jpg
            ZennoPoster.ImageProcessingMirrorFromFile("C:\\oldImage.jpg", "C:\\newImage.jpg", "Horizontal");
            // performs the vertical mirror reflection of oldImage.jpg and saves it to newImage.jpg
            ZennoPoster.ImageProcessingMirrorFromFile("C:\\oldImage.jpg", "C:\\newImage.jpg", "Vertical");
            // performs the horizontal and vertical mirror reflection of oldImage.jpg and saves it to newImage.jpg
            ZennoPoster.ImageProcessingMirrorFromFile("C:\\oldImage.jpg", "C:\\newImage.jpg", "HorizontalVertical");</code><code title="Example2" description="" lang="PHP">
            // performs the horizontal mirror reflection of oldImage.jpg and saves it to newImage.jpg
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingMirrorFromFile("C:\\oldImage.jpg", "C:\\newImage.jpg", "Horizontal");
            // performs the vertical mirror reflection of oldImage.jpg and saves it to newImage.jpg
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingMirrorFromFile("C:\\oldImage.jpg", "C:\\newImage.jpg", "Vertical");
            // performs the horizontal and vertical mirror reflection of oldImage.jpg and saves it to newImage.jpg
            ZennoLab\CommandCenter\ZennoPoster::ImageProcessingMirrorFromFile("C:\\oldImage.jpg", "C:\\newImage.jpg", "HorizontalVertical");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">
            <summary>Performs clearing all EXIF tags in metadata of image loaded from screenshot.</summary>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="instancePort">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The port of the instance.</para>
            </param>
            <remarks>If parameter of <strong><em>quality</em></strong> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <seealso cref="P:ZennoLab.CommandCenter.Instance.Port">Instance.Port Property</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot</see> method.
            <code title="Example" description="" lang="C#">
            // clear exif for image from screenshot
            ZennoPoster.ImageProcessingClearExifFromScreenshot(instance.Port, "C:\\ResultImage.jpeg", 100);</code><code title="Example2" description="" lang="PHP">
            // clear exif for image from screenshot
            ZennoPoster::ImageProcessingClearExifFromScreenshot(instance.Port, "C:\\ResultImage.jpeg", 100);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">
            <summary>Performs clearing all EXIF tags in metadata of image loaded from url.</summary>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="url">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The url of the image.</para>
            </param>
            <remarks>If parameter of <strong><em>quality</em></strong> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl</see> method.
            <code title="Example" description="" lang="C#">
            // clear exif for image from url
            ZennoPoster.ImageProcessingClearExifFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", 100);</code><code title="Example2" description="" lang="PHP">
            // clear exif for image from url
            ZennoPoster::ImageProcessingClearExifFromUrl("someurl.com/image.php", "C:\\ResultImage.jpeg", 100);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">
            <summary>Performs clearing all EXIF tags in metadata of image loaded from file.</summary>
            <param name="filePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The file path of the image for processing.</para>
            </param>
            <param name="savePath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The save file path.</para>
            </param>
            <param name="quality">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The image quality. The value from <strong>0</strong> to <strong>100</strong>. Default value is <strong>100</strong>.</para>
            </param>
            <remarks>If parameter of <strong><em>quality</em></strong> not in the range from <strong>0</strong> to <strong>100</strong> then this value will be changed to
            <strong>100</strong>.</remarks>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromScreenshot(System.Int32,System.String,System.Int32)">ImageProcessingClearExifFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromUrl(System.String,System.String,System.Int32)">ImageProcessingClearExifFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingCropFromUrl(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.String)">ImageProcessingCropFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromFile(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromScreenshot(System.Int32,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingMirrorFromUrl(System.String,System.String,System.String,System.Int32,System.String)">ImageProcessingMirrorFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromFile(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingResizeFromUrl(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.String)">ImageProcessingResizeFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromFile(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromScreenshot(System.Int32,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingRotateFromUrl(System.String,System.String,System.Int32,System.Int32,System.String)">ImageProcessingRotateFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromFile(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromScreenshot(System.Int32,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingUntreatedFromUrl(System.String,System.String,System.Int32,System.String)">ImageProcessingUntreatedFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkImageFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkImageFromUrl Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromFile(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromFile Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromScreenshot(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromScreenshot Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingWaterMarkTextFromUrl(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">ImageProcessingWaterMarkTextFromUrl Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImageProcessingClearExifFromFile(System.String,System.String,System.Int32)">ImageProcessingClearExifFromFile</see> method.
            <code title="Example" description="" lang="C#">
            // clear exif for image from file
            ZennoPoster.ImageProcessingClearExifFromFile("C:\\ImageForClear.jpeg", "C:\\ResultImage.jpeg", 100);</code><code title="Example2" description="" lang="PHP">
            // clear exif for image from file
            ZennoPoster::ImageProcessingClearExifFromFile("C:\\ImageForClear.jpeg", "C:\\ResultImage.jpeg", 100);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.CommandCenter.ZennoPoster.TasksList">
            <summary>Gets the collection of tasks</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.collections.ienumerable.aspx">System.Collection.IEnumerable</see></para>
            	<para>Collection of tasks <span id="result_box" lang="en" class="short_text" xml:lang="en"><span class="hps alt-edited">in</span><span class="hps">xml</span><span class="hps">format.</span></span></para>
            </value>
            <example>
            The following example shows call the <see cref="P:ZennoLab.CommandCenter.ZennoPoster.TasksList">TasksList</see> property.
            <code title="Example" description="" lang="C#">
            // Gets list of tasks
            var tasksList = ZennoPoster.TasksList;</code><code title="Example2" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = ZennoPoster::TasksList;</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.AddTask(System.String)">
            <summary>Add a new task.</summary>
            <param name="task">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The new task to add in xml format.</para>
            </param>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.AddTask(System.String)">AddTask</see> method.
            <code title="Example" description="" lang="C#">
            // Create a task in xml format
            var task =
            @"&lt;Id&gt;{guid}&lt;/Id&gt;
            &lt;Name&gt;{name}&lt;/Name&gt;
            &lt;CreateTime&gt;{date DD.MM.YYYY hh:mm:ss}&lt;/CreateTime&gt;
            &lt;ExecutionSettings&gt;    
                &lt;LimitOfThreads&gt;1&lt;/LimitOfThreads&gt;
                &lt;MaxAllowOfThreads&gt;0&lt;/MaxAllowOfThreads&gt;
                &lt;DoneSuccessfully&gt;0&lt;/DoneSuccessfully&gt;
                &lt;DoneAll&gt;0&lt;/DoneAll&gt;
                &lt;NumberOfTries&gt;0&lt;/NumberOfTries&gt;
                &lt;LastNumberOfTries&gt;0&lt;/LastNumberOfTries&gt;
                &lt;Priority&gt;50&lt;/Priority&gt;
                &lt;Proxy&gt;{DoNotUseProxy, IfPossible, UseProxyWithoutRemove, UseProxy}&lt;/Proxy&gt;
                &lt;Status&gt;Newbie&lt;/Status&gt;
                &lt;ProxyLabels&gt;&lt;/ProxyLabels&gt;
                &lt;ShouldBeExecutedRandomly&gt;{True, False}&lt;/ShouldBeExecutedRandomly&gt;
                &lt;GroupLabels&gt;Без метки&lt;/GroupLabels&gt;
                &lt;GroupStates&gt;Выполнены&lt;/GroupStates&gt;
                &lt;MaxNumOfSuccessStop&gt;-1&lt;/MaxNumOfSuccessStop&gt;
                &lt;MaxNumOfFailStop&gt;-1&lt;/MaxNumOfFailStop&gt;
                &lt;NumOfFailStop&gt;0&lt;/NumOfFailStop&gt;
            &lt;/ExecutionSettings&gt;
            &lt;Scheduler7Settings&gt;
            	&lt;IsActive&gt;{True, False}&lt;/IsActive&gt;
            	&lt;ExecutePeriod&gt;{OneTime, EveryDay, EveryWeek, EveryMonth, OnDemand}&lt;/ExecutePeriod&gt; 
            	<!--Only for ExecutePeriod EveryWeek-->
            	&lt;DaysOfWeek&gt;{Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday}&lt;/DaysOfWeek&gt; 
            	<!--Only for ExecutePeriod EveryMonth-->
            	&lt;DaysOfMonth&gt;1-5,10,20&lt;/DaysOfMonth&gt; 
            	<!--Only for ExecutePeriod OnDemand--> 
            	&lt;FileName&gt;C:\Program Files\ZennoLab\signalFile.txt&lt;/FileName&gt;&lt;IsNeedDeleteFile&gt;{True, False}&lt;/IsNeedDeleteFile&gt;
            	&lt;StartDateType&gt;{Immediately, OnDate}&lt;/StartDateType&gt; 
            	<!--Only for StartDateType OnDate-->
            	&lt;StartDate&gt;{date DD.MM.YYYY hh:mm:ss}&lt;/StartDate&gt; 
            	&lt;AttemptsRange&gt;{5, 5 -10}&lt;/AttemptsRange&gt; &lt;IsClearSuccess&gt;{True, False}&lt;/IsClearSuccess&gt; 
            	<!--Do not use for round-the-clock distribution-->
            	&lt;Intervals&gt;{09:00,12:00 - 17:00}&lt;/Intervals&gt; 
            	&lt;RepeatType&gt;{Continued, ContinuedWithPause, Regularly, Count}&lt;/RepeatType&gt; 
            	<!--Every N or from N to M minutes for ContinuedWithPause and Regulary RepeatTypes; the amount of distributions for Count RepeatType;-->
            	&lt;RepeatCountDayRange&gt;{1, 5 -10}&lt;/RepeatCountDayRange&gt;
            	&lt;EndDateType&gt;{Infinity, OnDate, Count}&lt;/EndDateType&gt; 
            	<!--Only for EndDateType Count-->
            	&lt;RepeatCountTotalRange&gt;{50, 75-100}&lt;/RepeatCountTotalRange&gt; 
            	<!--Only for EndDateType OnDate--> 
            	&lt;EndDate&gt;{date DD.MM.YYYY hh:mm:ss}&lt;/EndDate&gt;
            &lt;/Scheduler7Settings&gt;
            &lt;Project&gt;
                &lt;ProjectFileLocation&gt;{path}&lt;/ProjectFileLocation&gt;
                &lt;ProjectType&gt;Assembly&lt;/ProjectType&gt;
            &lt;/Project&gt;";
            // Add the task
            ZennoPoster.AddTask(task);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.RemoveTask(System.Guid)">
            <summary>Remove the task</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id of task to remove.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.AddTask(System.String)">AddTask Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.RemoveTask(System.Guid)">RemoveTask</see> method.
            <code title="Example" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task id
                var xpath = "Task/Id";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string result;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    result = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                Guid id;
                // Parse guid
                if (Guid.TryParse(result, out id))
                    // If ok, remove the task
                    ZennoPoster.RemoveTask(id);
                else
                    throw new FormatException(string.Format("{0} is not guid", result));
            }</code><code title="Example2" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task id
                $xpath = "Task/Id";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $result;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $result = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                $id = "";
                // Parse guid
                if (Guid::TryParse($result, $id))
                    // If ok, remove the task
                    ZennoPoster::RemoveTask($id);
                else
                    throw new FormatException(String::Format("{0} is not guid", $result));
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.GetTaskInfo(System.Guid)">
            <summary>Get the information of task</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id of task to start.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Task information in xml format.</para>
            </returns>
            <example>
            The following example shows call the <see cref="o:GetTaskInfo">GetTaskInfo</see> method.
            <code title="Example" description="" lang="C#">
            // Gets information of task from the known task's id
            var task = ZennoPoster.GetTaskInfo(id);</code><code title="Example2" description="" lang="PHP">
            // Gets information of task from the known task's id
            $task = ZennoPoster::GetTaskInfo($id);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.GetTaskInfo(System.String)">
            <summary>Get the information of task</summary>
            <param name="projectPath">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Path to project of task</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Task information in xml format.</para>
            </returns>
            <example>
            The following example shows call the <see cref="o:GetTaskInfo">GetTaskInfo</see> method.
            <code title="Example" description="" lang="C#">
            // Gets information of task from the known task's project path
            var task = ZennoPoster.GetTaskInfo(path);</code><code title="Example2" description="" lang="PHP">
            // Gets information of task from the known task's project path
            $task = ZennoPoster::GetTaskInfo($path);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.StopTask(System.Guid)">
            <summary>Stop the task by id.</summary>
            <overloads>Stop the task.</overloads>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>
            		<span id="result_box" lang="en" class="short_text" xml:lang="en">
            			<span class="hps alt-edited">Id of</span>
            			<span class="hps alt-edited">task</span>
            			<span class="hps">to stop.</span>
            		</span>
            	</para>
            </param>
            <example>
            The following example shows call the <see cref="o:StopTask">StopTask</see> method.
            <code title="Example2" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task id
                var xpath = "Task/Id";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string result;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    result = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                Guid id;
                // Parse guid
                if (Guid.TryParse(result, out id))
                    // If ok, stop the task
                    ZennoPoster.StopTask(id);
                else
                    throw new FormatException(string.Format("{0} is not guid", result));
            }</code><code title="Example" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task id
                $xpath = "Task/Id";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $result;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $result = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                $id = "";
                // Parse guid
                if (Guid::TryParse($result, $id))
                    // If ok, stop the task
                    ZennoPoster::StopTask($id);
                else
                    throw new FormatException(String::Format("{0} is not guid", $result));
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.StopTask(System.String)">
            <summary>Stop the task by name.</summary>
            <overloads>Stop the task.</overloads>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>
            		<span lang="en" id="result_box" class="short_text" xml:lang="en">
            			<span class="hps alt-edited">Name of</span>
            			<span class="hps alt-edited">task</span>
            			<span class="hps">to stop. Finds the first occurrence.</span>
            		</span>
            	</para>
            </param>
            <example>
            The following example shows call the <see cref="o:StopTask">StopTask</see> method.
            <code title="Example2" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task name
                var xpath = "Task/Name";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string name;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    name = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                if(!String.IsNullOrEmpty(name))
                    // If ok, stop first task with this name
                    ZennoPoster.StopTask(name);
                else
                    throw new FormatException("Name is empty");
            }</code><code title="Example" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task name
                $xpath = "Task/Name";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $name;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $name = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                if (String::IsNullOrEmpty($name))
                    // If ok, stop first task with this name
                    ZennoPoster::StopTask($name);
                else
                    throw new FormatException("Name is empty");
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.InterruptTask(System.Guid)">
            <summary>Interrupt the task by id.</summary>
            <overloads>Interrupt the task.</overloads>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>
            		<span id="result_box" lang="en" class="short_text" xml:lang="en">
            			<span class="hps alt-edited">Id of</span>
            			<span class="hps alt-edited">task</span>
            			<span class="hps">to interrupt.</span>
            		</span>
            	</para>
            </param>
            <example>
            The following example shows call the <see cref="o:InterruptTask">InterruptTask</see> method.
            <code title="Example2" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task id
                var xpath = "Task/Id";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string result;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    result = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                Guid id;
                // Parse guid
                if (Guid.TryParse(result, out id))
                    // If ok, interrupt the task
                    ZennoPoster.InterruptTask(id);
                else
                    throw new FormatException(string.Format("{0} is not guid", result));
            }</code><code title="Example" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task id
                $xpath = "Task/Id";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $result;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $result = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                $id = "";
                // Parse guid
                if (Guid::TryParse($result, $id))
                    // If ok, interrupt the task
                    ZennoPoster::InterruptTask($id);
                else
                    throw new FormatException(String::Format("{0} is not guid", $result));
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.InterruptTask(System.String)">
            <summary>Interrupt the task by name.</summary>
            <overloads>Interrupt the task.</overloads>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>
            		<span lang="en" id="result_box" class="short_text" xml:lang="en">
            			<span class="hps alt-edited">Name of</span>
            			<span class="hps alt-edited">task</span>
            			<span class="hps">to interrupt. Finds the first occurrence.</span>
            		</span>
            	</para>
            </param>
            <example>
            The following example shows call the <see cref="o:InterruptTask">InterruptTask</see> method.
            <code title="Example2" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task name
                var xpath = "Task/Name";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string name;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    name = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                if(!String.IsNullOrEmpty(name))
                    // If ok, interrupt first task with this name
                    ZennoPoster.InterruptTask(name);
                else
                    throw new FormatException("Name is empty");
            }</code><code title="Example" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task name
                $xpath = "Task/Name";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $name;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $name = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                if (String::IsNullOrEmpty($name))
                    // If ok, interrupt first task with this name
                    ZennoPoster::InterruptTask($name);
                else
                    throw new FormatException("Name is empty");
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.StartTask(System.Guid)">
            <summary>Start the task by id.</summary>
            <overloads>Start the task.</overloads>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id of task to start.</para>
            </param>
            <example>
            The following example shows call the <see cref="o:StartTask">StartTask</see> method.
            <code title="Example" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task id
                var xpath = "Task/Id";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string result;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    result = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                Guid id;
                // Parse guid
                if (Guid.TryParse(result, out id))
                    // If ok, start the task
                    ZennoPoster.StartTask(id);
                else
                    throw new FormatException(string.Format("{0} is not guid", result));
            }</code><code title="Example2" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task id
                $xpath = "Task/Id";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $result;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $result = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                $id = "";
                // Parse guid
                if (Guid::TryParse($result, $id))
                    // If ok, start the task
                    ZennoPoster::StartTask($id);
                else
                    throw new FormatException(String::Format("{0} is not guid", $result));
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.StartTask(System.String)">
            <summary>Start the task by name.</summary>
            <overloads>Start the task.</overloads>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Name of task to start. Finds the first occurrence.</para>
            </param>
            <example>
            The following example shows call the <see cref="o:StartTask">StartTask</see> method.
            <code title="Example" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task name
                var xpath = "Task/Name";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string name;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    name = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                if(!String.IsNullOrEmpty(name))
                    // If ok, start first task with this name
                    ZennoPoster.StartTask(name);
                else
                    throw new FormatException("Name is empty");
            }</code><code title="Example2" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task name
                $xpath = "Task/Name";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $name;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $name = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                if (String::IsNullOrEmpty($name))
                    // If ok, start first task with this name
                    ZennoPoster::StartTask($name);
                else
                    throw new FormatException("Name is empty");
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.AddTries(System.Guid,System.Int32)">
            <summary>Adds tries to the task</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id of task.</para>
            </param>
            <param name="count">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Count of tries to add.</para>
            </param>
            <example>
            The following example shows call the <see cref="o:AddTries">AddTries</see> method.
            <code title="Example" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task id
                var xpath = "Task/Id";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string result;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    result = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                Guid id;
                // Parse guid
                if (Guid.TryParse(result, out id))
                    // If ok, start the task
                    ZennoPoster.AddTries(id, 30);
                else
                    throw new FormatException(string.Format("{0} is not guid", result));
            }</code><code title="Example2" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task id
                $xpath = "Task/Id";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $result;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $result = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                $id = "";
                // Parse guid
                if (Guid::TryParse($result, $id))
                    // If ok, start the task
                    ZennoPoster::AddTries($id, 30);
                else
                    throw new FormatException(String::Format("{0} is not guid", $result));
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.AddTries(System.String,System.Int32)">
            <summary>Adds tries to the task</summary>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Name of task. Finds the first occurrence.</para>
            </param>
            <param name="count">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Count of tries to add.</para>
            </param>
            <example>
            The following example shows call the <see cref="o:AddTries">AddTries</see> method.
            <code title="Example" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task name
                var xpath = "Task/Name";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string name;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    name = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                if(!String.IsNullOrEmpty(name))
                    // If ok, adds tries to first task with this name
                    ZennoPoster.AddTries(name, 30);
                else
                    throw new FormatException("Name is empty");
            }</code><code title="Example2" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task name
                $xpath = "Task/Name";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $name;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $name = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                if (String::IsNullOrEmpty($name))
                    // If ok, adds tries to first task with this name
                    ZennoPoster::AddTries($name, 30);
                else
                    throw new FormatException("Name is empty");
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.SetTries(System.Guid,System.Int32)">
            <summary>Sets tries to the task by id.</summary>
            <overloads>Sets tries to the task.</overloads>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id of task.</para>
            </param>
            <param name="count">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Count of tries to set.</para>
            </param>
            <example>
            The following example shows call the <see cref="o:SetTries">SetTries</see> method.
            <code title="Example" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task id
                var xpath = "Task/Id";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string result;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    result = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                Guid id;
                // Parse guid
                if (Guid.TryParse(result, out id))
                    // If ok, start the task
                    ZennoPoster.SetTries(id, 50);
                else
                    throw new FormatException(string.Format("{0} is not guid", result));
            }</code><code title="Example2" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task id
                $xpath = "Task/Id";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $result;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $result = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                $id = "";
                // Parse guid
                if (Guid::TryParse($result, $id))
                    // If ok, start the task
                    ZennoPoster::SetTries($id, 50);
                else
                    throw new FormatException(String::Format("{0} is not guid", $result));
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.SetMaxThreads(System.Guid,System.Int32)">
            <summary>Sets max threads to the task by id.</summary>
            <overloads>Sets max threads to the task.</overloads>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id of task.</para>
            </param>
            <param name="count">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Count of tries to set.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.SetTries(System.String,System.Int32)">
            <summary>Sets tries to the task by name.</summary>
            <overloads>Sets tries to the task.</overloads>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Name of task. Finds the first occurrence.</para>
            </param>
            <param name="count">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Count of tries to set.</para>
            </param>
            <example>
            The following example shows call the <see cref="o:SetTries">SetTries</see> method.
            <code title="Example" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task name
                var xpath = "Task/Name";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string name;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    name = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                if(!String.IsNullOrEmpty(name))
                    // If ok, sets tries to first task with this name
                    ZennoPoster.SetTries(name, 50);
                else
                    throw new FormatException("Name is empty");
            }</code><code title="Example2" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task name
                $xpath = "Task/Name";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $name;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $name = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                if (String::IsNullOrEmpty($name))
                    // If ok, sets tries to first task with this name
                    ZennoPoster::SetTries($name, 50);
                else
                    throw new FormatException("Name is empty");
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.SetMaxThreads(System.String,System.Int32)">
            <summary>Sets max threads to the task by name.</summary>
            <overloads>Sets tries to the task.</overloads>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Name of task. Finds the first occurrence.</para>
            </param>
            <param name="count">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Count of tries to set.</para>
            </param>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ClearSuccess(System.Guid)">
            <summary>Clear success of the task by id.</summary>
            <overloads>Clear success of the task.</overloads>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id of task.</para>
            </param>
            <example>
            The following example shows call the <see cref="o:ClearSuccess">ClearSuccess</see> method.
            <code title="Example" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task id
                var xpath = "Task/Id";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string result;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    result = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                Guid id;
                // Parse guid
                if (Guid.TryParse(result, out id))
                    // If ok, clear success of the task
                    ZennoPoster.ClearSuccess(id);
                else
                    throw new FormatException(string.Format("{0} is not guid", result));
            }</code><code title="Example2" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task id
                $xpath = "Task/Id";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $result;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $result = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                $id = "";
                // Parse guid
                if (Guid::TryParse($result, $id))
                    // If ok, clear success of the task
                    ZennoPoster::ClearSuccess($id);
                else
                    throw new FormatException(String::Format("{0} is not guid", $result));
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ClearFails(System.Guid)">
            <summary>Clear fails of the task by id.</summary>
            <overloads>Clear fails of the task.</overloads>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id of task.</para>
            </param>
            <example>
            The following example shows call the <see cref="o:ClearFails">ClearFails</see> method.
            <code title="Example" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task id
                var xpath = "Task/Id";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string result;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    result = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                Guid id;
                // Parse guid
                if (Guid.TryParse(result, out id))
                    // If ok, clear fails of the task
                    ZennoPoster.ClearFails(id);
                else
                    throw new FormatException(string.Format("{0} is not guid", result));
            }</code><code title="Example2" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task id
                $xpath = "Task/Id";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $result;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $result = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                $id = "";
                // Parse guid
                if (Guid::TryParse($result, $id))
                    // If ok, clear fails of the task
                    ZennoPoster::ClearFails($id);
                else
                    throw new FormatException(String::Format("{0} is not guid", $result));
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ClearSuccess(System.String)">
            <summary>Clear success of the task by name.</summary>
            <overloads>Clear success of the task.</overloads>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Name of task. Finds the first occurrence.</para>
            </param>
            <example>
            The following example shows call the <see cref="o:ClearSuccess">ClearSuccess</see> method.
            <code title="Example" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task name
                var xpath = "Task/Name";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string name;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    name = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                if(!String.IsNullOrEmpty(name))
                    // If ok, clears success for first task with this name
                    ZennoPoster.ClearSuccess(name);
                else
                    throw new FormatException("Name is empty");
            }</code><code title="Example2" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task name
                $xpath = "Task/Name";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $name;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $name = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                if (String::IsNullOrEmpty($name))
                    // If ok, clears success for first task with this name
                    ZennoPoster::ClearSuccess($name);
                else
                    throw new FormatException("Name is empty");
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ClearFails(System.String)">
            <summary>Clear fails of the task by name.</summary>
            <overloads>Clear fails of the task.</overloads>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Name of task. Finds the first occurrence.</para>
            </param>
            <example>
            The following example shows call the <see cref="o:ClearFails">ClearFails</see> method.
            <code title="Example" description="" lang="C#">
            // Gets list of tasks
            var tasksList = new List&lt;string&gt;(ZennoPoster.TasksList);
             
            // Check the presence of items in the list
            if(tasksList.Count != 0)
            {
                // Select ane item
                var source = tasksList[0];
                // Sets path to task name
                var xpath = "Task/Name";
             
                // Gets guid string from task data
                var doc = new System.Xml.XmlDocument();
                doc.LoadXml("&lt;Task&gt;" + source + "&lt;/Task&gt;");
                string name;
                var node = doc.SelectSingleNode(xpath);
                if (node != null)
                    name = node.InnerXml;
                else 
                    throw new InvalidDataException(string.Format("{0} is null", xpath));
             
                if(!String.IsNullOrEmpty(name))
                    // If ok, clears fails for first task with this name
                    ZennoPoster.ClearFails(name);
                else
                    throw new FormatException("Name is empty");
            }</code><code title="Example2" description="" lang="PHP">
            // Gets list of tasks
            $tasksList = new List&lt;string&gt;(ZennoPoster::TasksList);
             
            // Check the presence of items in the list
            if(tasksList-&gt;Count != 0)
            {
                // Select ane item
                $source = $tasksList[0];
                // Sets path to task name
                $xpath = "Task/Name";
             
                // Gets guid string from task data
                $doc = new System\Xml\XmlDocument();
                $doc-&gt;LoadXml("&lt;Task&gt;" + $source + "&lt;/Task&gt;");
                $name;
                $node = $doc-&gt;SelectSingleNode($xpath);
                if ($node != null)
                    $name = $node-&gt;InnerXml;
                else 
                    throw new InvalidDataException(String::Format("{0} is null", $xpath));
             
                if (String::IsNullOrEmpty($name))
                    // If ok, clears fails for first task with this name
                    ZennoPoster::ClearFails($name);
                else
                    throw new FormatException("Name is empty");
            }</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.SetExecutionSettings(System.Guid,System.String)">
            <summary>Set the execution settings by id.</summary>
            <overloads>Set the execution settings.</overloads>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id task to change execution settings.</para>
            </param>
            <param name="executionSettings">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>New execution settings to change in xml format.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.SetSchedulerSettings(System.Guid,System.String)">SetSchedulerSettings Method</seealso>
            <example>
            The following example shows call the <see cref="o:SetExecutionSettings">SetExecutionSettings</see> method.
            <code title="Example" description="" lang="C#">
            // Create execution settings in xml format
            var settings =
            @"&lt;LimitOfThreads&gt;1&lt;/LimitOfThreads&gt;
            &lt;MaxAllowOfThreads&gt;0&lt;/MaxAllowOfThreads&gt;
            &lt;DoneSuccessfully&gt;0&lt;/DoneSuccessfully&gt;
            &lt;DoneAll&gt;0&lt;/DoneAll&gt;
            &lt;NumberOfTries&gt;0&lt;/NumberOfTries&gt;
            &lt;LastNumberOfTries&gt;0&lt;/LastNumberOfTries&gt;
            &lt;Priority&gt;50&lt;/Priority&gt;
            &lt;Proxy&gt;{DoNotUseProxy, IfPossible, UseProxyWithoutRemove, UseProxy}&lt;/Proxy&gt;
            &lt;Status&gt;Newbie&lt;/Status&gt;
            &lt;ProxyLabels&gt;&lt;/ProxyLabels&gt;
            &lt;ShouldBeExecutedRandomly&gt;{True, False}&lt;/ShouldBeExecutedRandomly&gt;
            &lt;GroupLabels&gt;Без метки&lt;/GroupLabels&gt;
            &lt;GroupStates&gt;Выполнены&lt;/GroupStates&gt;
            &lt;MaxNumOfSuccessStop&gt;-1&lt;/MaxNumOfSuccessStop&gt;
            &lt;MaxNumOfFailStop&gt;-1&lt;/MaxNumOfFailStop&gt;
            &lt;NumOfFailStop&gt;0&lt;/NumOfFailStop&gt;";
            // Set the settings to the task with known id
            var id = Guid.Empty;
            ZennoPoster.SetExecutionSettings(id, settings);</code><code title="Example2" description="" lang="PHP">
            // Create execution settings in xml format
            $settings =
            @"&lt;LimitOfThreads&gt;1&lt;/LimitOfThreads&gt;
            &lt;MaxAllowOfThreads&gt;0&lt;/MaxAllowOfThreads&gt;
            &lt;DoneSuccessfully&gt;0&lt;/DoneSuccessfully&gt;
            &lt;DoneAll&gt;0&lt;/DoneAll&gt;
            &lt;NumberOfTries&gt;0&lt;/NumberOfTries&gt;
            &lt;LastNumberOfTries&gt;0&lt;/LastNumberOfTries&gt;
            &lt;Priority&gt;50&lt;/Priority&gt;
            &lt;Proxy&gt;{DoNotUseProxy, IfPossible, UseProxyWithoutRemove, UseProxy}&lt;/Proxy&gt;
            &lt;Status&gt;Newbie&lt;/Status&gt;
            &lt;ProxyLabels&gt;&lt;/ProxyLabels&gt;
            &lt;ShouldBeExecutedRandomly&gt;{True, False}&lt;/ShouldBeExecutedRandomly&gt;
            &lt;GroupLabels&gt;Без метки&lt;/GroupLabels&gt;
            &lt;GroupStates&gt;Выполнены&lt;/GroupStates&gt;
            &lt;MaxNumOfSuccessStop&gt;-1&lt;/MaxNumOfSuccessStop&gt;
            &lt;MaxNumOfFailStop&gt;-1&lt;/MaxNumOfFailStop&gt;
            &lt;NumOfFailStop&gt;0&lt;/NumOfFailStop&gt;";
            // Set the settings to the task with known id
            $id = Guid::Empty;
            ZennoPoster::SetExecutionSettings($id, $settings);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.SetExecutionSettings(System.String,System.String)">
            <summary>Set the execution settings by name.</summary>
            <overloads>Set the execution settings.</overloads>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Name of task to change execution settings. Finds the first occurrence.</para>
            </param>
            <param name="executionSettings">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>New execution settings to change in xml format.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.SetSchedulerSettings(System.Guid,System.String)">SetSchedulerSettings Method</seealso>
            <example>
            The following example shows call the <see cref="o:SetExecutionSettings">SetExecutionSettings</see> method.
            <code title="Example" description="" lang="C#">
            // Create execution settings in xml format
            var settings =
            @"&lt;LimitOfThreads&gt;1&lt;/LimitOfThreads&gt;
            &lt;MaxAllowOfThreads&gt;0&lt;/MaxAllowOfThreads&gt;
            &lt;DoneSuccessfully&gt;0&lt;/DoneSuccessfully&gt;
            &lt;DoneAll&gt;0&lt;/DoneAll&gt;
            &lt;NumberOfTries&gt;0&lt;/NumberOfTries&gt;
            &lt;LastNumberOfTries&gt;0&lt;/LastNumberOfTries&gt;
            &lt;Priority&gt;50&lt;/Priority&gt;
            &lt;Proxy&gt;{DoNotUseProxy, IfPossible, UseProxyWithoutRemove, UseProxy}&lt;/Proxy&gt;
            &lt;Status&gt;Newbie&lt;/Status&gt;
            &lt;ProxyLabels&gt;&lt;/ProxyLabels&gt;
            &lt;ShouldBeExecutedRandomly&gt;{True, False}&lt;/ShouldBeExecutedRandomly&gt;
            &lt;GroupLabels&gt;Без метки&lt;/GroupLabels&gt;
            &lt;GroupStates&gt;Выполнены&lt;/GroupStates&gt;
            &lt;MaxNumOfSuccessStop&gt;-1&lt;/MaxNumOfSuccessStop&gt;
            &lt;MaxNumOfFailStop&gt;-1&lt;/MaxNumOfFailStop&gt;
            &lt;NumOfFailStop&gt;0&lt;/NumOfFailStop&gt;";
            // Set the settings to first task with known name
            var name = "Name";
            ZennoPoster.SetExecutionSettings(name, settings);</code><code title="Example2" description="" lang="PHP">
            // Create execution settings in xml format
            $settings =
            @"&lt;LimitOfThreads&gt;1&lt;/LimitOfThreads&gt;
            &lt;MaxAllowOfThreads&gt;0&lt;/MaxAllowOfThreads&gt;
            &lt;DoneSuccessfully&gt;0&lt;/DoneSuccessfully&gt;
            &lt;DoneAll&gt;0&lt;/DoneAll&gt;
            &lt;NumberOfTries&gt;0&lt;/NumberOfTries&gt;
            &lt;LastNumberOfTries&gt;0&lt;/LastNumberOfTries&gt;
            &lt;Priority&gt;50&lt;/Priority&gt;
            &lt;Proxy&gt;{DoNotUseProxy, IfPossible, UseProxyWithoutRemove, UseProxy}&lt;/Proxy&gt;
            &lt;Status&gt;Newbie&lt;/Status&gt;
            &lt;ProxyLabels&gt;&lt;/ProxyLabels&gt;
            &lt;ShouldBeExecutedRandomly&gt;{True, False}&lt;/ShouldBeExecutedRandomly&gt;
            &lt;GroupLabels&gt;Без метки&lt;/GroupLabels&gt;
            &lt;GroupStates&gt;Выполнены&lt;/GroupStates&gt;
            &lt;MaxNumOfSuccessStop&gt;-1&lt;/MaxNumOfSuccessStop&gt;
            &lt;MaxNumOfFailStop&gt;-1&lt;/MaxNumOfFailStop&gt;
            &lt;NumOfFailStop&gt;0&lt;/NumOfFailStop&gt;";
            // Set the settings to first task with known name
            $name = "Name";
            ZennoPoster::SetExecutionSettings($name, $settings);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.SetSchedulerSettings(System.Guid,System.String)">
            <summary>Set the sсheduler settings by id.</summary>
            <overloads>Set the sсheduler settings.</overloads>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id of task to change scheduler settings.</para>
            </param>
            <param name="schedulerSettings">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>New scheduler settings to change in xml format.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.SetExecutionSettings(System.Guid,System.String)">SetExecutionSettings Method</seealso>
            <example>
            The following example shows call the <see cref="o:SetSchedulerSettings">SetSchedulerSettings</see> method.
            <code title="Example" description="" lang="C#">
            // Create scheduler setting in xml format
            var settings =
            	@"&lt;IsActive&gt;{True, False}&lt;/IsActive&gt;
            	&lt;ExecutePeriod&gt;{OneTime, EveryDay, EveryWeek, EveryMonth, OnDemand}&lt;/ExecutePeriod&gt; 
            	<!--Only for ExecutePeriod EveryWeek-->
            	&lt;DaysOfWeek&gt;{Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday}&lt;/DaysOfWeek&gt; 
            	<!--Only for ExecutePeriod EveryMonth-->
            	&lt;DaysOfMonth&gt;1-5,10,20&lt;/DaysOfMonth&gt; 
            	<!--Only for ExecutePeriod OnDemand--> 
            	&lt;FileName&gt;C:\Program Files\ZennoLab\signalFile.txt&lt;/FileName&gt;&lt;IsNeedDeleteFile&gt;{True, False}&lt;/IsNeedDeleteFile&gt;
            	&lt;StartDateType&gt;{Immediately, OnDate}&lt;/StartDateType&gt; 
            	<!--Only for StartDateType OnDate-->
            	&lt;StartDate&gt;{date DD.MM.YYYY hh:mm:ss}&lt;/StartDate&gt; 
            	&lt;AttemptsRange&gt;{5, 5 -10}&lt;/AttemptsRange&gt; &lt;IsClearSuccess&gt;{True, False}&lt;/IsClearSuccess&gt; 
            	<!--Do not use for round-the-clock distribution-->
            	&lt;Intervals&gt;{09:00,12:00 - 17:00}&lt;/Intervals&gt; 
            	&lt;RepeatType&gt;{Continued, ContinuedWithPause, Regularly, Count}&lt;/RepeatType&gt; 
            	<!--Every N or from N to M minutes for ContinuedWithPause and Regulary RepeatTypes; the amount of distributions for Count RepeatType;-->
            	&lt;RepeatCountDayRange&gt;{1, 5 -10}&lt;/RepeatCountDayRange&gt;
            	&lt;EndDateType&gt;{Infinity, OnDate, Count}&lt;/EndDateType&gt; 
            	<!--Only for EndDateType Count-->
            	&lt;RepeatCountTotalRange&gt;{50, 75-100}&lt;/RepeatCountTotalRange&gt; 
            	<!--Only for EndDateType OnDate--> 
            	&lt;EndDate&gt;{date DD.MM.YYYY hh:mm:ss}&lt;/EndDate&gt;";
            // Set the setting to the task with known id
            var id = Guid.Empty;
            ZennoPoster.SetSchedulerSettings(id, settings);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.SetSchedulerSettings(System.String,System.String)">
            <summary>Set the sсheduler settings by name.</summary>
            <overloads>Set the sсheduler settings.</overloads>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Name of task to change scheduler settings. Finds the first occurrence.</para>
            </param>
            <param name="schedulerSettings">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>New scheduler settings to change in xml format.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.SetExecutionSettings(System.Guid,System.String)">SetExecutionSettings Method</seealso>
            <example>
            The following example shows call the <see cref="o:SetSchedulerSettings">SetSchedulerSettings</see> method.
            <code title="Example" description="" lang="C#">
            // Create scheduler setting in xml format
            var settings =
            	@"&lt;IsActive&gt;{True, False}&lt;/IsActive&gt;
            	&lt;ExecutePeriod&gt;{OneTime, EveryDay, EveryWeek, EveryMonth, OnDemand}&lt;/ExecutePeriod&gt; 
            	<!--Only for ExecutePeriod EveryWeek-->
            	&lt;DaysOfWeek&gt;{Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday}&lt;/DaysOfWeek&gt; 
            	<!--Only for ExecutePeriod EveryMonth-->
            	&lt;DaysOfMonth&gt;1-5,10,20&lt;/DaysOfMonth&gt; 
            	<!--Only for ExecutePeriod OnDemand--> 
            	&lt;FileName&gt;C:\Program Files\ZennoLab\signalFile.txt&lt;/FileName&gt;&lt;IsNeedDeleteFile&gt;{True, False}&lt;/IsNeedDeleteFile&gt;
            	&lt;StartDateType&gt;{Immediately, OnDate}&lt;/StartDateType&gt; 
            	<!--Only for StartDateType OnDate-->
            	&lt;StartDate&gt;{date DD.MM.YYYY hh:mm:ss}&lt;/StartDate&gt; 
            	&lt;AttemptsRange&gt;{5, 5 -10}&lt;/AttemptsRange&gt; &lt;IsClearSuccess&gt;{True, False}&lt;/IsClearSuccess&gt; 
            	<!--Do not use for round-the-clock distribution-->
            	&lt;Intervals&gt;{09:00,12:00 - 17:00}&lt;/Intervals&gt; 
            	&lt;RepeatType&gt;{Continued, ContinuedWithPause, Regularly, Count}&lt;/RepeatType&gt; 
            	<!--Every N or from N to M minutes for ContinuedWithPause and Regulary RepeatTypes; the amount of distributions for Count RepeatType;-->
            	&lt;RepeatCountDayRange&gt;{1, 5 -10}&lt;/RepeatCountDayRange&gt;
            	&lt;EndDateType&gt;{Infinity, OnDate, Count}&lt;/EndDateType&gt; 
            	<!--Only for EndDateType Count-->
            	&lt;RepeatCountTotalRange&gt;{50, 75-100}&lt;/RepeatCountTotalRange&gt; 
            	<!--Only for EndDateType OnDate--> 
            	&lt;EndDate&gt;{date DD.MM.YYYY hh:mm:ss}&lt;/EndDate&gt;";
            // Set the setting to first task with known name
            var name = "Name";
            ZennoPoster.SetSchedulerSettings(name, settings);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ExportInputSettings(System.Guid)">
            <summary>Export the input settings</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id of task to export settings.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Input settings in xml format.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ImportInputSettings(System.Guid,System.String)">ImportInputSettings Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ExportInputSettings(System.Guid)">ExportInputSettings</see> method.
            <code title="Example" description="" lang="C#">
            // Getting GUID of the current project
            Guid id = Guid.Parse(project.TaskId);
            // Export setting in xml format
            string settings = ZennoPoster.ExportInputSettings(id);</code>
            <code title="Example2" description="" lang="PHP">
            // Export setting in xml format
            $id = System\Guid::Empty;
            $settings = ZennoLab\CommandCenter\ZennoPoster::ExportInputSettings($id);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.ImportInputSettings(System.Guid,System.String)">
            <summary>Export the input settings.</summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id of task to export settings.</para>
            </param>
            <param name="source">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>New input settings to change in xml format.</para>
            </param>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.ExportInputSettings(System.Guid)">ExportInputSettings Method</seealso>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.ImportInputSettings(System.Guid,System.String)">ImportInputSettings</see> method.
            <code title="Example" description="" lang="C#">
            // Setting GUID of the target project
            var id = Guid.Empty;
            var settings = ZennoPoster.ExportInputSettings(id);
            // Import setting in xml format
            ZennoPoster.ImportInputSettings(id, settings);</code><code title="Example2" description="" lang="PHP">
            // Import setting in xml format
            $id = System\Guid::Empty;
            $settings = ZennoLab\CommandCenter\ZennoPoster::ExportInputSettings($id);
            // Import setting in xml format
            ZennoLab\CommandCenter\ZennoPoster::ImportInputSettings($id, $settings);</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.GetThreadsCount">
            <summary>
            Returns count of tasks that currently running
            </summary>
            <returns>
            <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int.aspx">System.Int32</see></para>
            	<para>Count of threads.</para>
            </returns>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.GetThreadsCount">GetThreadsCount</see> method.
            <code title="Example" description="" lang="C#">        
            int count = ZennoPoster.GetThreadsCount();
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.GetThreadsCount(System.String)">
            <summary>
            Returns count of threads for certain tasks
            </summary>
            <param name="name">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.string</see></para>
            	<para>Name of a task.</para>
            </param>
            <returns>
            <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int.aspx">System.Int32</see></para>
            	<para>Count of threads.</para>
            </returns>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.GetThreadsCount(System.String)">GetThreadsCount</see> method.
            <code title="Example" description="" lang="C#">        
            int count = ZennoPoster.GetThreadsCount(taskName);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.GetThreadsCount(System.Guid)">
            <summary>
            Returns count of threads for certain tasks
            </summary>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.guid.aspx">System.Guid</see></para>
            	<para>Id of a task.</para>
            </param>
            <returns>
            <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int.aspx">System.Int32</see></para>
            	<para>Count of threads.</para>
            </returns>
            <example>
            The following example shows call the <see cref="M:ZennoLab.CommandCenter.ZennoPoster.GetThreadsCount(System.String)">GetThreadsCount</see> method.
            <code title="Example" description="" lang="C#">        
            int count = ZennoPoster.GetThreadsCount(taskName);
            </code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.ZennoPoster.Sms">
            <summary>Represents a set of methods to access SMS service API.</summary>
            <seealso cref="T:ZennoLab.CommandCenter.ZennoPoster">ZennoPoster Class</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.Sms.GetNumber(System.String,System.String@,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>Get number from service and return number and ID of operation.</summary>
            <param name="serviceDll">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Name of service dll.</para>
            </param>
            <param name="number">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
                <para>Result number.</para>
            </param>
            <param name="service">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
                <para>Type of service (for example ya - Yandex) .</para>
            </param>
            <param name="oper">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
                <para>Number operator or number country.</para>
            </param>
            <param name="forward">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.bool.aspx">System.Boolean</see></para>
                <para>Use forward.</para>
            </param>
            <param name="param">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Additional query parameters.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Operation ID.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Sms.SetStatus">SetStatus Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Sms.GetStatus">GetStatus Method</seealso>
            <example>
            <code title="Example" description="" lang="C#">
            string number;
            var id = ZennoPoster.Sms.GetNumber("SmsReg.dll", out number, "other", "ru");</code><code title="Example2" description="" lang="PHP">
            $number = "";
            $rowCount = ZennoLab\CommandCenter\ZennoPoster::Sms::GetNumber("SmsReg.dll", $number, "other", "ru");</code></example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.Sms.SetStatus(System.String,System.String,ZennoLab.InterfacesLibrary.SmsService.Enums.SmsServiceStatus,System.String,System.String)">
            <summary>Set status for operation by ID.</summary>
            <param name="serviceDll">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Name of service dll.</para>
            </param>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>ID operation.</para>
            </param>
            <param name="status">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.Enums.Db.DbProvider">ZennoLab.InterfacesLibrary.Enums.Db.DbProvider</see></para>
            	<para>Status.</para>
            </param>
            <param name="forwardNum">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Number for forwading.</para>
            </param>
            <param name="param">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Additional query parameters.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.Int32</see></para>
            	<para>Status.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Sms.SetStatus">GetNumber Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Sms.GetStatus">GetStatus Method</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.SmsService.Enums.SmsServiceStatus">SmsServiceStatus Enumeration</seealso>
            <example>
            	<code title="Example" description="" lang="C#">
            var id = ZennoPoster.Sms.SetStatus("SmsReg.dll", id, InterfacesLibrary.SmsService.Enums.SmsServiceStatus.Ready);</code>
            	<code title="Example2" description="" lang="PHP">
            $status = ZennoLab\CommandCenter\ZennoPoster::Sms::SetStatus("SmsReg.dll", $id, InterfacesLibrary\SmsService\Enums\SmsServiceStatus::Ready);</code>
            </example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.Sms.GetStatus(System.String,System.String,System.String,System.Int32)">
            <summary>Get code or status message.</summary>
            <param name="serviceDll">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Name of service dll.</para>
            </param>
            <param name="id">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>ID operation.</para>
            </param>
            <param name="param">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>Additional query parameters.</para>
            </param>
            <param name="timeout">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>Wait code timeout in minutes.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.Int32</see></para>
            	<para>The code or status message.</para>
            </returns>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Sms.SetStatus">SetStatus Method</seealso>
            <seealso cref="M:ZennoLab.CommandCenter.ZennoPoster.Sms.GetStatus">GetNumber Method</seealso>
            <example>
            	<code title="Example" description="" lang="C#">
            var code = ZennoPoster.Sms.GetStatus("SmsReg.dll", id);</code>
            	<code title="Example2" description="" lang="PHP">
            $code = ZennoLab\CommandCenter\ZennoPoster::Sms::GetStatus("SmsReg.dll", $id);</code>
            </example>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.CommandCenter.ZennoPoster.IpTools">
            <summary>Represents a set of methods to access IP infos.</summary>
            <seealso cref="T:ZennoLab.CommandCenter.ZennoPoster">ZennoPoster Class</seealso>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.IpTools.GetGeoposition(System.String,System.Double@,System.Double@)">
            <summary>Gets geoposition according with the ip.</summary>
            <param name="ip">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The IP address for the proxy.</para>
            </param>
            <param name="latitude">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The position's latitude in decimal degrees.</para>
            </param>
            <param name="longitude">
            	<para>Type: <see cref="!:https://msdn.microsoft.com/en-us/library/system.double.aspx">System.Double</see></para>
            	<para>The position's longitude in decimal degrees.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZennoPoster.IpTools.GetTimezone(System.String,System.Int32@,System.Int32@)">
            <summary>Gets timezone according with the ip.</summary>
            <param name="ip">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The IP address for the proxy.</para>
            </param>
            <param name="hours">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The number of hours in the difference between the current time zone and UTC.</para>
            </param>
            <param name="minutes">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see></para>
            	<para>The number of minutes in the difference between the current time zone and UTC.</para>
            </param>
            <remarks>
            	<para></para>
            </remarks>
            <requirements>
            	<para>
            		<strong>Target Platforms:</strong>
            		<em>Desktop:</em> Windows XP SP3 and older. <em>Server:</em> Windows Server 2003 and older.</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToString(System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация строки в строку :) </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToStringArray(System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация строки в массив строк </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToInt(System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация в число </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToDouble(System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация в число </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToIntArray(System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация строки в массив строк </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToBoolean(System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация во флаг </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToPoint(System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация во точку </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToHe(System.String,System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация в элемент </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToDocument(System.String,System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация в документ </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToTab(System.String,System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация в таб </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToHECollection(System.String,System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация в коллекцию элементов </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToDocumentCollection(System.String,System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация в коллекцию элементов </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToTabArray(System.String,System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация в массив табов </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToInstance(System.String,System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация в массив табов </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToInstanceArray(System.String,System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация в массив табов </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToBitmap(System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация строки в строку :) </summary>
        </member>
        <member name="M:ZennoLab.CommandCenter.ZPConverter.ConvertToRectangle(System.String,ZennoLab.CommandCenter.CommandTransfer,System.Boolean,System.Boolean@)">
            <summary> конвертация во точку </summary>
        </member>
    </members>
</doc>
